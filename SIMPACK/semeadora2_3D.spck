!file.version=3.7! Removing this line will make the file unreadable

!**********************************************************************
! Simpack Version Information
!**********************************************************************
version.number = 20220002
version.desc   = ''
version.build  = 122

!**********************************************************************
!  Global parameters
!**********************************************************************
searchpath (              1                                       ) = '.'
gravity (                 1                                       ) = 0.00000000000000000E+00 ! Gravity
gravity (                 2                                       ) = 0.00000000000000000E+00 ! Gravity
gravity (                 3                                       ) = -9.81000000000000050E+00 ! Gravity
vehicle.startvel                                                    = 0.00000000000000000E+00 ! Vehicle initial velocity
vehicle.applystartvel                                               = 0                       ! Apply vehicle initial velocity at solver start
glob.compat.flxnodeori                                              = 0                       ! Flexbody Node Orientation Method
glob.compat.afcf                                                    = 0                       ! References Frame for Joint and Force Element Forces and Torques
rw.cont.meth                                                        = 2                       ! MISCPAR_RW_CONTACT_METHOD
rw.linear                                                           = 0                       ! MISCPAR_RW_PROFILE_LINEARIZATION_METHOD
time                                                                = 0.00000000000000000E+00 ! Time
slv.active                                                          = $SLV_SolverSettings     ! Active SolverSettings element
track.active                                                        = null                    ! Active Track element
prop3d.bg.base.color.r                                              = 2.15000000000000000E+02 ! Background color (red component)
prop3d.bg.base.color.g                                              = 2.15000000000000000E+02 ! Background color (green component)
prop3d.bg.base.color.b                                              = 2.15000000000000000E+02 ! Background color (blue component)
prop3d.bg.base.color.t                                              = 0.00000000000000000E+00 ! Background color (transparency component)
prop3d.bg.grad.color.r                                              = 2.55000000000000000E+02 ! Gradient color (red component)
prop3d.bg.grad.color.g                                              = 2.55000000000000000E+02 ! Gradient color (green component)
prop3d.bg.grad.color.b                                              = 2.55000000000000000E+02 ! Gradient color (blue component)
prop3d.bg.grad.color.t                                              = 0.00000000000000000E+00 ! Gradient color (transparency component)
prop3d.bg.gradient                                                  = 1                       ! 0 = constant, 1 = gradient
prop3d.marker.size                                                  = 0.00000000000000000E+00 ! length of Marker axes, if value is zero, use "auto"
prop3d.marker.auto                                                  = 1                       ! 0 = user defined, 1 = auto size determination
prop3d.marker.color.r                                               = 0.00000000000000000E+00 ! Marker color (red component)
prop3d.marker.color.g                                               = 0.00000000000000000E+00 ! Marker color (green component)
prop3d.marker.color.b                                               = 0.00000000000000000E+00 ! Marker color (blue component)
prop3d.marker.color.t                                               = 0.00000000000000000E+00 ! Marker color (transparency component)
prop3d.display                                                      = 1                       ! 1 = shaded,  2 = wireframe, 3 = hidden line
prop3d.bbox                                                         = 0                       ! 0 = exclude all refsys objects, 1 = include all refsys objects
prop2d.joint.visible                                                = 1                       ! Joints visible
prop2d.force.visible                                                = 1                       ! Forces visible
prop2d.constr.visible                                               = 1                       ! Constraints visible
prop2d.sensor.visible                                               = 0                       ! Sensors visible
prop2d.grid.visible                                                 = 0                       ! Show grid
prop2d.grid.hor.start                                               = 0.00000000000000000E+00 ! Horizontal offset
prop2d.grid.hor.step                                                = 1.00000000000000000E+01 ! Horizontal step
prop2d.grid.vert.start                                              = 0.00000000000000000E+00 ! Vertical offset
prop2d.grid.vert.step                                               = 1.00000000000000000E+01 ! Vertical step
prop2d.line.width                                                   = 0                       ! Line width
prop2d.proj.dir                                                     = 2                       ! Projection direction


!**********************************************************************
! Substructures
!**********************************************************************
substr.file (                       $S_esteira1                   ) = 'esteira_3D.spck'       ! Filename
substr.id (                         $S_esteira1                   ) = '1'                     ! Substructure Id

substr.file (                       $S_esteira2                   ) = 'esteira_3D.spck'       ! Filename
substr.id (                         $S_esteira2                   ) = '2'                     ! Substructure Id

substr.file (                       $S_rocker1                    ) = 'Rocker.spck'           ! Filename
substr.id (                         $S_rocker1                    ) = '1'                     ! Substructure Id

substr.file (                       $S_rocker2                    ) = 'Rocker.spck'           ! Filename
substr.id (                         $S_rocker2                    ) = '2'                     ! Substructure Id

substr.file (                       $S_roda1                      ) = 'RODA_3D.spck'          ! Filename
substr.id (                         $S_roda1                      ) = '1'                     ! Substructure Id

substr.file (                       $S_roda2                      ) = 'RODA_3D.spck'          ! Filename
substr.id (                         $S_roda2                      ) = '2'                     ! Substructure Id

substr.file (                       $S_LinhaSemente1              ) = './LinhaDeSemente_3D.spck' ! Filename
substr.id (                         $S_LinhaSemente1              ) = '1'                     ! Substructure Id

substr.file (                       $S_LinhaSemente2              ) = './LinhaDeSemente_3D.spck' ! Filename
substr.id (                         $S_LinhaSemente2              ) = '2'                     ! Substructure Id

substr.file (                       $S_LinhaSemente3              ) = './LinhaDeSemente_3D.spck' ! Filename
substr.id (                         $S_LinhaSemente3              ) = '3'                     ! Substructure Id

substr.file (                       $S_LinhaSemente4              ) = './LinhaDeSemente_3D.spck' ! Filename
substr.id (                         $S_LinhaSemente4              ) = '4'                     ! Substructure Id

substr.file (                       $S_LinhaSemente5              ) = './LinhaDeSemente_3D.spck' ! Filename
substr.id (                         $S_LinhaSemente5              ) = '5'                     ! Substructure Id

substr.file (                       $S_LinhaSemente6              ) = './LinhaDeSemente_3D.spck' ! Filename
substr.id (                         $S_LinhaSemente6              ) = '6'                     ! Substructure Id

substr.file (                       $S_disco1                     ) = './RODA_simples_3D.spck' ! Filename
substr.id (                         $S_disco1                     ) = '8'                     ! Substructure Id

substr.file (                       $S_disco2                     ) = './RODA_simples_3D.spck' ! Filename
substr.id (                         $S_disco2                     ) = '9'                     ! Substructure Id

substr.file (                       $S_disco3                     ) = './RODA_simples_3D.spck' ! Filename
substr.id (                         $S_disco3                     ) = '7'                     ! Substructure Id

substr.file (                       $S_disco4                     ) = './RODA_simples_3D.spck' ! Filename
substr.id (                         $S_disco4                     ) = '10'                    ! Substructure Id

substr.file (                       $S_disco5                     ) = './RODA_simples_3D.spck' ! Filename
substr.id (                         $S_disco5                     ) = '6'                     ! Substructure Id

substr.file (                       $S_disco6                     ) = './RODA_simples_3D.spck' ! Filename
substr.id (                         $S_disco6                     ) = '11'                    ! Substructure Id

!**********************************************************************
! Views
!**********************************************************************
view.type (                         $V_WorkingView                ) = 0                       ! Projection type
view.pos (                1 ,       $V_WorkingView                ) = 5.37270307540893555E+00 ! Position
view.pos (                2 ,       $V_WorkingView                ) = -9.55085849761962891E+00 ! Position
view.pos (                3 ,       $V_WorkingView                ) = 1.64677286148071289E+00 ! Position
view.orient (             1 ,       $V_WorkingView                ) = -7.07106769084930420E-01 ! Orientation
view.orient (             2 ,       $V_WorkingView                ) = -0.00000000000000000E+00 ! Orientation
view.orient (             3 ,       $V_WorkingView                ) = -0.00000000000000000E+00 ! Orientation
view.orient (             4 ,       $V_WorkingView                ) = -7.07106769084930420E-01 ! Orientation
view.angle (                        $V_WorkingView                ) = 7.85398185253143311E-01 ! Lens angle
view.fclip.auto (                   $V_WorkingView                ) = 1                       ! Front clipping plane auto
view.bclip.auto (                   $V_WorkingView                ) = 1                       ! Back clipping plane auto
view.fclip.value (                  $V_WorkingView                ) = 9.99999977648258209E-03 ! Front clipping plane value
view.bclip.value (                  $V_WorkingView                ) = 2.83816967010498047E+01 ! Back clipping plane value
view.rotcenter.type (               $V_WorkingView                ) = 0                       ! Rotation center type
view.rotcenter.adjust (             $V_WorkingView                ) = 1                       ! Adjust rotation center
view.motion.active (                $V_WorkingView                ) = 0                       ! Camera is moved

view.type (                         $V_Ortho                      ) = 0                       ! Projection type
view.pos (                1 ,       $V_Ortho                      ) = 6.85247761197388172E-01 ! Position
view.pos (                2 ,       $V_Ortho                      ) = -7.19467787537723780E-01 ! Position
view.pos (                3 ,       $V_Ortho                      ) = 3.52404586199554615E-01 ! Position
view.orient (             1 ,       $V_Ortho                      ) = 5.24405717849731445E-01 ! Orientation
view.orient (             2 ,       $V_Ortho                      ) = 2.11789414286613464E-01 ! Orientation
view.orient (             3 ,       $V_Ortho                      ) = 2.88275688886642456E-01 ! Orientation
view.orient (             4 ,       $V_Ortho                      ) = 7.72684276103973389E-01 ! Orientation
view.angle (                        $V_Ortho                      ) = 7.85398185253143311E-01 ! Lens angle
view.fclip.auto (                   $V_Ortho                      ) = 1                       ! Front clipping plane auto
view.bclip.auto (                   $V_Ortho                      ) = 1                       ! Back clipping plane auto
view.rotcenter.type (               $V_Ortho                      ) = 0                       ! Rotation center type
view.rotcenter.adjust (             $V_Ortho                      ) = 1                       ! Adjust rotation center
view.motion.active (                $V_Ortho                      ) = 0                       ! Camera is moved

view.type (                         $V_Front                      ) = 1                       ! Projection type
view.pos (                1 ,       $V_Front                      ) = 0.00000000000000000E+00 ! Position
view.pos (                2 ,       $V_Front                      ) = -5.99845290184020996E-01 ! Position
view.pos (                3 ,       $V_Front                      ) = 2.98023294931226701E-08 ! Position
view.orient (             1 ,       $V_Front                      ) = 7.07106769084930420E-01 ! Orientation
view.orient (             2 ,       $V_Front                      ) = 0.00000000000000000E+00 ! Orientation
view.orient (             3 ,       $V_Front                      ) = 0.00000000000000000E+00 ! Orientation
view.orient (             4 ,       $V_Front                      ) = 7.07106769084930420E-01 ! Orientation
view.height (                       $V_Front                      ) = 8.00000000000000044E-01 ! View height
view.fclip.auto (                   $V_Front                      ) = 1                       ! Front clipping plane auto
view.bclip.auto (                   $V_Front                      ) = 1                       ! Back clipping plane auto
view.rotcenter.type (               $V_Front                      ) = 0                       ! Rotation center type
view.rotcenter.adjust (             $V_Front                      ) = 1                       ! Adjust rotation center
view.motion.active (                $V_Front                      ) = 0                       ! Camera is moved

view.type (                         $V_Top                        ) = 1                       ! Projection type
view.pos (                1 ,       $V_Top                        ) = 0.00000000000000000E+00 ! Position
view.pos (                2 ,       $V_Top                        ) = -7.49893719330430031E-04 ! Position
view.pos (                3 ,       $V_Top                        ) = 5.99095582962036133E-01 ! Position
view.orient (             1 ,       $V_Top                        ) = 2.51447520582814832E-08 ! Orientation
view.orient (             2 ,       $V_Top                        ) = 0.00000000000000000E+00 ! Orientation
view.orient (             3 ,       $V_Top                        ) = 0.00000000000000000E+00 ! Orientation
view.orient (             4 ,       $V_Top                        ) = 1.00000000000000000E+00 ! Orientation
view.height (                       $V_Top                        ) = 8.00000000000000044E-01 ! View height
view.fclip.auto (                   $V_Top                        ) = 1                       ! Front clipping plane auto
view.bclip.auto (                   $V_Top                        ) = 1                       ! Back clipping plane auto
view.rotcenter.type (               $V_Top                        ) = 0                       ! Rotation center type
view.rotcenter.adjust (             $V_Top                        ) = 1                       ! Adjust rotation center
view.motion.active (                $V_Top                        ) = 0                       ! Camera is moved

!**********************************************************************
! Solver Settings
!**********************************************************************
slv.kin.task (                      $SLV_SolverSettings           ) = 3                       ! KIN_INTPAR_TASK
slv.kin.tout.n (                    $SLV_SolverSettings           ) = 201                     ! KIN_INTPAR_NUM_STEPS
slv.kin.tol (                       $SLV_SolverSettings           ) = 9.99999999999999955E-07 ! Kinematics tolerance
slv.integ.fix.driftstab (           $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_INTPAR_FIXINT_CONSTAB
slv.integ.fix.jac.update (          $SLV_SolverSettings           ) = 3                       ! TIME_INTEG_PAR_FIXINT_JACOBIAN_EVAL
slv.integ.fix.part.type (           $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_INTPAR_FIXINT_JAC_PART_TYPE
slv.integ.fix.order (               $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_PAR_FIXINT_METHOD_ORDER
slv.integ.fix.posup (               $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_PAR_FIXINT_POS_COORD_UPDATE
slv.integ.sodasrt.formalism (       $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_PAR_FORMALISM
slv.integ.type (                    $SLV_SolverSettings           ) = 1                       ! Integrator type
slv.integ.jac.struc (               $SLV_SolverSettings           ) = 3                       ! SOLVER_TIME_INTEG_PAR_JACOBIAN_STRUC
slv.integ.jac.incr.type (           $SLV_SolverSettings           ) = 2                       ! Jacobian increment type
slv.integ.linalg.slv (              $SLV_SolverSettings           ) = 1                       ! 1 = dense ; 2 = sparse (UMFPACK) ; 3 = sparse (PARDISO)
slv.integ.lsode.meth (              $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_PAR_LSODE_INTEG_METHOD
slv.integ.lsode.jac.struc (         $SLV_SolverSettings           ) = 3                       ! SOLVER_TIME_INTEG_PAR_LSODE_JACOBIAN_STRUC
slv.integ.lsode.maxord (            $SLV_SolverSettings           ) = 5                       ! TIME_INTEG_INTPAR_LSODE_MAX_ORDER
slv.integ.maxrhs (                  $SLV_SolverSettings           ) = -1                      ! TIME_INTEG_INTPAR_MAX_RHS
slv.integ.maxstp (                  $SLV_SolverSettings           ) = -1                      ! TIME_INTEG_INTPAR_MAX_TIME_STEPS
slv.integ.newton.maxit (            $SLV_SolverSettings           ) = 7                       ! TIME_INTEG_INTPAR_NEWTON_ITERS
slv.integ.tout.n (                  $SLV_SolverSettings           ) = 101                     ! TIME_INTEG_INTPAR_OUTPUT_NUM_POINTS
slv.integ.sodasrt2.iestsc (         $SLV_SolverSettings           ) = 2                       ! TIME_INTEG_PAR_SODASRT20_ERROR_EST_SCALE_METHOD
slv.integ.sodasrt.maxord (          $SLV_SolverSettings           ) = 5                       ! TIME_INTEG_INTPAR_SODASRT_MAX_ORDER
slv.integ.sodasrt1.errnorm (        $SLV_SolverSettings           ) = 3                       ! TIME_INTEG_PAR_SODASRT_NORM_TYPE
slv.integ.tout.mode (               $SLV_SolverSettings           ) = 0                       ! TIME_INTEG_INTPAR_TOUT_MODE
slv.integ.meetop (                  $SLV_SolverSettings           ) = 0                       ! TIME_INTEG_BOOLPAR_EVAL_MOTION_EQ_AT_COMM_POINTS
slv.integ.driftstab (               $SLV_SolverSettings           ) = 2                       ! TIME_INTEG_BOOLPAR_ACCEPT_DRIFT
slv.integ.root (                    $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_BOOLPAR_DETECT_IMPLICIT_DISCONTINUITIES
slv.integ.jac.part (                $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_BOOLPAR_PARTITIONED_EVAL_JACOBIAN
slv.integ.addrhscall (              $SLV_SolverSettings           ) = 0                       ! TIME_INTEG_BOOLPAR_EXTRA_EVAL_AFTER_SUCCESSFUL_STEP
slv.integ.linalg.red2nd (           $SLV_SolverSettings           ) = 1                       ! Linear equations second order reduction
slv.integ.fix.oneleg (              $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_BOOLPAR_FIXINT_IMPLICIT_ONE_LEG_OLC
slv.integ.fix.conforce (            $SLV_SolverSettings           ) = 0                       ! TIME_INTEG_BOOLPAR_FIXINT_CONFORCE
slv.integ.fix.clss (                $SLV_SolverSettings           ) = 2                       ! TIME_INTEG_BOOLPAR_FIXINT_METHOD_CLASS
slv.integ.sodasrt1.scal.lam (       $SLV_SolverSettings           ) = 9.99999999999999955E-08 ! TIME_INTEG_SCALARPAR_SCALE_CONSTRAINT_FORCES
slv.integ.sodasrt1.scal.acc (       $SLV_SolverSettings           ) = 1.00000000000000000E+00 ! TIME_INTEG_SCALARPAR_SCALE_ACCELERATIONS
slv.integ.newton.eps (              $SLV_SolverSettings           ) = 3.33000000000000018E-01 ! TIME_INTEG_SCALARPAR_NEWTON_ERROR_BOUND
slv.integ.fix.utcpar (              $SLV_SolverSettings           ) = 1.00000000000000000E+00 ! TIME_INTEG_SCALARPAR_FIXINT_EULER_UTC
slv.integ.fix.olcpar (              $SLV_SolverSettings           ) = 5.00000000000000000E-01 ! TIME_INTEG_SCALARPAR_FIXINT_ONE_LEG_OLC
slv.integ.sodasrt2.estfac (         $SLV_SolverSettings           ) = 9.99999999999999955E-07 ! TIME_INTEG_SCALARPAR_SODASRT20_ERROR_EST_SCALE_FACTOR
slv.integ.tout.freq (               $SLV_SolverSettings           ) = { 200 Hz }              ! TIME_INTEG_PAR_OUTPUT_FREQ
slv.integ.tend.time (               $SLV_SolverSettings           ) = { 9 s }                 ! TIME_INTEG_TIMEPAR_END_TIME
slv.integ.atol.gen (                $SLV_SolverSettings           ) = 1.00000000000000008E-05 ! TIME_INTEG_PARSTATE_DEFAULT
slv.integ.atol.vel (                $SLV_SolverSettings           ) = 1.00000000000000005E-04 ! TIME_INTEG_PARSTATE_VEL
slv.integ.rtol.gen (                $SLV_SolverSettings           ) = 9.99999999999999955E-08 ! TIME_INTEG_PARSTATE_DEFAULT
slv.integ.rtol.vel (                $SLV_SolverSettings           ) = 1.00000000000000008E-05 ! TIME_INTEG_PARSTATE_VEL
slv.meas.geo (                      $SLV_SolverSettings           ) = 1                       ! Animation data to result file
slv.meas.sensor.pos (               $SLV_SolverSettings           ) = 1                       ! Sensor position to result file
slv.meas.sensor.vel (               $SLV_SolverSettings           ) = 1                       ! Sensor velocity to result file
slv.meas.sensor.acc (               $SLV_SolverSettings           ) = 1                       ! Sensor acceleration to result file
slv.meas.force.af (                 $SLV_SolverSettings           ) = 1                       ! applied forces to result file
slv.meas.force.ov (                 $SLV_SolverSettings           ) = 1                       ! Force output values to result file
slv.meas.force.st.dyn (             $SLV_SolverSettings           ) = 1                       ! Force dynamic states to result file
slv.meas.force.st.alg (             $SLV_SolverSettings           ) = 1                       ! Force algebraic states to result file
slv.meas.joint.st.pos (             $SLV_SolverSettings           ) = 1                       ! Joint position to result file
slv.meas.joint.st.vel (             $SLV_SolverSettings           ) = 1                       ! Joint velocity to result file
slv.meas.joint.st.acc (             $SLV_SolverSettings           ) = 1                       ! Joint acceleration to result file
slv.meas.joint.cf (                 $SLV_SolverSettings           ) = 1                       ! Joint constraining forces to result file
slv.meas.body.pos (                 $SLV_SolverSettings           ) = 1                       ! Body position to result file
slv.meas.body.vel (                 $SLV_SolverSettings           ) = 1                       ! Body velocity to result file
slv.meas.body.acc (                 $SLV_SolverSettings           ) = 1                       ! Body acceleration to result file
slv.meas.body.flx.st.pos (          $SLV_SolverSettings           ) = 1                       ! Body elastic state position to result file
slv.meas.body.flx.st.vel (          $SLV_SolverSettings           ) = 1                       ! Body elastic state velocity to result file
slv.meas.body.flx.st.acc (          $SLV_SolverSettings           ) = 1                       ! Body elastic state acceleration to result file
slv.meas.marker.st.alg (            $SLV_SolverSettings           ) = 1                       ! Marker algebraic state to result file
slv.meas.constr.cf (                $SLV_SolverSettings           ) = 1                       ! Constraint constrained state to result file
slv.meas.yout (                     $SLV_SolverSettings           ) = 1                       ! y-Outputs to result file
slv.meas.result (                   $SLV_SolverSettings           ) = 1                       ! Result elements to result file
slv.meas.subvar (                   $SLV_SolverSettings           ) = 1                       ! MEAS_BOOLPAR_SUBVAR
slv.assmbl.task (                   $SLV_SolverSettings           ) = 3                       ! ASSMBL_PAR_SOLVER_MODE
slv.output.path.type (              $SLV_SolverSettings           ) = 1                       ! OUTPUT_PATH_PAR_TYPE
slv.output.file.desc (              $SLV_SolverSettings           ) = ''                      ! Description written to the output file if supported
slv.compat.solver (                 $SLV_SolverSettings           ) = 0                       ! 0 = no (new solver); 1 = yes (classic solver)
slv.txt (                           $SLV_SolverSettings           ) = ''                      ! Comment

!**********************************************************************
! SubVars
!**********************************************************************
subvar.str (                        $_H                           ) = '$S_rocker1.$_H + (0.4395) - (0.25)' ! Definition
subvar.dflt (                       $_H                           ) = ''                      ! Default value

subvar.str (                        $_L                           ) = '1.5'                   ! Definition
subvar.dflt (                       $_L                           ) = ''                      ! Default value

subvar.str (                        $_W                           ) = '1.75'                  ! Definition
subvar.dflt (                       $_W                           ) = ''                      ! Default value

subvar.str (                        $_mboogie                     ) = '2826'                  ! Definition
subvar.dflt (                       $_mboogie                     ) = ''                      ! Default value

subvar.str (                        $_m                           ) = '$_mboogie + (1072.8499999999999) + (1072.8499999999999) + $S_rocker1.$_m + $S_rocker2.$_m + (75.349999999999994) + (75.349999999999994)' ! Definition
subvar.dflt (                       $_m                           ) = ''                      ! Default value

subvar.str (                        $_vd                          ) = '2'                     ! Definition
subvar.dflt (                       $_vd                          ) = ''                      ! Default value

subvar.str (                        $_lambda                      ) = '1'                     ! Definition
subvar.dflt (                       $_lambda                      ) = ''                      ! Default value

subvar.str (                        $_beta                        ) = '0.3'                   ! Definition
subvar.dflt (                       $_beta                        ) = ''                      ! Default value

subvar.str (                        $_deltaW                      ) = '0.47'                  ! Definition
subvar.dflt (                       $_deltaW                      ) = ''                      ! Default value

subvar.str (                        $_DistLinhas                  ) = '0.5'                   ! Definition
subvar.dflt (                       $_DistLinhas                  ) = ''                      ! Default value

subvar.str (                        $_DistXBogiePar               ) = '0.73'                  ! Definition
subvar.dflt (                       $_DistXBogiePar               ) = ''                      ! Default value

subvar.str (                        $_DistZBogiePar               ) = '0.45 + 0.072303391 +0.07 -0.004 -0.4 -0.1 -0.06' ! Definition
subvar.dflt (                       $_DistZBogiePar               ) = ''                      ! Default value

subvar.str (                        $_DistPar                     ) = '0.3'                   ! Definition
subvar.dflt (                       $_DistPar                     ) = ''                      ! Default value

subvar.str (                        $_EstrutZ                     ) = '-0.19'                 ! Definition
subvar.dflt (                       $_EstrutZ                     ) = ''                      ! Default value

subvar.str (                        $_fix_botinhaZ                ) = '-0.24 + 0.03 + $_EstrutZ' ! Definition
subvar.dflt (                       $_fix_botinhaZ                ) = ''                      ! Default value

subvar.str (                        $_fix_botinhaX                ) = '1.03'                  ! Definition
subvar.dflt (                       $_fix_botinhaX                ) = ''                      ! Default value

subvar.str (                        $_rarb                        ) = '0.05'                  ! Definition
subvar.dflt (                       $_rarb                        ) = ''                      ! Default value

subvar.str (                        $_ksolo                       ) = '5*10^6'                ! Definition
subvar.dflt (                       $_ksolo                       ) = ''                      ! Default value

subvar.str (                        $_csolo                       ) = '10^6'                  ! Definition
subvar.dflt (                       $_csolo                       ) = ''                      ! Default value

subvar.str (                        $_A_bot                       ) = '5e-4'                  ! Definition
subvar.dflt (                       $_A_bot                       ) = ''                      ! Default value

subvar.str (                        $_IF                          ) = '2*20400/2'             ! Definition
subvar.dflt (                       $_IF                          ) = ''                      ! Default value

subvar.str (                        $_FzDownBot                   ) = '100'                   ! Definition
subvar.dflt (                       $_FzDownBot                   ) = ''                      ! Default value

subvar.str (                        $_z                           ) = '0'                     ! Definition
subvar.dflt (                       $_z                           ) = ''                      ! Default value

!**********************************************************************
! Reference systems
!**********************************************************************
refsys.type (                       $R_Isys                       ) = 1                       ! Type
refsys.attr.2d.pos.x (              $R_Isys                       ) = -9.00000000000000000E+01
refsys.attr.2d.pos.y (              $R_Isys                       ) = -1.00000000000000000E+01
refsys.attr.2d.width (              $R_Isys                       ) = 2.40000000000000000E+02
refsys.attr.2d.height (             $R_Isys                       ) = 2.20000000000000000E+02

marker.type (                       $M_Isys                       ) = 1                       ! Type
marker.parent (                     $M_Isys                       ) = $R_Isys                 ! Reference system

marker.type (                       $M_Isys_1                     ) = 2                       ! Type
marker.parent (                     $M_Isys_1                     ) = $R_Isys                 ! Reference system
marker.pos (              2 ,       $M_Isys_1                     ) = -1.00000000000000000E+00 ! Position

marker.type (                       $M_Isys_2                     ) = 2                       ! Type
marker.parent (                     $M_Isys_2                     ) = $R_Isys                 ! Reference system
marker.pos (              2 ,       $M_Isys_2                     ) = 1.00000000000000000E+00 ! Position

prim.type (                         $P_Isys                       ) = 30                      ! Type
prim.ref (                          $P_Isys                       ) = $M_Isys                 ! Reference Marker
prim.color.r (            1 ,       $P_Isys                       ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Isys                       ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Isys                       ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Isys                       ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.par (                3 ,       $P_Isys                       ) = 1.00000000000000006E-01 ! [m] Length


!**********************************************************************
! Bodies
!**********************************************************************
body.m (                            $B_chao                       ) = 1.00000000000000000E+00 ! Mass of the Body
body.mp (                           $B_chao                       ) = 0                       ! 0=manual; 1=auto (based on geometry); 2=mass manual, CG & Inertia auto
body.I.tens (             1 ,   1 , $B_chao                       ) = 1.00000000000000000E+00 ! Moments of inertia
body.I.tens (             2 ,   2 , $B_chao                       ) = 1.00000000000000000E+00 ! Moments of inertia
body.I.tens (             3 ,   3 , $B_chao                       ) = 1.00000000000000000E+00 ! Moments of inertia
body.I.kind (                       $B_chao                       ) = -1                      ! Kind of I-tensor specification: -1=wrt CG; 0=wrt BRF; 1=wrt Marker
body.attr.2d.pos.x (                $B_chao                       ) = -3.00000000000000000E+01
body.attr.2d.pos.y (                $B_chao                       ) = 3.00000000000000000E+01
body.attr.2d.width (                $B_chao                       ) = 1.10000000000000000E+02
body.attr.2d.height (               $B_chao                       ) = 8.00000000000000000E+01

marker.type (                       $M_chao_BRF                   ) = 1                       ! Type
marker.parent (                     $M_chao_BRF                   ) = $B_chao                 ! Body
marker.flx.type (                   $M_chao_BRF                   ) = 4                       ! Flexible type

marker.type (                       $M_chao_PontaBotinha1_contact ) = -87                     ! Type
marker.parent (                     $M_chao_PontaBotinha1_contact ) = $B_chao                 ! Body
marker.st.alg (           1 ,       $M_chao_PontaBotinha1_contact ) = -5.92994779709861852E+00 ! Algebraic states
marker.st.alg (           2 ,       $M_chao_PontaBotinha1_contact ) = -2.49987890511126853E-01 ! Algebraic states
marker.par (              1 ,       $M_chao_PontaBotinha1_contact ) = 1.00000000000000000E+00 ! [-] Marker type
marker.par (              2 ,       $M_chao_PontaBotinha1_contact ) = $M_Boogie_PontaBotinha1_contact ! [-] Parent Marker
marker.par (              3 ,       $M_chao_PontaBotinha1_contact ) = $P_chao                 ! [-] Contact geometry Primitive

marker.type (                       $M_chao_PontaBotinha2_contact ) = -87                     ! Type
marker.parent (                     $M_chao_PontaBotinha2_contact ) = $B_chao                 ! Body
marker.st.alg (           1 ,       $M_chao_PontaBotinha2_contact ) = -5.92998100261974592E+00 ! Algebraic states
marker.st.alg (           2 ,       $M_chao_PontaBotinha2_contact ) = 2.50012411836301185E-01 ! Algebraic states
marker.par (              1 ,       $M_chao_PontaBotinha2_contact ) = 1.00000000000000000E+00 ! [-] Marker type
marker.par (              2 ,       $M_chao_PontaBotinha2_contact ) = $M_Boogie_PontaBotinha2_contact ! [-] Parent Marker
marker.par (              3 ,       $M_chao_PontaBotinha2_contact ) = $P_chao                 ! [-] Contact geometry Primitive

marker.type (                       $M_chao_PontaBotinha3_contact ) = -87                     ! Type
marker.parent (                     $M_chao_PontaBotinha3_contact ) = $B_chao                 ! Body
marker.st.alg (           1 ,       $M_chao_PontaBotinha3_contact ) = -5.92992446091511383E+00 ! Algebraic states
marker.st.alg (           2 ,       $M_chao_PontaBotinha3_contact ) = -7.49988314433908565E-01 ! Algebraic states
marker.par (              1 ,       $M_chao_PontaBotinha3_contact ) = 1.00000000000000000E+00 ! [-] Marker type
marker.par (              2 ,       $M_chao_PontaBotinha3_contact ) = $M_Boogie_PontaBotinha3_contact ! [-] Parent Marker
marker.par (              3 ,       $M_chao_PontaBotinha3_contact ) = $P_chao                 ! [-] Contact geometry Primitive

marker.type (                       $M_chao_PontaBotinha4_contact ) = -87                     ! Type
marker.parent (                     $M_chao_PontaBotinha4_contact ) = $B_chao                 ! Body
marker.st.alg (           1 ,       $M_chao_PontaBotinha4_contact ) = -5.93002332701082935E+00 ! Algebraic states
marker.st.alg (           2 ,       $M_chao_PontaBotinha4_contact ) = 7.50012349299313819E-01 ! Algebraic states
marker.par (              1 ,       $M_chao_PontaBotinha4_contact ) = 1.00000000000000000E+00 ! [-] Marker type
marker.par (              2 ,       $M_chao_PontaBotinha4_contact ) = $M_Boogie_PontaBotinha4_contact ! [-] Parent Marker
marker.par (              3 ,       $M_chao_PontaBotinha4_contact ) = $P_chao                 ! [-] Contact geometry Primitive

marker.type (                       $M_chao_PontaBotinha5_contact ) = -87                     ! Type
marker.parent (                     $M_chao_PontaBotinha5_contact ) = $B_chao                 ! Body
marker.st.alg (           1 ,       $M_chao_PontaBotinha5_contact ) = -5.92990997452359903E+00 ! Algebraic states
marker.st.alg (           2 ,       $M_chao_PontaBotinha5_contact ) = -1.24998886131836251E+00 ! Algebraic states
marker.par (              1 ,       $M_chao_PontaBotinha5_contact ) = 1.00000000000000000E+00 ! [-] Marker type
marker.par (              2 ,       $M_chao_PontaBotinha5_contact ) = $M_Boogie_PontaBotinha5_contact ! [-] Parent Marker
marker.par (              3 ,       $M_chao_PontaBotinha5_contact ) = $P_chao                 ! [-] Contact geometry Primitive

marker.type (                       $M_chao_PontaBotinha6_contact ) = -87                     ! Type
marker.parent (                     $M_chao_PontaBotinha6_contact ) = $B_chao                 ! Body
marker.st.alg (           1 ,       $M_chao_PontaBotinha6_contact ) = -5.93006570618627293E+00 ! Algebraic states
marker.st.alg (           2 ,       $M_chao_PontaBotinha6_contact ) = 1.25001161851977383E+00 ! Algebraic states
marker.par (              1 ,       $M_chao_PontaBotinha6_contact ) = 1.00000000000000000E+00 ! [-] Marker type
marker.par (              2 ,       $M_chao_PontaBotinha6_contact ) = $M_Boogie_PontaBotinha6_contact ! [-] Parent Marker
marker.par (              3 ,       $M_chao_PontaBotinha6_contact ) = $P_chao                 ! [-] Contact geometry Primitive

marker.type (                       $M_chao_BRF_movido            ) = 2                       ! Type
marker.parent (                     $M_chao_BRF_movido            ) = $B_chao                 ! Body
marker.pos (              1 ,       $M_chao_BRF_movido            ) = 8.00000000000000000E+00 ! Position

joint.from (                        $J_chao                       ) = $M_Isys                 ! From Marker
joint.to (                          $J_chao                       ) = $M_chao_BRF             ! To Marker
joint.type (                        $J_chao                       ) = 1                       ! Type
joint.st.pos (            1 ,       $J_chao                       ) = 0.00000000000000000E+00 ! Position
joint.st.vel (            1 ,       $J_chao                       ) = 0.00000000000000000E+00 ! Velocity
joint.attr.2d.pos.x (     1 ,       $J_chao                       ) = 20
joint.attr.2d.pos.y (     1 ,       $J_chao                       ) = 170
joint.attr.2d.ori (       1 ,       $J_chao                       ) = 270
joint.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $J_chao      ) = 20, 20
joint.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $J_chao      ) = 210, 187
joint.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $J_chao        ) = 20, 20
joint.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $J_chao        ) = 110, 153

prim.type (                         $P_chao                       ) = 43                      ! Type
prim.ref (                          $P_chao                       ) = $M_chao_BRF_movido      ! Reference Marker
prim.ang (                1 ,       $P_chao                       ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_chao                       ) = 0.00000000000000000E+00 ! Angles
prim.ang (                3 ,       $P_chao                       ) = 0.00000000000000000E+00 ! Angles
prim.vtx (                1 ,   1 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,   2 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,   3 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,   4 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,   5 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,   6 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,   7 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,   8 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,   9 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,  10 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,  11 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,  12 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,  13 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,  14 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,  15 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,  16 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,  17 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,  18 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,  19 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,  20 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,  21 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,  22 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  23 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  24 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  25 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  26 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  27 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  28 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  29 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  30 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  31 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  32 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  33 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  34 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  35 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  36 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  37 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  38 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  39 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  40 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  41 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  42 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  43 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  44 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  45 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  46 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  47 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  48 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  49 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  50 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  51 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  52 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  53 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  54 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  55 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  56 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  57 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  58 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  59 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  60 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  61 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  62 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  63 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  64 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  65 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  66 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  67 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  68 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  69 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  70 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  71 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  72 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  73 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  74 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  75 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  76 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  77 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  78 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  79 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  80 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  81 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  82 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  83 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  84 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  85 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  86 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  87 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  88 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  89 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  90 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  91 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  92 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  93 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  94 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  95 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  96 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  97 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  98 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  99 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 100 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 101 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 102 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 103 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 104 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 105 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 106 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 107 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 108 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 109 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 110 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 111 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 112 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 113 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 114 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 115 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 116 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 117 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 118 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 119 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 120 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 121 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 122 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 123 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 124 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 125 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 126 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 127 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 128 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 129 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 130 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 131 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 132 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 133 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 134 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 135 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 136 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 137 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 138 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 139 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 140 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 141 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 142 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 143 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 144 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 145 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 146 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 147 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 148 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 149 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 150 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 151 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 152 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 153 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 154 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 155 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 156 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 157 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 158 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 159 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 160 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 161 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 162 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 163 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 164 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 165 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 166 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 167 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 168 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 169 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 170 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 171 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 172 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 173 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 174 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 175 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 176 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 177 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 178 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 179 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 180 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 181 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 182 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 183 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 184 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 185 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 186 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 187 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 188 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 189 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 190 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 191 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 192 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 193 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 194 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 195 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 196 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 197 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 198 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 199 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 200 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 201 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 202 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 203 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 204 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 205 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 206 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 207 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 208 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 209 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 210 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 211 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 212 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 213 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 214 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 215 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 216 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 217 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 218 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 219 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 220 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 221 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 222 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 223 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 224 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 225 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 226 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 227 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 228 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 229 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 230 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 231 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 232 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 233 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 234 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 235 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 236 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 237 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 238 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 239 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 240 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 241 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 242 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 243 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 244 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 245 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 246 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 247 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 248 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 249 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 250 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 251 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 252 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 253 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 254 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 255 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 256 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 257 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 258 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 259 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 260 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 261 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 262 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 263 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 264 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 265 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 266 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 267 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 268 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 269 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 270 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 271 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 272 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 273 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 274 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 275 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 276 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 277 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 278 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 279 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 280 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 281 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 282 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 283 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 284 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 285 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 286 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 287 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 288 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 289 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 290 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 291 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 292 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 293 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 294 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 295 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 296 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 297 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 298 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 299 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 300 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 301 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 302 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 303 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 304 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 305 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 306 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 307 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 308 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 309 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 310 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 311 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 312 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 313 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 314 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 315 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 316 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 317 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 318 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 319 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 320 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 321 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 322 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 323 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 324 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 325 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 326 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 327 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 328 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 329 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 330 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 331 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 332 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 333 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 334 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 335 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 336 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 337 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 338 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 339 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 340 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 341 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 342 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 343 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 344 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 345 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 346 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 347 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 348 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 349 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 350 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 351 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 352 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 353 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 354 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 355 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 356 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 357 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 358 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 359 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 360 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 361 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 362 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 363 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 364 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 365 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 366 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 367 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 368 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 369 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 370 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 371 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 372 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 373 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 374 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 375 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 376 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 377 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 378 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 379 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 380 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 381 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 382 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 383 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 384 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 385 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 386 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 387 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 388 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 389 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 390 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 391 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 392 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 393 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 394 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 395 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 396 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 397 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 398 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 399 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 400 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 401 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 402 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 403 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 404 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 405 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 406 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 407 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 408 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 409 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 410 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 411 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 412 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 413 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 414 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 415 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 416 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 417 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 418 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 419 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 420 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 421 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 , 422 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 , 423 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 , 424 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 , 425 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 , 426 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 , 427 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 , 428 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 , 429 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 , 430 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 , 431 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 , 432 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 , 433 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 , 434 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 , 435 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 , 436 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 , 437 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 , 438 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 , 439 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 , 440 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 , 441 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                2 ,   1 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                2 ,   2 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,   3 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,   4 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,   5 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,   6 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,   7 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,   8 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,   9 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  10 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  11 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  12 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  13 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  14 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  15 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  16 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  17 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  18 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  19 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  20 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  21 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                2 ,  22 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                2 ,  23 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  24 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  25 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  26 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  27 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  28 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  29 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  30 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  31 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  32 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  33 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  34 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  35 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  36 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  37 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  38 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  39 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  40 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  41 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  42 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                2 ,  43 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                2 ,  44 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  45 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  46 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  47 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  48 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  49 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  50 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  51 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  52 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  53 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  54 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  55 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  56 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  57 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  58 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  59 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  60 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  61 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  62 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  63 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                2 ,  64 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                2 ,  65 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  66 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  67 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  68 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  69 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  70 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  71 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  72 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  73 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  74 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  75 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  76 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  77 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  78 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  79 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  80 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  81 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  82 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  83 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  84 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                2 ,  85 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                2 ,  86 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  87 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  88 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  89 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  90 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  91 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  92 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  93 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  94 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  95 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  96 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  97 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  98 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  99 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 100 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 101 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 102 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 103 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 104 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 105 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 106 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 107 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 108 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 109 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 110 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 111 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 112 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 113 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 114 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 115 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 116 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 117 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 118 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 119 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 120 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 121 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 122 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 123 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 124 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 125 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 126 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 127 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 128 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 129 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 130 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 131 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 132 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 133 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 134 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 135 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 136 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 137 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 138 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 139 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 140 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 141 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 142 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 143 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 144 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 145 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 146 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 147 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 148 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 149 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 150 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 151 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 152 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 153 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 154 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 155 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 156 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 157 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 158 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 159 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 160 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 161 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 162 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 163 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 164 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 165 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 166 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 167 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 168 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 169 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 170 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 171 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 172 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 173 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 174 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 175 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 176 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 177 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 178 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 179 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 180 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 181 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 182 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 183 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 184 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 185 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 186 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 187 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 188 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 189 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 190 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 191 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 192 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 193 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 194 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 195 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 196 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 197 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 198 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 199 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 200 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 201 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 202 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 203 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 204 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 205 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 206 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 207 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 208 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 209 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 210 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 211 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 212 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 213 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 214 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 215 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 216 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 217 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 218 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 219 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 220 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 221 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 222 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 223 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 224 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 225 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 226 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 227 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 228 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 229 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 230 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 231 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 232 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 233 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 234 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 235 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 236 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 237 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 238 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 239 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 240 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 241 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 242 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 243 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 244 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 245 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 246 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 247 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 248 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 249 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 250 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 251 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 252 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 253 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 254 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 255 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 256 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 257 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 258 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 259 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 260 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 261 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 262 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 263 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 264 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 265 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 266 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 267 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 268 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 269 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 270 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 271 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 272 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 273 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 274 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 275 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 276 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 277 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 278 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 279 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 280 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 281 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 282 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 283 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 284 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 285 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 286 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 287 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 288 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 289 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 290 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 291 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 292 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 293 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 294 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 295 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 296 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 297 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 298 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 299 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 300 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 301 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 302 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 303 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 304 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 305 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 306 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 307 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 308 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 309 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 310 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 311 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 312 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 313 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 314 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 315 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 316 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 317 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 318 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 319 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 320 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 321 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 322 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 323 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 324 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 325 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 326 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 327 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 328 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 329 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 330 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 331 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 332 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 333 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 334 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 335 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 336 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 337 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 338 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 339 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 340 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 341 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 342 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 343 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 344 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 345 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 346 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 347 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 348 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 349 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 350 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 351 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 352 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 353 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 354 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 355 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 356 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 357 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 358 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 359 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 360 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 361 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 362 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 363 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 364 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 365 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 366 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 367 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 368 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 369 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 370 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 371 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 372 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 373 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 374 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 375 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 376 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 377 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 378 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 379 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 380 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 381 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 382 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 383 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 384 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 385 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 386 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 387 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 388 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 389 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 390 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 391 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 392 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 393 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 394 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 395 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 396 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 397 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 398 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 399 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 400 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 401 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 402 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 403 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 404 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 405 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 406 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 407 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 408 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 409 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 410 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 411 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 412 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 413 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 414 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 415 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 416 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 417 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 418 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 419 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 420 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 421 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 422 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 423 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 424 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 425 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 426 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 427 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 428 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 429 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 430 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 431 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 432 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 433 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 434 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 435 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 436 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 437 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 438 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 439 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 440 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 441 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                3 ,   1 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,   2 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,   3 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,   4 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,   5 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,   6 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,   7 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,   8 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,   9 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  10 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  11 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  12 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  13 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  14 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  15 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  16 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  17 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  18 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  19 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  20 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  21 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  22 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  23 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  24 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  25 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  26 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  27 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  28 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  29 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  30 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  31 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  32 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  33 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  34 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  35 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  36 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  37 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  38 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  39 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  40 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  41 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  42 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  43 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  44 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  45 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  46 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  47 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  48 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  49 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  50 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  51 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  52 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  53 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  54 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  55 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  56 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  57 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  58 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  59 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  60 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  61 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  62 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  63 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  64 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  65 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  66 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  67 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  68 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  69 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  70 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  71 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  72 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  73 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  74 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  75 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  76 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  77 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  78 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  79 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  80 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  81 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  82 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  83 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  84 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  85 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  86 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  87 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  88 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  89 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  90 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  91 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  92 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  93 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  94 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  95 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  96 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  97 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  98 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  99 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 100 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 101 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 102 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 103 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 104 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 105 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 106 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 107 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 108 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 109 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 110 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 111 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 112 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 113 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 114 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 115 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 116 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 117 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 118 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 119 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 120 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 121 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 122 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 123 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 124 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 125 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 126 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 127 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 128 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 129 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 130 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 131 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 132 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 133 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 134 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 135 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 136 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 137 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 138 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 139 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 140 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 141 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 142 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 143 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 144 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 145 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 146 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 147 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 148 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 149 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 150 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 151 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 152 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 153 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 154 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 155 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 156 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 157 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 158 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 159 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 160 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 161 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 162 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 163 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 164 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 165 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 166 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 167 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 168 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 169 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 170 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 171 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 172 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 173 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 174 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 175 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 176 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 177 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 178 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 179 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 180 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 181 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 182 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 183 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 184 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 185 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 186 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 187 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 188 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 189 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 190 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 191 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 192 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 193 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 194 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 195 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 196 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 197 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 198 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 199 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 200 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 201 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 202 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 203 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 204 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 205 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 206 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 207 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 208 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 209 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 210 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 211 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 212 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 213 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 214 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 215 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 216 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 217 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 218 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 219 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 220 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 221 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 222 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 223 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 224 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 225 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 226 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 227 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 228 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 229 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 230 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 231 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 232 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 233 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 234 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 235 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 236 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 237 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 238 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 239 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 240 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 241 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 242 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 243 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 244 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 245 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 246 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 247 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 248 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 249 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 250 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 251 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 252 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 253 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 254 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 255 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 256 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 257 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 258 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 259 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 260 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 261 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 262 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 263 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 264 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 265 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 266 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 267 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 268 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 269 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 270 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 271 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 272 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 273 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 274 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 275 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 276 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 277 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 278 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 279 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 280 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 281 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 282 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 283 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 284 , $P_chao                       ) = { 0.09*$_z }            ! Vertices
prim.vtx (                3 , 285 , $P_chao                       ) = { 0.389*$_z }           ! Vertices
prim.vtx (                3 , 286 , $P_chao                       ) = { 0.5*$_z }             ! Vertices
prim.vtx (                3 , 287 , $P_chao                       ) = { 0.389*$_z }           ! Vertices
prim.vtx (                3 , 288 , $P_chao                       ) = { 0.09*$_z }            ! Vertices
prim.vtx (                3 , 289 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 290 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 291 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 292 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 293 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 294 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 295 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 296 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 297 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 298 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 299 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 300 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 301 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 302 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 303 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 304 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 305 , $P_chao                       ) = { 0.389*$_z }           ! Vertices
prim.vtx (                3 , 306 , $P_chao                       ) = { 0.738*$_z }           ! Vertices
prim.vtx (                3 , 307 , $P_chao                       ) = { 0.866*$_z }           ! Vertices
prim.vtx (                3 , 308 , $P_chao                       ) = { 0.738*$_z }           ! Vertices
prim.vtx (                3 , 309 , $P_chao                       ) = { 0.389*$_z }           ! Vertices
prim.vtx (                3 , 310 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 311 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 312 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 313 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 314 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 315 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 316 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 317 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 318 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 319 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 320 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 321 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 322 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 323 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 324 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 325 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 326 , $P_chao                       ) = { 0.5*$_z }             ! Vertices
prim.vtx (                3 , 327 , $P_chao                       ) = { 0.866*$_z }           ! Vertices
prim.vtx (                3 , 328 , $P_chao                       ) = $_z                     ! Vertices
prim.vtx (                3 , 329 , $P_chao                       ) = { 0.866*$_z }           ! Vertices
prim.vtx (                3 , 330 , $P_chao                       ) = { 0.5*$_z }             ! Vertices
prim.vtx (                3 , 331 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 332 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 333 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 334 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 335 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 336 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 337 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 338 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 339 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 340 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 341 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 342 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 343 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 344 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 345 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 346 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 347 , $P_chao                       ) = { 0.389*$_z }           ! Vertices
prim.vtx (                3 , 348 , $P_chao                       ) = { 0.738*$_z }           ! Vertices
prim.vtx (                3 , 349 , $P_chao                       ) = { 0.866*$_z }           ! Vertices
prim.vtx (                3 , 350 , $P_chao                       ) = { 0.738*$_z }           ! Vertices
prim.vtx (                3 , 351 , $P_chao                       ) = { 0.389*$_z }           ! Vertices
prim.vtx (                3 , 352 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 353 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 354 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 355 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 356 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 357 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 358 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 359 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 360 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 361 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 362 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 363 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 364 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 365 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 366 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 367 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 368 , $P_chao                       ) = { 0.09*$_z }            ! Vertices
prim.vtx (                3 , 369 , $P_chao                       ) = { 0.389*$_z }           ! Vertices
prim.vtx (                3 , 370 , $P_chao                       ) = { 0.5*$_z }             ! Vertices
prim.vtx (                3 , 371 , $P_chao                       ) = { 0.389*$_z }           ! Vertices
prim.vtx (                3 , 372 , $P_chao                       ) = { 0.09*$_z }            ! Vertices
prim.vtx (                3 , 373 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 374 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 375 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 376 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 377 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 378 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 379 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 380 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 381 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 382 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 383 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 384 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 385 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 386 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 387 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 388 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 389 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 390 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 391 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 392 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 393 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 394 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 395 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 396 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 397 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 398 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 399 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 400 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 401 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 402 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 403 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 404 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 405 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 406 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 407 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 408 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 409 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 410 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 411 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 412 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 413 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 414 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 415 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 416 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 417 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 418 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 419 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 420 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 421 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 422 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 423 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 424 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 425 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 426 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 427 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 428 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 429 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 430 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 431 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 432 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 433 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 434 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 435 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 436 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 437 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 438 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 439 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 440 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 441 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.color.r (            1 ,       $P_chao                       ) = 1.65000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_chao                       ) = 1.15000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_chao                       ) = 5.70000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_chao                       ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_chao                       ) = 2.50000000000000000E-01 ! Transparency
prim.mp.dens.solid (                $P_chao                       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_chao                       ) = 0.00000000000000000E+00 ! [-] Surface by
prim.par (                7 ,       $P_chao                       ) = 0.00000000000000000E+00 ! [-] Coordinate type
prim.par (                8 ,       $P_chao                       ) = 2.00000000000000000E+00 ! [-] Surface fitting type
prim.par (                9 ,       $P_chao                       ) = 3.00000000000000000E+00 ! [-] Spline degree in 1st dir
prim.par (               10 ,       $P_chao                       ) = 3.00000000000000000E+00 ! [-] Spline degree in 2nd dir
prim.par (               11 ,       $P_chao                       ) = 1.00000000000000006E-01 ! [-] Smoothing value
prim.par (               17 ,       $P_chao                       ) = 2.00000000000000000E+02 ! [-] No. graphic points in 1st dir
prim.par (               18 ,       $P_chao                       ) = 2.00000000000000000E+02 ! [-] No. graphic points in 2nd dir
prim.par (               19 ,       $P_chao                       ) = 0.00000000000000000E+00 ! [m] Graphics start 1st dir
prim.par (               20 ,       $P_chao                       ) = 0.00000000000000000E+00 ! [m] Graphics end 1st dir
prim.par (               21 ,       $P_chao                       ) = 0.00000000000000000E+00 ! [m] Graphics start 2nd dir
prim.par (               22 ,       $P_chao                       ) = 0.00000000000000000E+00 ! [m] Graphics end 2nd dir


body.m (                            $B_Boogie                     ) = 1.00000000000000000E+00 ! Mass of the Body
body.mp (                           $B_Boogie                     ) = 1                       ! 0=manual; 1=auto (based on geometry); 2=mass manual, CG & Inertia auto
body.I.tens (             1 ,   1 , $B_Boogie                     ) = 1.00000000000000000E+00 ! Moments of inertia
body.I.tens (             2 ,   2 , $B_Boogie                     ) = 1.00000000000000000E+00 ! Moments of inertia
body.I.tens (             3 ,   3 , $B_Boogie                     ) = 1.00000000000000000E+00 ! Moments of inertia
body.I.kind (                       $B_Boogie                     ) = -1                      ! Kind of I-tensor specification: -1=wrt CG; 0=wrt BRF; 1=wrt Marker
body.flx.dmp.all (                  $B_Boogie                     ) = 0.00000000000000000E+00 ! Damping input value

marker.type (                       $M_Boogie_BRF                 ) = 1                       ! Type
marker.parent (                     $M_Boogie_BRF                 ) = $B_Boogie               ! Body
marker.flx.type (                   $M_Boogie_BRF                 ) = 4                       ! Flexible type

marker.type (                       $M_Boogie_esteira1            ) = 2                       ! Type
marker.ref (                        $M_Boogie_esteira1            ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_esteira1            ) = $B_Boogie               ! Body
marker.pos (              2 ,       $M_Boogie_esteira1            ) = { -$_W/2  - (0.25)/2 }  ! Position
marker.pos (              3 ,       $M_Boogie_esteira1            ) = { -$_H/2 }              ! Position

marker.type (                       $M_Boogie_esteira2            ) = 2                       ! Type
marker.ref (                        $M_Boogie_esteira2            ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_esteira2            ) = $B_Boogie               ! Body
marker.pos (              2 ,       $M_Boogie_esteira2            ) = { $_W/2 + (0.25)/2 }    ! Position
marker.pos (              3 ,       $M_Boogie_esteira2            ) = { -$_H/2 }              ! Position

marker.type (                       $M_Boogie_rocker1             ) = 2                       ! Type
marker.parent (                     $M_Boogie_rocker1             ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_rocker1             ) = -1.00000000000000006E-01 ! Position
marker.pos (              2 ,       $M_Boogie_rocker1             ) = { -$_W/2 -$_deltaW + $S_rocker1.$_W/2 } ! Position
marker.pos (              3 ,       $M_Boogie_rocker1             ) = { $_H/2 }               ! Position

marker.type (                       $M_Boogie_rocker2             ) = 2                       ! Type
marker.parent (                     $M_Boogie_rocker2             ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_rocker2             ) = -1.00000000000000006E-01 ! Position
marker.pos (              2 ,       $M_Boogie_rocker2             ) = { $_W/2 +$_deltaW - $S_rocker1.$_W/2 } ! Position
marker.pos (              3 ,       $M_Boogie_rocker2             ) = { $_H/2 }               ! Position

marker.type (                       $M_Boogie_ParalelogramoCima1  ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoCima1  ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoCima1  ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoCima1  ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoCima1  ) = { -$_DistLinhas/2 }     ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoCima1  ) = { $_DistZBogiePar + $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoCima2  ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoCima2  ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoCima2  ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoCima2  ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoCima2  ) = { $_DistLinhas/2 }      ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoCima2  ) = { $_DistZBogiePar + $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoCima3  ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoCima3  ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoCima3  ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoCima3  ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoCima3  ) = { -3*$_DistLinhas/2 }   ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoCima3  ) = { $_DistZBogiePar + $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoCima4  ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoCima4  ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoCima4  ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoCima4  ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoCima4  ) = { 3*$_DistLinhas/2 }    ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoCima4  ) = { $_DistZBogiePar + $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoCima5  ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoCima5  ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoCima5  ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoCima5  ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoCima5  ) = { -5*$_DistLinhas/2 }   ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoCima5  ) = { $_DistZBogiePar + $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoCima6  ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoCima6  ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoCima6  ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoCima6  ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoCima6  ) = { 5*$_DistLinhas/2 }    ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoCima6  ) = { $_DistZBogiePar + $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoBaixo1 ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoBaixo1 ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoBaixo1 ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoBaixo1 ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoBaixo1 ) = { -$_DistLinhas/2 }     ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoBaixo1 ) = { $_DistZBogiePar - $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoBaixo2 ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoBaixo2 ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoBaixo2 ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoBaixo2 ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoBaixo2 ) = { $_DistLinhas/2 }      ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoBaixo2 ) = { $_DistZBogiePar - $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoBaixo3 ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoBaixo3 ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoBaixo3 ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoBaixo3 ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoBaixo3 ) = { -3*$_DistLinhas/2 }   ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoBaixo3 ) = { $_DistZBogiePar - $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoBaixo4 ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoBaixo4 ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoBaixo4 ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoBaixo4 ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoBaixo4 ) = { 3*$_DistLinhas/2 }    ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoBaixo4 ) = { $_DistZBogiePar - $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoBaixo5 ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoBaixo5 ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoBaixo5 ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoBaixo5 ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoBaixo5 ) = { -5*$_DistLinhas/2 }   ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoBaixo5 ) = { $_DistZBogiePar - $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoBaixo6 ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoBaixo6 ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoBaixo6 ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoBaixo6 ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoBaixo6 ) = { 5*$_DistLinhas/2 }    ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoBaixo6 ) = { $_DistZBogiePar - $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_PontaBotinha1       ) = 2                       ! Type
marker.parent (                     $M_Boogie_PontaBotinha1       ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_PontaBotinha1       ) = 7.00000000000000067E-02 ! Position
marker.pos (              2 ,       $M_Boogie_PontaBotinha1       ) = { -$_DistLinhas/2 }     ! Position
marker.pos (              3 ,       $M_Boogie_PontaBotinha1       ) = { -$_H/2 -0.39 }        ! Position

marker.type (                       $M_Boogie_PontaBotinha2       ) = 2                       ! Type
marker.parent (                     $M_Boogie_PontaBotinha2       ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_PontaBotinha2       ) = 7.00000000000000067E-02 ! Position
marker.pos (              2 ,       $M_Boogie_PontaBotinha2       ) = { $_DistLinhas/2 }      ! Position
marker.pos (              3 ,       $M_Boogie_PontaBotinha2       ) = { -$_H/2 -0.39 }        ! Position

marker.type (                       $M_Boogie_PontaBotinha3       ) = 2                       ! Type
marker.parent (                     $M_Boogie_PontaBotinha3       ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_PontaBotinha3       ) = 7.00000000000000067E-02 ! Position
marker.pos (              2 ,       $M_Boogie_PontaBotinha3       ) = { -3*$_DistLinhas/2 }   ! Position
marker.pos (              3 ,       $M_Boogie_PontaBotinha3       ) = { -$_H/2 -0.39 }        ! Position

marker.type (                       $M_Boogie_PontaBotinha4       ) = 2                       ! Type
marker.parent (                     $M_Boogie_PontaBotinha4       ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_PontaBotinha4       ) = 7.00000000000000067E-02 ! Position
marker.pos (              2 ,       $M_Boogie_PontaBotinha4       ) = { 3*$_DistLinhas/2 }    ! Position
marker.pos (              3 ,       $M_Boogie_PontaBotinha4       ) = { -$_H/2 -0.39 }        ! Position

marker.type (                       $M_Boogie_PontaBotinha5       ) = 2                       ! Type
marker.parent (                     $M_Boogie_PontaBotinha5       ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_PontaBotinha5       ) = 7.00000000000000067E-02 ! Position
marker.pos (              2 ,       $M_Boogie_PontaBotinha5       ) = { -5*$_DistLinhas/2 }   ! Position
marker.pos (              3 ,       $M_Boogie_PontaBotinha5       ) = { -$_H/2 -0.39 }        ! Position

marker.type (                       $M_Boogie_PontaBotinha6       ) = 2                       ! Type
marker.parent (                     $M_Boogie_PontaBotinha6       ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_PontaBotinha6       ) = 7.00000000000000067E-02 ! Position
marker.pos (              2 ,       $M_Boogie_PontaBotinha6       ) = { 5*$_DistLinhas/2 }    ! Position
marker.pos (              3 ,       $M_Boogie_PontaBotinha6       ) = { -$_H/2 -0.39 }        ! Position

marker.type (                       $M_Boogie_PontaBotinha1_contact) = -87                    ! Type
marker.parent (                     $M_Boogie_PontaBotinha1_contact) = $B_Boogie              ! Body
marker.pos (              1 ,       $M_Boogie_PontaBotinha1_contact) = 7.00000000000000067E-02 ! Position
marker.pos (              2 ,       $M_Boogie_PontaBotinha1_contact) = { -5*$_DistLinhas/2 }  ! Position
marker.pos (              3 ,       $M_Boogie_PontaBotinha1_contact) = { -$_H/2 -0.39 }       ! Position
marker.st.alg (           1 ,       $M_Boogie_PontaBotinha1_contact) = 2.20992507303291268E-04 ! Algebraic states
marker.st.alg (           2 ,       $M_Boogie_PontaBotinha1_contact) = 1.56984364810478771E+00 ! Algebraic states
marker.par (              1 ,       $M_Boogie_PontaBotinha1_contact) = 0.00000000000000000E+00 ! [-] Marker type
marker.par (              3 ,       $M_Boogie_PontaBotinha1_contact) = $P_Boogie_CBotinha1    ! [-] Contact geometry Primitive
marker.par (              4 ,       $M_Boogie_PontaBotinha1_contact) = 1.00000000000000000E+00 ! [-] Normal orientation
marker.par (              6 ,       $M_Boogie_PontaBotinha1_contact) = 1.00000000000000000E+00 ! [-] Contact point determin. method
marker.par (              7 ,       $M_Boogie_PontaBotinha1_contact) = 9.99999999999999955E-08 ! [-] Solver tolerance

marker.type (                       $M_Boogie_PontaBotinha2_contact) = -87                    ! Type
marker.parent (                     $M_Boogie_PontaBotinha2_contact) = $B_Boogie              ! Body
marker.pos (              1 ,       $M_Boogie_PontaBotinha2_contact) = 7.00000000000000067E-02 ! Position
marker.pos (              2 ,       $M_Boogie_PontaBotinha2_contact) = { -5*$_DistLinhas/2 }  ! Position
marker.pos (              3 ,       $M_Boogie_PontaBotinha2_contact) = { -$_H/2 -0.39 }       ! Position
marker.st.alg (           1 ,       $M_Boogie_PontaBotinha2_contact) = 2.26974470117930220E-04 ! Algebraic states
marker.st.alg (           2 ,       $M_Boogie_PontaBotinha2_contact) = 1.57044892288359828E+00 ! Algebraic states
marker.par (              1 ,       $M_Boogie_PontaBotinha2_contact) = 0.00000000000000000E+00 ! [-] Marker type
marker.par (              3 ,       $M_Boogie_PontaBotinha2_contact) = $P_Boogie_CBotinha2    ! [-] Contact geometry Primitive
marker.par (              4 ,       $M_Boogie_PontaBotinha2_contact) = 1.00000000000000000E+00 ! [-] Normal orientation
marker.par (              6 ,       $M_Boogie_PontaBotinha2_contact) = 1.00000000000000000E+00 ! [-] Contact point determin. method
marker.par (              7 ,       $M_Boogie_PontaBotinha2_contact) = 9.99999999999999955E-08 ! [-] Solver tolerance

marker.type (                       $M_Boogie_PontaBotinha3_contact) = -87                    ! Type
marker.parent (                     $M_Boogie_PontaBotinha3_contact) = $B_Boogie              ! Body
marker.pos (              1 ,       $M_Boogie_PontaBotinha3_contact) = 7.00000000000000067E-02 ! Position
marker.pos (              2 ,       $M_Boogie_PontaBotinha3_contact) = { -5*$_DistLinhas/2 }  ! Position
marker.pos (              3 ,       $M_Boogie_PontaBotinha3_contact) = { -$_H/2 -0.39 }       ! Position
marker.st.alg (           1 ,       $M_Boogie_PontaBotinha3_contact) = 3.14161393703995770E+01 ! Algebraic states
marker.st.alg (           2 ,       $M_Boogie_PontaBotinha3_contact) = 1.56942049881397327E+00 ! Algebraic states
marker.par (              1 ,       $M_Boogie_PontaBotinha3_contact) = 0.00000000000000000E+00 ! [-] Marker type
marker.par (              3 ,       $M_Boogie_PontaBotinha3_contact) = $P_Boogie_CBotinha3    ! [-] Contact geometry Primitive
marker.par (              4 ,       $M_Boogie_PontaBotinha3_contact) = 1.00000000000000000E+00 ! [-] Normal orientation
marker.par (              6 ,       $M_Boogie_PontaBotinha3_contact) = 1.00000000000000000E+00 ! [-] Contact point determin. method
marker.par (              7 ,       $M_Boogie_PontaBotinha3_contact) = 9.99999999999999955E-08 ! [-] Solver tolerance

marker.type (                       $M_Boogie_PontaBotinha4_contact) = -87                    ! Type
marker.parent (                     $M_Boogie_PontaBotinha4_contact) = $B_Boogie              ! Body
marker.pos (              1 ,       $M_Boogie_PontaBotinha4_contact) = 7.00000000000000067E-02 ! Position
marker.pos (              2 ,       $M_Boogie_PontaBotinha4_contact) = { -5*$_DistLinhas/2 }  ! Position
marker.pos (              3 ,       $M_Boogie_PontaBotinha4_contact) = { -$_H/2 -0.39 }       ! Position
marker.st.alg (           1 ,       $M_Boogie_PontaBotinha4_contact) = 2.26301916561992740E-04 ! Algebraic states
marker.st.alg (           2 ,       $M_Boogie_PontaBotinha4_contact) = 1.57122379619014363E+00 ! Algebraic states
marker.par (              1 ,       $M_Boogie_PontaBotinha4_contact) = 0.00000000000000000E+00 ! [-] Marker type
marker.par (              3 ,       $M_Boogie_PontaBotinha4_contact) = $P_Boogie_CBotinha4    ! [-] Contact geometry Primitive
marker.par (              4 ,       $M_Boogie_PontaBotinha4_contact) = 1.00000000000000000E+00 ! [-] Normal orientation
marker.par (              6 ,       $M_Boogie_PontaBotinha4_contact) = 1.00000000000000000E+00 ! [-] Contact point determin. method
marker.par (              7 ,       $M_Boogie_PontaBotinha4_contact) = 9.99999999999999955E-08 ! [-] Solver tolerance

marker.type (                       $M_Boogie_PontaBotinha5_contact) = -87                    ! Type
marker.parent (                     $M_Boogie_PontaBotinha5_contact) = $B_Boogie              ! Body
marker.pos (              1 ,       $M_Boogie_PontaBotinha5_contact) = 7.00000000000000067E-02 ! Position
marker.pos (              2 ,       $M_Boogie_PontaBotinha5_contact) = { -5*$_DistLinhas/2 }  ! Position
marker.pos (              3 ,       $M_Boogie_PontaBotinha5_contact) = { -$_H/2 -0.39 }       ! Position
marker.st.alg (           1 ,       $M_Boogie_PontaBotinha5_contact) = 2.02490574816181600E-04 ! Algebraic states
marker.st.alg (           2 ,       $M_Boogie_PontaBotinha5_contact) = 1.56915974901624078E+00 ! Algebraic states
marker.par (              1 ,       $M_Boogie_PontaBotinha5_contact) = 0.00000000000000000E+00 ! [-] Marker type
marker.par (              3 ,       $M_Boogie_PontaBotinha5_contact) = $P_Boogie_CBotinha5    ! [-] Contact geometry Primitive
marker.par (              4 ,       $M_Boogie_PontaBotinha5_contact) = 1.00000000000000000E+00 ! [-] Normal orientation
marker.par (              6 ,       $M_Boogie_PontaBotinha5_contact) = 1.00000000000000000E+00 ! [-] Contact point determin. method
marker.par (              7 ,       $M_Boogie_PontaBotinha5_contact) = 9.99999999999999955E-08 ! [-] Solver tolerance

marker.type (                       $M_Boogie_PontaBotinha6_contact) = -87                    ! Type
marker.parent (                     $M_Boogie_PontaBotinha6_contact) = $B_Boogie              ! Body
marker.pos (              1 ,       $M_Boogie_PontaBotinha6_contact) = 7.00000000000000067E-02 ! Position
marker.pos (              2 ,       $M_Boogie_PontaBotinha6_contact) = { -5*$_DistLinhas/2 }  ! Position
marker.pos (              3 ,       $M_Boogie_PontaBotinha6_contact) = { -$_H/2 -0.39 }       ! Position
marker.st.alg (           1 ,       $M_Boogie_PontaBotinha6_contact) = 2.13342030638615957E-04 ! Algebraic states
marker.st.alg (           2 ,       $M_Boogie_PontaBotinha6_contact) = 1.57200283976655553E+00 ! Algebraic states
marker.par (              1 ,       $M_Boogie_PontaBotinha6_contact) = 0.00000000000000000E+00 ! [-] Marker type
marker.par (              3 ,       $M_Boogie_PontaBotinha6_contact) = $P_Boogie_CBotinha6    ! [-] Contact geometry Primitive
marker.par (              4 ,       $M_Boogie_PontaBotinha6_contact) = 1.00000000000000000E+00 ! [-] Normal orientation
marker.par (              6 ,       $M_Boogie_PontaBotinha6_contact) = 1.00000000000000000E+00 ! [-] Contact point determin. method
marker.par (              7 ,       $M_Boogie_PontaBotinha6_contact) = 9.99999999999999955E-08 ! [-] Solver tolerance

marker.type (                       $M_Boogie_Disco1              ) = 2                       ! Type
marker.parent (                     $M_Boogie_Disco1              ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_Disco1              ) = { $_fix_botinhaX -0.463 } ! Position
marker.pos (              2 ,       $M_Boogie_Disco1              ) = { -$_DistLinhas/2 -0.015 } ! Position
marker.pos (              3 ,       $M_Boogie_Disco1              ) = { $_fix_botinhaZ -0.237 } ! Position

marker.type (                       $M_Boogie_Disco2              ) = 2                       ! Type
marker.parent (                     $M_Boogie_Disco2              ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_Disco2              ) = { $_fix_botinhaX -0.463 } ! Position
marker.pos (              2 ,       $M_Boogie_Disco2              ) = { $_DistLinhas/2 -0.015 } ! Position
marker.pos (              3 ,       $M_Boogie_Disco2              ) = { $_fix_botinhaZ -0.237 } ! Position

marker.type (                       $M_Boogie_Disco3              ) = 2                       ! Type
marker.parent (                     $M_Boogie_Disco3              ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_Disco3              ) = { $_fix_botinhaX -0.463 } ! Position
marker.pos (              2 ,       $M_Boogie_Disco3              ) = { -3*$_DistLinhas/2 -0.015 } ! Position
marker.pos (              3 ,       $M_Boogie_Disco3              ) = { $_fix_botinhaZ -0.237 } ! Position

marker.type (                       $M_Boogie_Disco4              ) = 2                       ! Type
marker.parent (                     $M_Boogie_Disco4              ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_Disco4              ) = { $_fix_botinhaX -0.463 } ! Position
marker.pos (              2 ,       $M_Boogie_Disco4              ) = { 3*$_DistLinhas/2 -0.015 } ! Position
marker.pos (              3 ,       $M_Boogie_Disco4              ) = { $_fix_botinhaZ -0.237 } ! Position

marker.type (                       $M_Boogie_Disco5              ) = 2                       ! Type
marker.parent (                     $M_Boogie_Disco5              ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_Disco5              ) = { $_fix_botinhaX -0.463 } ! Position
marker.pos (              2 ,       $M_Boogie_Disco5              ) = { -5*$_DistLinhas/2 -0.015 } ! Position
marker.pos (              3 ,       $M_Boogie_Disco5              ) = { $_fix_botinhaZ -0.237 } ! Position

marker.type (                       $M_Boogie_Disco6              ) = 2                       ! Type
marker.parent (                     $M_Boogie_Disco6              ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_Disco6              ) = { $_fix_botinhaX -0.463 } ! Position
marker.pos (              2 ,       $M_Boogie_Disco6              ) = { 5*$_DistLinhas/2 -0.015 } ! Position
marker.pos (              3 ,       $M_Boogie_Disco6              ) = { $_fix_botinhaZ -0.237 } ! Position

joint.from (                        $J_Boogie                     ) = $M_Isys                 ! From Marker
joint.to (                          $J_Boogie                     ) = $M_Boogie_BRF           ! To Marker
joint.type (                        $J_Boogie                     ) = 25                      ! Type
joint.st.pos (            1 ,       $J_Boogie                     ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            2 ,       $J_Boogie                     ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            3 ,       $J_Boogie                     ) = 2.00000000000000000E+00 ! Position
joint.st.pos (            4 ,       $J_Boogie                     ) = 1.00000000000000000E+00 ! Position
joint.st.vel (            1 ,       $J_Boogie                     ) = 0.00000000000000000E+00 ! Velocity
joint.st.vel (            2 ,       $J_Boogie                     ) = 0.00000000000000000E+00 ! Velocity
joint.st.vel (            3 ,       $J_Boogie                     ) = 7.12445416791284009E-56 ! Velocity
joint.st.vel (            4 ,       $J_Boogie                     ) = 0.00000000000000000E+00 ! Velocity
joint.st.dep (            1 ,       $J_Boogie                     ) = 0                       ! Dependency state
joint.st.dep (            2 ,       $J_Boogie                     ) = 0                       ! Dependency state
joint.st.dep (            3 ,       $J_Boogie                     ) = 0                       ! Dependency state
joint.st.dep (            4 ,       $J_Boogie                     ) = 0                       ! Dependency state
joint.txt (                         $J_Boogie                     ) = '$_H/2 + $S_esteira1.$_r1' ! Comment
joint.par (               1 ,       $J_Boogie                     ) = 1.00000000000000000E+00 ! [-] Axis of rotation    1
joint.par (               2 ,       $J_Boogie                     ) = 2.00000000000000000E+00 ! [-] Axis of rotation    2
joint.par (               3 ,       $J_Boogie                     ) = 0.00000000000000000E+00 ! [-] Axis of rotation    3
joint.par (               4 ,       $J_Boogie                     ) = 1.00000000000000000E+00 ! [-] Axis of translation 1
joint.par (               5 ,       $J_Boogie                     ) = 3.00000000000000000E+00 ! [-] Axis of translation 2
joint.par (               6 ,       $J_Boogie                     ) = 0.00000000000000000E+00 ! [-] Axis of translation 3
joint.par (               8 ,       $J_Boogie                     ) = 0.00000000000000000E+00 ! [-] Trans-rot sequence

prim.type (                         $P_Boogie                     ) = 1                       ! Type
prim.ref (                          $P_Boogie                     ) = $M_Boogie_BRF           ! Reference Marker
prim.color.r (            1 ,       $P_Boogie                     ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie                     ) = 2.55000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie                     ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie                     ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_Boogie                     ) = 1.00000000000000000E+00 ! Transparency
prim.mp.dens.solid (                $P_Boogie                     ) = 0.00000000000000000E+00 ! Density
prim.par (                2 ,       $P_Boogie                     ) = $_L                     ! [m] Length in X
prim.par (                3 ,       $P_Boogie                     ) = $_W                     ! [m] Length in Y
prim.par (                4 ,       $P_Boogie                     ) = $_H                     ! [m] Length in Z

prim.type (                         $P_Boogie_esteira1D           ) = 39                      ! Type
prim.ref (                          $P_Boogie_esteira1D           ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                2 ,       $P_Boogie_esteira1D           ) = { -$_W/2 - 0.285 +0.07 } ! Position
prim.pos (                3 ,       $P_Boogie_esteira1D           ) = { 0.26 - 0.11 -0.07 + 0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_esteira1D           ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            1 ,       $P_Boogie_esteira1D           ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_esteira1D           ) = 2.55000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_esteira1D           ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_esteira1D           ) = './pecas_stl/chassi_imp.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_esteira1D           ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_esteira1D           ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_esteira2D           ) = 39                      ! Type
prim.ref (                          $P_Boogie_esteira2D           ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                2 ,       $P_Boogie_esteira2D           ) = { $_W/2 +0.285 - 0.07 } ! Position
prim.pos (                3 ,       $P_Boogie_esteira2D           ) = { 0.26 - 0.11 -0.07 +0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_esteira2D           ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            1 ,       $P_Boogie_esteira2D           ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_esteira2D           ) = 2.55000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_esteira2D           ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_esteira2D           ) = './pecas_stl/chassi_imp.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_esteira2D           ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_esteira2D           ) = 1.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_esteira2D           ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_esteira1E           ) = 39                      ! Type
prim.ref (                          $P_Boogie_esteira1E           ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                2 ,       $P_Boogie_esteira1E           ) = { -$_W/2 -0.285 + 0.32 - 0.07 } ! Position
prim.pos (                3 ,       $P_Boogie_esteira1E           ) = { 0.26 - 0.11 -0.07 +0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_esteira1E           ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            1 ,       $P_Boogie_esteira1E           ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_esteira1E           ) = 2.55000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_esteira1E           ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_esteira1E           ) = './pecas_stl/chassi_imp.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_esteira1E           ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_esteira1E           ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_esteira2E           ) = 39                      ! Type
prim.ref (                          $P_Boogie_esteira2E           ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                2 ,       $P_Boogie_esteira2E           ) = { $_W/2 + 0.285 - 0.32 + 0.07 } ! Position
prim.pos (                3 ,       $P_Boogie_esteira2E           ) = { 0.26 - 0.11 -0.07 + 0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_esteira2E           ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            1 ,       $P_Boogie_esteira2E           ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_esteira2E           ) = 2.55000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_esteira2E           ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_esteira2E           ) = './pecas_stl/chassi_imp.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_esteira2E           ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_esteira2E           ) = 1.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_esteira2E           ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_Viga1               ) = 39                      ! Type
prim.ref (                          $P_Boogie_Viga1               ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_Viga1               ) = -5.25000000000000022E-01 ! Position
prim.pos (                2 ,       $P_Boogie_Viga1               ) = 1.14999999999999991E+00 ! Position
prim.pos (                3 ,       $P_Boogie_Viga1               ) = { 0.69 -0.11 -0.06 +0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_Viga1               ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_Viga1               ) = 3.00000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_Viga1               ) = 1.44000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_Viga1               ) = 2.55000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_Viga1               ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_Viga1               ) = './pecas_stl/Viga_Berco.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_Viga1               ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_Viga1               ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_Viga2               ) = 39                      ! Type
prim.ref (                          $P_Boogie_Viga2               ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_Viga2               ) = 5.25000000000000022E-01 ! Position
prim.pos (                2 ,       $P_Boogie_Viga2               ) = 1.14999999999999991E+00 ! Position
prim.pos (                3 ,       $P_Boogie_Viga2               ) = { 0.69 -0.11 -0.06 +0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_Viga2               ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_Viga2               ) = 3.00000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_Viga2               ) = 1.44000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_Viga2               ) = 2.55000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_Viga2               ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_Viga2               ) = './pecas_stl/Viga_Berco.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_Viga2               ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_Viga2               ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_Estrutura           ) = 39                      ! Type
prim.ref (                          $P_Boogie_Estrutura           ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_Estrutura           ) = -5.99999999999999978E-01 ! Position
prim.pos (                2 ,       $P_Boogie_Estrutura           ) = -1.60000000000000009E+00 ! Position
prim.pos (                3 ,       $P_Boogie_Estrutura           ) = $_EstrutZ               ! Position
prim.ang (                1 ,       $P_Boogie_Estrutura           ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_Estrutura           ) = { 180 deg }             ! Angles
prim.ang (                3 ,       $P_Boogie_Estrutura           ) = { 45 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_Estrutura           ) = 9.90000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_Estrutura           ) = 1.84000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_Estrutura           ) = 2.55000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_Estrutura           ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_Estrutura           ) = './pecas_stl/estrutura_implementos.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_Estrutura           ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_Estrutura           ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_fix_botinha1        ) = 39                      ! Type
prim.ref (                          $P_Boogie_fix_botinha1        ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_fix_botinha1        ) = $_fix_botinhaX          ! Position
prim.pos (                2 ,       $P_Boogie_fix_botinha1        ) = { -$_DistLinhas/2 -0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_fix_botinha1        ) = $_fix_botinhaZ          ! Position
prim.ang (                1 ,       $P_Boogie_fix_botinha1        ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_fix_botinha1        ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_fix_botinha1        ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_fix_botinha1        ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_fix_botinha1        ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_fix_botinha1        ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_fix_botinha1        ) = './pecas_stl/botinha1_stl/fixacao.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_fix_botinha1        ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_fix_botinha1        ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_fix_botinha2        ) = 39                      ! Type
prim.ref (                          $P_Boogie_fix_botinha2        ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_fix_botinha2        ) = $_fix_botinhaX          ! Position
prim.pos (                2 ,       $P_Boogie_fix_botinha2        ) = { $_DistLinhas/2 -0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_fix_botinha2        ) = $_fix_botinhaZ          ! Position
prim.ang (                1 ,       $P_Boogie_fix_botinha2        ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_fix_botinha2        ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_fix_botinha2        ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_fix_botinha2        ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_fix_botinha2        ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_fix_botinha2        ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_fix_botinha2        ) = './pecas_stl/botinha1_stl/fixacao.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_fix_botinha2        ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_fix_botinha2        ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_fix_botinha3        ) = 39                      ! Type
prim.ref (                          $P_Boogie_fix_botinha3        ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_fix_botinha3        ) = $_fix_botinhaX          ! Position
prim.pos (                2 ,       $P_Boogie_fix_botinha3        ) = { -3*$_DistLinhas/2 -0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_fix_botinha3        ) = $_fix_botinhaZ          ! Position
prim.ang (                1 ,       $P_Boogie_fix_botinha3        ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_fix_botinha3        ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_fix_botinha3        ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_fix_botinha3        ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_fix_botinha3        ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_fix_botinha3        ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_fix_botinha3        ) = './pecas_stl/botinha1_stl/fixacao.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_fix_botinha3        ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_fix_botinha3        ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_fix_botinha4        ) = 39                      ! Type
prim.ref (                          $P_Boogie_fix_botinha4        ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_fix_botinha4        ) = $_fix_botinhaX          ! Position
prim.pos (                2 ,       $P_Boogie_fix_botinha4        ) = { 3*$_DistLinhas/2 -0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_fix_botinha4        ) = $_fix_botinhaZ          ! Position
prim.ang (                1 ,       $P_Boogie_fix_botinha4        ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_fix_botinha4        ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_fix_botinha4        ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_fix_botinha4        ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_fix_botinha4        ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_fix_botinha4        ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_fix_botinha4        ) = './pecas_stl/botinha1_stl/fixacao.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_fix_botinha4        ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_fix_botinha4        ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_fix_botinha5        ) = 39                      ! Type
prim.ref (                          $P_Boogie_fix_botinha5        ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_fix_botinha5        ) = $_fix_botinhaX          ! Position
prim.pos (                2 ,       $P_Boogie_fix_botinha5        ) = { -5*$_DistLinhas/2 -0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_fix_botinha5        ) = $_fix_botinhaZ          ! Position
prim.ang (                1 ,       $P_Boogie_fix_botinha5        ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_fix_botinha5        ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_fix_botinha5        ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_fix_botinha5        ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_fix_botinha5        ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_fix_botinha5        ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_fix_botinha5        ) = './pecas_stl/botinha1_stl/fixacao.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_fix_botinha5        ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_fix_botinha5        ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_fix_botinha6        ) = 39                      ! Type
prim.ref (                          $P_Boogie_fix_botinha6        ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_fix_botinha6        ) = $_fix_botinhaX          ! Position
prim.pos (                2 ,       $P_Boogie_fix_botinha6        ) = { 5*$_DistLinhas/2 -0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_fix_botinha6        ) = $_fix_botinhaZ          ! Position
prim.ang (                1 ,       $P_Boogie_fix_botinha6        ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_fix_botinha6        ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_fix_botinha6        ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_fix_botinha6        ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_fix_botinha6        ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_fix_botinha6        ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_fix_botinha6        ) = './pecas_stl/botinha1_stl/fixacao.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_fix_botinha6        ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_fix_botinha6        ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_botinha1            ) = 39                      ! Type
prim.ref (                          $P_Boogie_botinha1            ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_botinha1            ) = { $_fix_botinhaX +0.035 } ! Position
prim.pos (                2 ,       $P_Boogie_botinha1            ) = { -$_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_botinha1            ) = { $_fix_botinhaZ +0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_botinha1            ) = { 90 deg }              ! Angles
prim.ang (                3 ,       $P_Boogie_botinha1            ) = { 180 deg }             ! Angles
prim.color.r (            1 ,       $P_Boogie_botinha1            ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_botinha1            ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_botinha1            ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_botinha1            ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_botinha1            ) = './pecas_stl/botinha1_stl/botinha.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_botinha1            ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_botinha2            ) = 39                      ! Type
prim.ref (                          $P_Boogie_botinha2            ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_botinha2            ) = { $_fix_botinhaX +0.035 } ! Position
prim.pos (                2 ,       $P_Boogie_botinha2            ) = { $_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_botinha2            ) = { $_fix_botinhaZ +0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_botinha2            ) = { 90 deg }              ! Angles
prim.ang (                3 ,       $P_Boogie_botinha2            ) = { 180 deg }             ! Angles
prim.color.r (            1 ,       $P_Boogie_botinha2            ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_botinha2            ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_botinha2            ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_botinha2            ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_botinha2            ) = './pecas_stl/botinha1_stl/botinha.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_botinha2            ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_botinha3            ) = 39                      ! Type
prim.ref (                          $P_Boogie_botinha3            ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_botinha3            ) = { $_fix_botinhaX +0.035 } ! Position
prim.pos (                2 ,       $P_Boogie_botinha3            ) = { -3*$_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_botinha3            ) = { $_fix_botinhaZ +0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_botinha3            ) = { 90 deg }              ! Angles
prim.ang (                3 ,       $P_Boogie_botinha3            ) = { 180 deg }             ! Angles
prim.color.r (            1 ,       $P_Boogie_botinha3            ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_botinha3            ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_botinha3            ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_botinha3            ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_botinha3            ) = './pecas_stl/botinha1_stl/botinha.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_botinha3            ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_botinha4            ) = 39                      ! Type
prim.ref (                          $P_Boogie_botinha4            ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_botinha4            ) = { $_fix_botinhaX +0.035 } ! Position
prim.pos (                2 ,       $P_Boogie_botinha4            ) = { 3*$_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_botinha4            ) = { $_fix_botinhaZ +0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_botinha4            ) = { 90 deg }              ! Angles
prim.ang (                3 ,       $P_Boogie_botinha4            ) = { 180 deg }             ! Angles
prim.color.r (            1 ,       $P_Boogie_botinha4            ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_botinha4            ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_botinha4            ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_botinha4            ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_botinha4            ) = './pecas_stl/botinha1_stl/botinha.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_botinha4            ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_botinha5            ) = 39                      ! Type
prim.ref (                          $P_Boogie_botinha5            ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_botinha5            ) = { $_fix_botinhaX +0.035 } ! Position
prim.pos (                2 ,       $P_Boogie_botinha5            ) = { -5*$_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_botinha5            ) = { $_fix_botinhaZ +0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_botinha5            ) = { 90 deg }              ! Angles
prim.ang (                3 ,       $P_Boogie_botinha5            ) = { 180 deg }             ! Angles
prim.color.r (            1 ,       $P_Boogie_botinha5            ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_botinha5            ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_botinha5            ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_botinha5            ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_botinha5            ) = './pecas_stl/botinha1_stl/botinha.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_botinha5            ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_botinha6            ) = 39                      ! Type
prim.ref (                          $P_Boogie_botinha6            ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_botinha6            ) = { $_fix_botinhaX +0.035 } ! Position
prim.pos (                2 ,       $P_Boogie_botinha6            ) = { 5*$_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_botinha6            ) = { $_fix_botinhaZ +0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_botinha6            ) = { 90 deg }              ! Angles
prim.ang (                3 ,       $P_Boogie_botinha6            ) = { 180 deg }             ! Angles
prim.color.r (            1 ,       $P_Boogie_botinha6            ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_botinha6            ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_botinha6            ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_botinha6            ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_botinha6            ) = './pecas_stl/botinha1_stl/botinha.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_botinha6            ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_mola_disco5         ) = 39                      ! Type
prim.ref (                          $P_Boogie_mola_disco5         ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_mola_disco5         ) = { $_fix_botinhaX + 0.12 } ! Position
prim.pos (                2 ,       $P_Boogie_mola_disco5         ) = { -5*$_DistLinhas/2 -0.05 } ! Position
prim.pos (                3 ,       $P_Boogie_mola_disco5         ) = { $_fix_botinhaZ - 0.05 } ! Position
prim.ang (                1 ,       $P_Boogie_mola_disco5         ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_mola_disco5         ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_mola_disco5         ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_mola_disco5         ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_mola_disco5         ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_mola_disco5         ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_mola_disco5         ) = './pecas_stl/disco_de_corte_stl/mola.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_mola_disco5         ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_mola_disco5         ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_mola_disco3         ) = 39                      ! Type
prim.ref (                          $P_Boogie_mola_disco3         ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_mola_disco3         ) = { $_fix_botinhaX + 0.12 } ! Position
prim.pos (                2 ,       $P_Boogie_mola_disco3         ) = { -3*$_DistLinhas/2 -0.05 } ! Position
prim.pos (                3 ,       $P_Boogie_mola_disco3         ) = { $_fix_botinhaZ - 0.05 } ! Position
prim.ang (                1 ,       $P_Boogie_mola_disco3         ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_mola_disco3         ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_mola_disco3         ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_mola_disco3         ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_mola_disco3         ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_mola_disco3         ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_mola_disco3         ) = './pecas_stl/disco_de_corte_stl/mola.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_mola_disco3         ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_mola_disco3         ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_mola_disco1         ) = 39                      ! Type
prim.ref (                          $P_Boogie_mola_disco1         ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_mola_disco1         ) = { $_fix_botinhaX + 0.12 } ! Position
prim.pos (                2 ,       $P_Boogie_mola_disco1         ) = { -$_DistLinhas/2 -0.05 } ! Position
prim.pos (                3 ,       $P_Boogie_mola_disco1         ) = { $_fix_botinhaZ - 0.05 } ! Position
prim.ang (                1 ,       $P_Boogie_mola_disco1         ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_mola_disco1         ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_mola_disco1         ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_mola_disco1         ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_mola_disco1         ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_mola_disco1         ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_mola_disco1         ) = './pecas_stl/disco_de_corte_stl/mola.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_mola_disco1         ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_mola_disco1         ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_mola_disco2         ) = 39                      ! Type
prim.ref (                          $P_Boogie_mola_disco2         ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_mola_disco2         ) = { $_fix_botinhaX + 0.12 } ! Position
prim.pos (                2 ,       $P_Boogie_mola_disco2         ) = { $_DistLinhas/2 -0.05 } ! Position
prim.pos (                3 ,       $P_Boogie_mola_disco2         ) = { $_fix_botinhaZ - 0.05 } ! Position
prim.ang (                1 ,       $P_Boogie_mola_disco2         ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_mola_disco2         ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_mola_disco2         ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_mola_disco2         ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_mola_disco2         ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_mola_disco2         ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_mola_disco2         ) = './pecas_stl/disco_de_corte_stl/mola.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_mola_disco2         ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_mola_disco2         ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_mola_disco4         ) = 39                      ! Type
prim.ref (                          $P_Boogie_mola_disco4         ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_mola_disco4         ) = { $_fix_botinhaX + 0.12 } ! Position
prim.pos (                2 ,       $P_Boogie_mola_disco4         ) = { 3*$_DistLinhas/2 -0.05 } ! Position
prim.pos (                3 ,       $P_Boogie_mola_disco4         ) = { $_fix_botinhaZ - 0.05 } ! Position
prim.ang (                1 ,       $P_Boogie_mola_disco4         ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_mola_disco4         ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_mola_disco4         ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_mola_disco4         ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_mola_disco4         ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_mola_disco4         ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_mola_disco4         ) = './pecas_stl/disco_de_corte_stl/mola.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_mola_disco4         ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_mola_disco4         ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_mola_disco6         ) = 39                      ! Type
prim.ref (                          $P_Boogie_mola_disco6         ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_mola_disco6         ) = { $_fix_botinhaX + 0.12 } ! Position
prim.pos (                2 ,       $P_Boogie_mola_disco6         ) = { 5*$_DistLinhas/2 -0.05 } ! Position
prim.pos (                3 ,       $P_Boogie_mola_disco6         ) = { $_fix_botinhaZ - 0.05 } ! Position
prim.ang (                1 ,       $P_Boogie_mola_disco6         ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_mola_disco6         ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_mola_disco6         ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_mola_disco6         ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_mola_disco6         ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_mola_disco6         ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_mola_disco6         ) = './pecas_stl/disco_de_corte_stl/mola.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_mola_disco6         ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_mola_disco6         ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_bracos_disco1       ) = 39                      ! Type
prim.ref (                          $P_Boogie_bracos_disco1       ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_bracos_disco1       ) = { $_fix_botinhaX -0.467 } ! Position
prim.pos (                2 ,       $P_Boogie_bracos_disco1       ) = { -$_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_bracos_disco1       ) = { $_fix_botinhaZ - 0.236 } ! Position
prim.ang (                1 ,       $P_Boogie_bracos_disco1       ) = { 270 deg }             ! Angles
prim.ang (                3 ,       $P_Boogie_bracos_disco1       ) = { (180 + 28) deg }      ! Angles
prim.color.r (            1 ,       $P_Boogie_bracos_disco1       ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_bracos_disco1       ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_bracos_disco1       ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_bracos_disco1       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_bracos_disco1       ) = './pecas_stl/disco_de_corte_stl/bracos.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_bracos_disco1       ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_bracos_disco1       ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_bracos_disco2       ) = 39                      ! Type
prim.ref (                          $P_Boogie_bracos_disco2       ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_bracos_disco2       ) = { $_fix_botinhaX -0.467 } ! Position
prim.pos (                2 ,       $P_Boogie_bracos_disco2       ) = { $_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_bracos_disco2       ) = { $_fix_botinhaZ - 0.236 } ! Position
prim.ang (                1 ,       $P_Boogie_bracos_disco2       ) = { 270 deg }             ! Angles
prim.ang (                3 ,       $P_Boogie_bracos_disco2       ) = { (180 + 28) deg }      ! Angles
prim.color.r (            1 ,       $P_Boogie_bracos_disco2       ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_bracos_disco2       ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_bracos_disco2       ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_bracos_disco2       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_bracos_disco2       ) = './pecas_stl/disco_de_corte_stl/bracos.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_bracos_disco2       ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_bracos_disco2       ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_bracos_disco3       ) = 39                      ! Type
prim.ref (                          $P_Boogie_bracos_disco3       ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_bracos_disco3       ) = { $_fix_botinhaX -0.467 } ! Position
prim.pos (                2 ,       $P_Boogie_bracos_disco3       ) = { -3*$_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_bracos_disco3       ) = { $_fix_botinhaZ - 0.236 } ! Position
prim.ang (                1 ,       $P_Boogie_bracos_disco3       ) = { 270 deg }             ! Angles
prim.ang (                3 ,       $P_Boogie_bracos_disco3       ) = { (180 + 28) deg }      ! Angles
prim.color.r (            1 ,       $P_Boogie_bracos_disco3       ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_bracos_disco3       ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_bracos_disco3       ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_bracos_disco3       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_bracos_disco3       ) = './pecas_stl/disco_de_corte_stl/bracos.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_bracos_disco3       ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_bracos_disco3       ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_bracos_disco4       ) = 39                      ! Type
prim.ref (                          $P_Boogie_bracos_disco4       ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_bracos_disco4       ) = { $_fix_botinhaX -0.467 } ! Position
prim.pos (                2 ,       $P_Boogie_bracos_disco4       ) = { 3*$_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_bracos_disco4       ) = { $_fix_botinhaZ - 0.236 } ! Position
prim.ang (                1 ,       $P_Boogie_bracos_disco4       ) = { 270 deg }             ! Angles
prim.ang (                3 ,       $P_Boogie_bracos_disco4       ) = { (180 + 28) deg }      ! Angles
prim.color.r (            1 ,       $P_Boogie_bracos_disco4       ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_bracos_disco4       ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_bracos_disco4       ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_bracos_disco4       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_bracos_disco4       ) = './pecas_stl/disco_de_corte_stl/bracos.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_bracos_disco4       ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_bracos_disco4       ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_bracos_disco5       ) = 39                      ! Type
prim.ref (                          $P_Boogie_bracos_disco5       ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_bracos_disco5       ) = { $_fix_botinhaX -0.467 } ! Position
prim.pos (                2 ,       $P_Boogie_bracos_disco5       ) = { -5*$_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_bracos_disco5       ) = { $_fix_botinhaZ - 0.236 } ! Position
prim.ang (                1 ,       $P_Boogie_bracos_disco5       ) = { 270 deg }             ! Angles
prim.ang (                3 ,       $P_Boogie_bracos_disco5       ) = { (180 + 28) deg }      ! Angles
prim.color.r (            1 ,       $P_Boogie_bracos_disco5       ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_bracos_disco5       ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_bracos_disco5       ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_bracos_disco5       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_bracos_disco5       ) = './pecas_stl/disco_de_corte_stl/bracos.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_bracos_disco5       ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_bracos_disco5       ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_bracos_disco6       ) = 39                      ! Type
prim.ref (                          $P_Boogie_bracos_disco6       ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_bracos_disco6       ) = { $_fix_botinhaX -0.467 } ! Position
prim.pos (                2 ,       $P_Boogie_bracos_disco6       ) = { 6*$_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_bracos_disco6       ) = { $_fix_botinhaZ - 0.236 } ! Position
prim.ang (                1 ,       $P_Boogie_bracos_disco6       ) = { 270 deg }             ! Angles
prim.ang (                3 ,       $P_Boogie_bracos_disco6       ) = { (180 + 28) deg }      ! Angles
prim.color.r (            1 ,       $P_Boogie_bracos_disco6       ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_bracos_disco6       ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_bracos_disco6       ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_bracos_disco6       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_bracos_disco6       ) = './pecas_stl/disco_de_corte_stl/bracos.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_bracos_disco6       ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_bracos_disco6       ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_CBotinha1           ) = 15                      ! Type
prim.ref (                          $P_Boogie_CBotinha1           ) = $M_Boogie_PontaBotinha1 ! Reference Marker
prim.color.r (            1 ,       $P_Boogie_CBotinha1           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_Boogie_CBotinha1           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_CBotinha1           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_Boogie_CBotinha1           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_CBotinha1           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_Boogie_CBotinha1           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_CBotinha1           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_Boogie_CBotinha1           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_Boogie_CBotinha1           ) = 1.00000000000000000E+00 ! Transparency
prim.par (                2 ,       $P_Boogie_CBotinha1           ) = $_rarb                  ! [m] Radius
prim.par (                3 ,       $P_Boogie_CBotinha1           ) = 0.00000000000000000E+00 ! [rad] Start angle
prim.par (                4 ,       $P_Boogie_CBotinha1           ) = 0.00000000000000000E+00 ! [rad] Delta angle
prim.par (                5 ,       $P_Boogie_CBotinha1           ) = 2.40000000000000000E+01 ! [-] Number of meridians

prim.type (                         $P_Boogie_CBotinha2           ) = 15                      ! Type
prim.ref (                          $P_Boogie_CBotinha2           ) = $M_Boogie_PontaBotinha2 ! Reference Marker
prim.color.r (            1 ,       $P_Boogie_CBotinha2           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_Boogie_CBotinha2           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_CBotinha2           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_Boogie_CBotinha2           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_CBotinha2           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_Boogie_CBotinha2           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_CBotinha2           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_Boogie_CBotinha2           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_Boogie_CBotinha2           ) = 1.00000000000000000E+00 ! Transparency
prim.par (                2 ,       $P_Boogie_CBotinha2           ) = $_rarb                  ! [m] Radius
prim.par (                3 ,       $P_Boogie_CBotinha2           ) = 0.00000000000000000E+00 ! [rad] Start angle
prim.par (                4 ,       $P_Boogie_CBotinha2           ) = 0.00000000000000000E+00 ! [rad] Delta angle
prim.par (                5 ,       $P_Boogie_CBotinha2           ) = 2.40000000000000000E+01 ! [-] Number of meridians

prim.type (                         $P_Boogie_CBotinha3           ) = 15                      ! Type
prim.ref (                          $P_Boogie_CBotinha3           ) = $M_Boogie_PontaBotinha3 ! Reference Marker
prim.color.r (            1 ,       $P_Boogie_CBotinha3           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_Boogie_CBotinha3           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_CBotinha3           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_Boogie_CBotinha3           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_CBotinha3           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_Boogie_CBotinha3           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_CBotinha3           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_Boogie_CBotinha3           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_Boogie_CBotinha3           ) = 1.00000000000000000E+00 ! Transparency
prim.par (                2 ,       $P_Boogie_CBotinha3           ) = $_rarb                  ! [m] Radius
prim.par (                3 ,       $P_Boogie_CBotinha3           ) = 0.00000000000000000E+00 ! [rad] Start angle
prim.par (                4 ,       $P_Boogie_CBotinha3           ) = 0.00000000000000000E+00 ! [rad] Delta angle
prim.par (                5 ,       $P_Boogie_CBotinha3           ) = 2.40000000000000000E+01 ! [-] Number of meridians

prim.type (                         $P_Boogie_CBotinha4           ) = 15                      ! Type
prim.ref (                          $P_Boogie_CBotinha4           ) = $M_Boogie_PontaBotinha4 ! Reference Marker
prim.color.r (            1 ,       $P_Boogie_CBotinha4           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_Boogie_CBotinha4           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_CBotinha4           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_Boogie_CBotinha4           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_CBotinha4           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_Boogie_CBotinha4           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_CBotinha4           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_Boogie_CBotinha4           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_Boogie_CBotinha4           ) = 1.00000000000000000E+00 ! Transparency
prim.par (                2 ,       $P_Boogie_CBotinha4           ) = $_rarb                  ! [m] Radius
prim.par (                3 ,       $P_Boogie_CBotinha4           ) = 0.00000000000000000E+00 ! [rad] Start angle
prim.par (                4 ,       $P_Boogie_CBotinha4           ) = 0.00000000000000000E+00 ! [rad] Delta angle
prim.par (                5 ,       $P_Boogie_CBotinha4           ) = 2.40000000000000000E+01 ! [-] Number of meridians

prim.type (                         $P_Boogie_CBotinha5           ) = 15                      ! Type
prim.ref (                          $P_Boogie_CBotinha5           ) = $M_Boogie_PontaBotinha5 ! Reference Marker
prim.color.r (            1 ,       $P_Boogie_CBotinha5           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_Boogie_CBotinha5           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_CBotinha5           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_Boogie_CBotinha5           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_CBotinha5           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_Boogie_CBotinha5           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_CBotinha5           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_Boogie_CBotinha5           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_Boogie_CBotinha5           ) = 1.00000000000000000E+00 ! Transparency
prim.par (                2 ,       $P_Boogie_CBotinha5           ) = $_rarb                  ! [m] Radius
prim.par (                3 ,       $P_Boogie_CBotinha5           ) = 0.00000000000000000E+00 ! [rad] Start angle
prim.par (                4 ,       $P_Boogie_CBotinha5           ) = 0.00000000000000000E+00 ! [rad] Delta angle
prim.par (                5 ,       $P_Boogie_CBotinha5           ) = 2.40000000000000000E+01 ! [-] Number of meridians

prim.type (                         $P_Boogie_CBotinha6           ) = 15                      ! Type
prim.ref (                          $P_Boogie_CBotinha6           ) = $M_Boogie_PontaBotinha6 ! Reference Marker
prim.color.r (            1 ,       $P_Boogie_CBotinha6           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_Boogie_CBotinha6           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_CBotinha6           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_Boogie_CBotinha6           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_CBotinha6           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_Boogie_CBotinha6           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_CBotinha6           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_Boogie_CBotinha6           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_Boogie_CBotinha6           ) = 1.00000000000000000E+00 ! Transparency
prim.par (                2 ,       $P_Boogie_CBotinha6           ) = $_rarb                  ! [m] Radius
prim.par (                3 ,       $P_Boogie_CBotinha6           ) = 0.00000000000000000E+00 ! [rad] Start angle
prim.par (                4 ,       $P_Boogie_CBotinha6           ) = 0.00000000000000000E+00 ! [rad] Delta angle
prim.par (                5 ,       $P_Boogie_CBotinha6           ) = 2.40000000000000000E+01 ! [-] Number of meridians


!**********************************************************************
! Force Elements
!**********************************************************************
force.type (                        $F_tau11                      ) = 50                      ! Type
force.from (                        $F_tau11                      ) = $M_Isys                 ! From Marker
force.to (                          $F_tau11                      ) = $S_esteira1.$M_Roda1_BRF ! To Marker
force.disabled (                    $F_tau11                      ) = 0                       ! Disabled
force.par (               1 ,       $F_tau11                      ) = $M_Boogie_BRF           ! [-] Reference Marker for calc.
force.par (               3 ,       $F_tau11                      ) = null                    ! [-] Expression for Fx
force.par (               4 ,       $F_tau11                      ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_tau11                      ) = null                    ! [-] Expression for Fz
force.par (               6 ,       $F_tau11                      ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_tau11                      ) = $X_tau11                ! [-] Expression for Ly
force.par (               8 ,       $F_tau11                      ) = null                    ! [-] Expression for Lz

force.type (                        $F_tau12                      ) = 50                      ! Type
force.from (                        $F_tau12                      ) = $M_Isys                 ! From Marker
force.to (                          $F_tau12                      ) = $S_esteira2.$M_Roda1_BRF ! To Marker
force.disabled (                    $F_tau12                      ) = 0                       ! Disabled
force.par (               1 ,       $F_tau12                      ) = $M_Boogie_BRF           ! [-] Reference Marker for calc.
force.par (               3 ,       $F_tau12                      ) = null                    ! [-] Expression for Fx
force.par (               4 ,       $F_tau12                      ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_tau12                      ) = null                    ! [-] Expression for Fz
force.par (               6 ,       $F_tau12                      ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_tau12                      ) = $X_tau12                ! [-] Expression for Ly
force.par (               8 ,       $F_tau12                      ) = null                    ! [-] Expression for Lz

force.type (                        $F_tau21                      ) = 50                      ! Type
force.from (                        $F_tau21                      ) = $S_rocker1.$M_Rocker_2roda ! From Marker
force.to (                          $F_tau21                      ) = $S_roda1.$M_Roda1_BRF   ! To Marker
force.disabled (                    $F_tau21                      ) = 0                       ! Disabled
force.par (               1 ,       $F_tau21                      ) = $M_Isys                 ! [-] Reference Marker for calc.
force.par (               3 ,       $F_tau21                      ) = null                    ! [-] Expression for Fx
force.par (               4 ,       $F_tau21                      ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_tau21                      ) = null                    ! [-] Expression for Fz
force.par (               6 ,       $F_tau21                      ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_tau21                      ) = $X_tau21                ! [-] Expression for Ly
force.par (               8 ,       $F_tau21                      ) = null                    ! [-] Expression for Lz

force.type (                        $F_tau22                      ) = 50                      ! Type
force.from (                        $F_tau22                      ) = $S_rocker2.$M_Rocker_2roda ! From Marker
force.to (                          $F_tau22                      ) = $S_roda2.$M_Roda1_BRF   ! To Marker
force.disabled (                    $F_tau22                      ) = 0                       ! Disabled
force.par (               1 ,       $F_tau22                      ) = $M_Isys                 ! [-] Reference Marker for calc.
force.par (               3 ,       $F_tau22                      ) = null                    ! [-] Expression for Fx
force.par (               4 ,       $F_tau22                      ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_tau22                      ) = null                    ! [-] Expression for Fz
force.par (               6 ,       $F_tau22                      ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_tau22                      ) = $X_tau22                ! [-] Expression for Ly
force.par (               8 ,       $F_tau22                      ) = null                    ! [-] Expression for Lz

force.type (                        $F_IF                         ) = 50                      ! Type
force.from (                        $F_IF                         ) = $M_Isys                 ! From Marker
force.to (                          $F_IF                         ) = $M_Boogie_BRF           ! To Marker
force.disabled (                    $F_IF                         ) = 1                       ! Disabled
force.par (               1 ,       $F_IF                         ) = $M_Boogie_BRF           ! [-] Reference Marker for calc.
force.par (               3 ,       $F_IF                         ) = $X_IF                   ! [-] Expression for Fx
force.par (               4 ,       $F_IF                         ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_IF                         ) = null                    ! [-] Expression for Fz
force.par (               6 ,       $F_IF                         ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_IF                         ) = null                    ! [-] Expression for Ly
force.par (               8 ,       $F_IF                         ) = null                    ! [-] Expression for Lz

force.type (                        $F_bot1                       ) = 50                      ! Type
force.from (                        $F_bot1                       ) = $M_chao_PontaBotinha1_contact ! From Marker
force.to (                          $F_bot1                       ) = $M_Boogie_PontaBotinha1 ! To Marker
force.par (               1 ,       $F_bot1                       ) = $M_Boogie_PontaBotinha1 ! [-] Reference Marker for calc.
force.par (               3 ,       $F_bot1                       ) = $X_IF_Bot1              ! [-] Expression for Fx
force.par (               4 ,       $F_bot1                       ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_bot1                       ) = $X_Fz_bot1              ! [-] Expression for Fz
force.par (               6 ,       $F_bot1                       ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_bot1                       ) = null                    ! [-] Expression for Ly
force.par (               8 ,       $F_bot1                       ) = null                    ! [-] Expression for Lz

force.type (                        $F_bot2                       ) = 50                      ! Type
force.from (                        $F_bot2                       ) = $M_chao_PontaBotinha2_contact ! From Marker
force.to (                          $F_bot2                       ) = $M_Boogie_PontaBotinha2 ! To Marker
force.par (               1 ,       $F_bot2                       ) = $M_Boogie_PontaBotinha2 ! [-] Reference Marker for calc.
force.par (               3 ,       $F_bot2                       ) = $X_IF_Bot2              ! [-] Expression for Fx
force.par (               4 ,       $F_bot2                       ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_bot2                       ) = $X_Fz_bot2              ! [-] Expression for Fz
force.par (               6 ,       $F_bot2                       ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_bot2                       ) = null                    ! [-] Expression for Ly
force.par (               8 ,       $F_bot2                       ) = null                    ! [-] Expression for Lz

force.type (                        $F_bot3                       ) = 50                      ! Type
force.from (                        $F_bot3                       ) = $M_chao_PontaBotinha3_contact ! From Marker
force.to (                          $F_bot3                       ) = $M_Boogie_PontaBotinha3 ! To Marker
force.par (               1 ,       $F_bot3                       ) = $M_Boogie_PontaBotinha3 ! [-] Reference Marker for calc.
force.par (               3 ,       $F_bot3                       ) = $X_IF_Bot3              ! [-] Expression for Fx
force.par (               4 ,       $F_bot3                       ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_bot3                       ) = $X_Fz_bot3              ! [-] Expression for Fz
force.par (               6 ,       $F_bot3                       ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_bot3                       ) = null                    ! [-] Expression for Ly
force.par (               8 ,       $F_bot3                       ) = null                    ! [-] Expression for Lz

force.type (                        $F_bot4                       ) = 50                      ! Type
force.from (                        $F_bot4                       ) = $M_chao_PontaBotinha4_contact ! From Marker
force.to (                          $F_bot4                       ) = $M_Boogie_PontaBotinha4 ! To Marker
force.par (               1 ,       $F_bot4                       ) = $M_Boogie_PontaBotinha4 ! [-] Reference Marker for calc.
force.par (               3 ,       $F_bot4                       ) = $X_IF_Bot4              ! [-] Expression for Fx
force.par (               4 ,       $F_bot4                       ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_bot4                       ) = $X_Fz_bot4              ! [-] Expression for Fz
force.par (               6 ,       $F_bot4                       ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_bot4                       ) = null                    ! [-] Expression for Ly
force.par (               8 ,       $F_bot4                       ) = null                    ! [-] Expression for Lz

force.type (                        $F_bot5                       ) = 50                      ! Type
force.from (                        $F_bot5                       ) = $M_chao_PontaBotinha5_contact ! From Marker
force.to (                          $F_bot5                       ) = $M_Boogie_PontaBotinha5 ! To Marker
force.par (               1 ,       $F_bot5                       ) = $M_Boogie_PontaBotinha5 ! [-] Reference Marker for calc.
force.par (               3 ,       $F_bot5                       ) = $X_IF_Bot5              ! [-] Expression for Fx
force.par (               4 ,       $F_bot5                       ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_bot5                       ) = $X_Fz_bot5              ! [-] Expression for Fz
force.par (               6 ,       $F_bot5                       ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_bot5                       ) = null                    ! [-] Expression for Ly
force.par (               8 ,       $F_bot5                       ) = null                    ! [-] Expression for Lz

force.type (                        $F_bot6                       ) = 50                      ! Type
force.from (                        $F_bot6                       ) = $M_chao_PontaBotinha6_contact ! From Marker
force.to (                          $F_bot6                       ) = $M_Boogie_PontaBotinha6 ! To Marker
force.par (               1 ,       $F_bot6                       ) = $M_Boogie_PontaBotinha6 ! [-] Reference Marker for calc.
force.par (               3 ,       $F_bot6                       ) = $X_IF_Bot6              ! [-] Expression for Fx
force.par (               4 ,       $F_bot6                       ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_bot6                       ) = $X_Fz_bot6              ! [-] Expression for Fz
force.par (               6 ,       $F_bot6                       ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_bot6                       ) = null                    ! [-] Expression for Ly
force.par (               8 ,       $F_bot6                       ) = null                    ! [-] Expression for Lz

force.type (                        $F_Disco1                     ) = 50                      ! Type
force.from (                        $F_Disco1                     ) = $S_disco1.$M_chao_contact1 ! From Marker
force.to (                          $F_Disco1                     ) = $S_disco1.$M_Roda1_BRF  ! To Marker
force.par (               1 ,       $F_Disco1                     ) = $S_disco1.$M_Base_contact11 ! [-] Reference Marker for calc.
force.par (               3 ,       $F_Disco1                     ) = $X_IF_Disco1            ! [-] Expression for Fx
force.par (               4 ,       $F_Disco1                     ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_Disco1                     ) = null                    ! [-] Expression for Fz
force.par (               6 ,       $F_Disco1                     ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_Disco1                     ) = null                    ! [-] Expression for Ly
force.par (               8 ,       $F_Disco1                     ) = null                    ! [-] Expression for Lz

force.type (                        $F_Disco2                     ) = 50                      ! Type
force.from (                        $F_Disco2                     ) = $S_disco2.$M_chao_contact1 ! From Marker
force.to (                          $F_Disco2                     ) = $S_disco2.$M_Roda1_BRF  ! To Marker
force.par (               1 ,       $F_Disco2                     ) = $S_disco2.$M_Base_contact11 ! [-] Reference Marker for calc.
force.par (               3 ,       $F_Disco2                     ) = $X_IF_Disco2            ! [-] Expression for Fx
force.par (               4 ,       $F_Disco2                     ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_Disco2                     ) = null                    ! [-] Expression for Fz
force.par (               6 ,       $F_Disco2                     ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_Disco2                     ) = null                    ! [-] Expression for Ly
force.par (               8 ,       $F_Disco2                     ) = null                    ! [-] Expression for Lz

force.type (                        $F_Disco3                     ) = 50                      ! Type
force.from (                        $F_Disco3                     ) = $S_disco3.$M_chao_contact1 ! From Marker
force.to (                          $F_Disco3                     ) = $S_disco3.$M_Roda1_BRF  ! To Marker
force.par (               1 ,       $F_Disco3                     ) = $S_disco3.$M_Base_contact11 ! [-] Reference Marker for calc.
force.par (               3 ,       $F_Disco3                     ) = $X_IF_Disco3            ! [-] Expression for Fx
force.par (               4 ,       $F_Disco3                     ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_Disco3                     ) = null                    ! [-] Expression for Fz
force.par (               6 ,       $F_Disco3                     ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_Disco3                     ) = null                    ! [-] Expression for Ly
force.par (               8 ,       $F_Disco3                     ) = null                    ! [-] Expression for Lz

force.type (                        $F_Disco4                     ) = 50                      ! Type
force.from (                        $F_Disco4                     ) = $S_disco4.$M_chao_contact1 ! From Marker
force.to (                          $F_Disco4                     ) = $S_disco4.$M_Roda1_BRF  ! To Marker
force.par (               1 ,       $F_Disco4                     ) = $S_disco4.$M_Base_contact11 ! [-] Reference Marker for calc.
force.par (               3 ,       $F_Disco4                     ) = $X_IF_Disco4            ! [-] Expression for Fx
force.par (               4 ,       $F_Disco4                     ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_Disco4                     ) = null                    ! [-] Expression for Fz
force.par (               6 ,       $F_Disco4                     ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_Disco4                     ) = null                    ! [-] Expression for Ly
force.par (               8 ,       $F_Disco4                     ) = null                    ! [-] Expression for Lz

force.type (                        $F_Disco5                     ) = 50                      ! Type
force.from (                        $F_Disco5                     ) = $S_disco5.$M_chao_contact1 ! From Marker
force.to (                          $F_Disco5                     ) = $S_disco5.$M_Roda1_BRF  ! To Marker
force.par (               1 ,       $F_Disco5                     ) = $S_disco5.$M_Base_contact11 ! [-] Reference Marker for calc.
force.par (               3 ,       $F_Disco5                     ) = $X_IF_Disco5            ! [-] Expression for Fx
force.par (               4 ,       $F_Disco5                     ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_Disco5                     ) = null                    ! [-] Expression for Fz
force.par (               6 ,       $F_Disco5                     ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_Disco5                     ) = null                    ! [-] Expression for Ly
force.par (               8 ,       $F_Disco5                     ) = null                    ! [-] Expression for Lz

force.type (                        $F_Disco6                     ) = 50                      ! Type
force.from (                        $F_Disco6                     ) = $S_disco6.$M_chao_contact1 ! From Marker
force.to (                          $F_Disco6                     ) = $S_disco6.$M_Roda1_BRF  ! To Marker
force.par (               1 ,       $F_Disco6                     ) = $S_disco6.$M_Base_contact11 ! [-] Reference Marker for calc.
force.par (               3 ,       $F_Disco6                     ) = $X_IF_Disco6            ! [-] Expression for Fx
force.par (               4 ,       $F_Disco6                     ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_Disco6                     ) = null                    ! [-] Expression for Fz
force.par (               6 ,       $F_Disco6                     ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_Disco6                     ) = null                    ! [-] Expression for Ly
force.par (               8 ,       $F_Disco6                     ) = null                    ! [-] Expression for Lz

!**********************************************************************
! Connection Elements
!**********************************************************************
connect.type (                      $CTN_ParCima1                 ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParCima1                 ) = 2.70526034059131837E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParCima1                 ) = 4.48247565616250674E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParCima1                 ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParCima1                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParCima1                 ) = 2.70526034059131726E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParCima1                 ) = 4.36033281750665407E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParCima1                 ) = 2.70526034059131837E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParCima1                 ) = 4.48247565616250674E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParCima1                 ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParCima1                 ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParCima1                 ) = $S_LinhaSemente1.$S_BarraCima.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParCima1                 ) = $M_Boogie_ParalelogramoCima1 ! [-] To Marker
connect.par (             3 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParCima1                 ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParCima1                 ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParCima1           ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParCima1           ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParCima1           ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParCima1           ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParCima1                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParCima1           ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParCima1     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParCima1     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParCima1     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParCima1     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParCima1     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParCima1           ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParCima1     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParCima1     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParCima1     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParCima1     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParCima1     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParCima1                 ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParCima1                 ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParCima1                 ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParCima1                 ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParCima1                 ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParCima1                 ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParCima1                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParCima1           ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParCima1           ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParCima1           ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParCima1           ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParCima1           ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParCima2                 ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParCima2                 ) = 2.70526034059116294E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParCima2                 ) = -1.90375788965778837E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParCima2                 ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParCima2                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParCima2                 ) = 2.70526034059116960E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParCima2                 ) = -2.08697214764156737E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParCima2                 ) = 2.70526034059116294E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParCima2                 ) = -1.90375788965778837E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParCima2                 ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParCima2                 ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParCima2                 ) = $S_LinhaSemente2.$S_BarraCima.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParCima2                 ) = $M_Boogie_ParalelogramoCima2 ! [-] To Marker
connect.par (             3 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParCima2                 ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParCima2                 ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParCima2           ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParCima2           ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParCima2           ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParCima2           ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParCima2                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParCima2           ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParCima2     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParCima2     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParCima2     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParCima2     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParCima2     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParCima2           ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParCima2     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParCima2     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParCima2     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParCima2     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParCima2     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParCima2                 ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParCima2                 ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParCima2                 ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParCima2                 ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParCima2                 ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParCima2                 ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParCima2                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParCima2           ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParCima2           ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParCima2           ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParCima2           ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParCima2           ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParCima3                 ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParCima3                 ) = 2.70526034059121345E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParCima3                 ) = -2.81369408833573887E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParCima3                 ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParCima3                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParCima3                 ) = 2.70526034059121512E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParCima3                 ) = -2.50833699169610721E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParCima3                 ) = 2.70526034059121345E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParCima3                 ) = -2.81369408833573887E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParCima3                 ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParCima3                 ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParCima3                 ) = $S_LinhaSemente3.$S_BarraCima.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParCima3                 ) = $M_Boogie_ParalelogramoCima3 ! [-] To Marker
connect.par (             3 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParCima3                 ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParCima3                 ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParCima3           ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParCima3           ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParCima3           ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParCima3           ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParCima3                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParCima3           ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParCima3     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParCima3     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParCima3     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParCima3     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParCima3     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParCima3           ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParCima3     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParCima3     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParCima3     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParCima3     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParCima3     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParCima3                 ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParCima3                 ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParCima3                 ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParCima3                 ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParCima3                 ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParCima3                 ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParCima3                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParCima3           ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParCima3           ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParCima3           ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParCima3           ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParCima3           ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParCima4                 ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParCima4                 ) = 2.70526034059125897E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParCima4                 ) = 1.77610216850562103E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParCima4                 ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParCima4                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParCima4                 ) = 2.70526034059127118E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParCima4                 ) = 1.27173846651611381E-71 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParCima4                 ) = 2.70526034059125897E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParCima4                 ) = 1.77610216850562103E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParCima4                 ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParCima4                 ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParCima4                 ) = $S_LinhaSemente4.$S_BarraCima.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParCima4                 ) = $M_Boogie_ParalelogramoCima4 ! [-] To Marker
connect.par (             3 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParCima4                 ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParCima4                 ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParCima4           ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParCima4           ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParCima4           ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParCima4           ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParCima4                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParCima4           ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParCima4     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParCima4     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParCima4     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParCima4     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParCima4     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParCima4           ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParCima4     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParCima4     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParCima4     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParCima4     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParCima4     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParCima4                 ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParCima4                 ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParCima4                 ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParCima4                 ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParCima4                 ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParCima4                 ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParCima4                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParCima4           ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParCima4           ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParCima4           ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParCima4           ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParCima4           ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParCima5                 ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParCima5                 ) = 2.70526034059131282E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParCima5                 ) = 1.31815196120375420E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParCima5                 ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParCima5                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParCima5                 ) = 2.70526034059129727E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParCima5                 ) = 1.13493770321997553E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParCima5                 ) = 2.70526034059131282E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParCima5                 ) = 1.31815196120375420E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParCima5                 ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParCima5                 ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParCima5                 ) = $S_LinhaSemente5.$S_BarraCima.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParCima5                 ) = $M_Boogie_ParalelogramoCima5 ! [-] To Marker
connect.par (             3 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParCima5                 ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParCima5                 ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParCima5           ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParCima5           ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParCima5           ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParCima5           ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParCima5                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParCima5           ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParCima5     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParCima5     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParCima5     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParCima5     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParCima5     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParCima5           ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParCima5     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParCima5     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParCima5     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParCima5     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParCima5     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParCima5                 ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParCima5                 ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParCima5                 ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParCima5                 ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParCima5                 ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParCima5                 ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParCima5                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParCima5           ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParCima5           ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParCima5           ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParCima5           ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParCima5           ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParCima6                 ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParCima6                 ) = 2.70526034059140330E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParCima6                 ) = -2.99466674854242179E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParCima6                 ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParCima6                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParCima6                 ) = 2.70526034059140885E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParCima6                 ) = -3.48323810316583180E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParCima6                 ) = 2.70526034059140330E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParCima6                 ) = -2.99466674854242179E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParCima6                 ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParCima6                 ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParCima6                 ) = $S_LinhaSemente6.$S_BarraCima.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParCima6                 ) = $M_Boogie_ParalelogramoCima6 ! [-] To Marker
connect.par (             3 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParCima6                 ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParCima6                 ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParCima6           ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParCima6           ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParCima6           ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParCima6           ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParCima6                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParCima6           ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParCima6     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParCima6     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParCima6     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParCima6     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParCima6     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParCima6           ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParCima6     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParCima6     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParCima6     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParCima6     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParCima6     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParCima6                 ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParCima6                 ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParCima6                 ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParCima6                 ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParCima6                 ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParCima6                 ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParCima6                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParCima6           ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParCima6           ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParCima6           ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParCima6           ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParCima6           ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParBaixo1                ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParBaixo1                ) = 2.70526034059132336E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParBaixo1                ) = 4.56790819909306260E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParBaixo1                ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParBaixo1                ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParBaixo1                ) = 2.70526034059132225E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParBaixo1                ) = 4.33916448976186979E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParBaixo1                ) = 2.70526034059132336E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParBaixo1                ) = 4.56790819909306260E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParBaixo1                ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParBaixo1                ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParBaixo1                ) = $S_LinhaSemente1.$S_BarraBaixo.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParBaixo1                ) = $M_Boogie_ParalelogramoBaixo1 ! [-] To Marker
connect.par (             3 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParBaixo1                ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParBaixo1                ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParBaixo1          ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParBaixo1          ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParBaixo1          ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParBaixo1          ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParBaixo1                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParBaixo1          ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParBaixo1    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParBaixo1    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParBaixo1    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParBaixo1    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParBaixo1    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParBaixo1          ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParBaixo1    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParBaixo1    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParBaixo1    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParBaixo1    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParBaixo1    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParBaixo1                ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParBaixo1                ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParBaixo1                ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParBaixo1                ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParBaixo1                ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParBaixo1                ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParBaixo1                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParBaixo1          ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParBaixo1          ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParBaixo1          ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParBaixo1          ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParBaixo1          ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParBaixo2                ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParBaixo2                ) = 2.70526034059117348E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParBaixo2                ) = -1.97613002316597939E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParBaixo2                ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParBaixo2                ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParBaixo2                ) = 2.70526034059118070E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParBaixo2                ) = -2.45192067280145724E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParBaixo2                ) = 2.70526034059117348E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParBaixo2                ) = -1.97613002316597939E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParBaixo2                ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParBaixo2                ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParBaixo2                ) = $S_LinhaSemente2.$S_BarraBaixo.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParBaixo2                ) = $M_Boogie_ParalelogramoBaixo2 ! [-] To Marker
connect.par (             3 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParBaixo2                ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParBaixo2                ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParBaixo2          ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParBaixo2          ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParBaixo2          ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParBaixo2          ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParBaixo2                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParBaixo2          ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParBaixo2    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParBaixo2    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParBaixo2    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParBaixo2    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParBaixo2    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParBaixo2          ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParBaixo2    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParBaixo2    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParBaixo2    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParBaixo2    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParBaixo2    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParBaixo2                ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParBaixo2                ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParBaixo2                ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParBaixo2                ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParBaixo2                ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParBaixo2                ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParBaixo2                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParBaixo2          ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParBaixo2          ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParBaixo2          ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParBaixo2          ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParBaixo2          ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParBaixo3                ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParBaixo3                ) = 2.70526034059121956E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParBaixo3                ) = -3.17000278268053706E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParBaixo3                ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParBaixo3                ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParBaixo3                ) = 2.70526034059122122E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParBaixo3                ) = -2.39614664196657691E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParBaixo3                ) = 2.70526034059121956E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParBaixo3                ) = -3.17000278268053706E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParBaixo3                ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParBaixo3                ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParBaixo3                ) = $S_LinhaSemente3.$S_BarraBaixo.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParBaixo3                ) = $M_Boogie_ParalelogramoBaixo3 ! [-] To Marker
connect.par (             3 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParBaixo3                ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParBaixo3                ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParBaixo3          ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParBaixo3          ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParBaixo3          ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParBaixo3          ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParBaixo3                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParBaixo3          ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParBaixo3    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParBaixo3    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParBaixo3    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParBaixo3    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParBaixo3    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParBaixo3          ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParBaixo3    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParBaixo3    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParBaixo3    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParBaixo3    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParBaixo3    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParBaixo3                ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParBaixo3                ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParBaixo3                ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParBaixo3                ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParBaixo3                ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParBaixo3                ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParBaixo3                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParBaixo3          ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParBaixo3          ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParBaixo3          ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParBaixo3          ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParBaixo3          ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParBaixo4                ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParBaixo4                ) = 2.70526034059126397E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParBaixo4                ) = 2.36827867900614013E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParBaixo4                ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParBaixo4                ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParBaixo4                ) = 2.70526034059127618E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParBaixo4                ) = -5.16543338030156950E-71 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParBaixo4                ) = 2.70526034059126397E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParBaixo4                ) = 2.36827867900614013E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParBaixo4                ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParBaixo4                ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParBaixo4                ) = $S_LinhaSemente4.$S_BarraBaixo.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParBaixo4                ) = $M_Boogie_ParalelogramoBaixo4 ! [-] To Marker
connect.par (             3 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParBaixo4                ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParBaixo4                ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParBaixo4          ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParBaixo4          ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParBaixo4          ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParBaixo4          ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParBaixo4                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParBaixo4          ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParBaixo4    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParBaixo4    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParBaixo4    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParBaixo4    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParBaixo4    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParBaixo4          ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParBaixo4    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParBaixo4    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParBaixo4    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParBaixo4    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParBaixo4    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParBaixo4                ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParBaixo4                ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParBaixo4                ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParBaixo4                ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParBaixo4                ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParBaixo4                ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParBaixo4                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParBaixo4          ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParBaixo4          ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParBaixo4          ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParBaixo4          ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParBaixo4          ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParBaixo5                ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParBaixo5                ) = 2.70526034059131282E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParBaixo5                ) = 1.41731992862368575E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParBaixo5                ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParBaixo5                ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParBaixo5                ) = 2.70526034059129727E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParBaixo5                ) = 2.60393090425682804E-71 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParBaixo5                ) = 2.70526034059131282E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParBaixo5                ) = 1.41731992862368575E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParBaixo5                ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParBaixo5                ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParBaixo5                ) = $S_LinhaSemente5.$S_BarraBaixo.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParBaixo5                ) = $M_Boogie_ParalelogramoBaixo5 ! [-] To Marker
connect.par (             3 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParBaixo5                ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParBaixo5                ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParBaixo5          ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParBaixo5          ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParBaixo5          ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParBaixo5          ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParBaixo5                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParBaixo5          ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParBaixo5    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParBaixo5    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParBaixo5    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParBaixo5    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParBaixo5    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParBaixo5          ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParBaixo5    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParBaixo5    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParBaixo5    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParBaixo5    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParBaixo5    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParBaixo5                ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParBaixo5                ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParBaixo5                ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParBaixo5                ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParBaixo5                ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParBaixo5                ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParBaixo5                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParBaixo5          ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParBaixo5          ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParBaixo5          ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParBaixo5          ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParBaixo5          ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParBaixo6                ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParBaixo6                ) = 2.70526034059140941E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParBaixo6                ) = -2.71352720180436596E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParBaixo6                ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParBaixo6                ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParBaixo6                ) = 2.70526034059141440E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParBaixo6                ) = -3.66337650955100172E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParBaixo6                ) = 2.70526034059140941E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParBaixo6                ) = -2.71352720180436596E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParBaixo6                ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParBaixo6                ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParBaixo6                ) = $S_LinhaSemente6.$S_BarraBaixo.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParBaixo6                ) = $M_Boogie_ParalelogramoBaixo6 ! [-] To Marker
connect.par (             3 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParBaixo6                ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParBaixo6                ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParBaixo6          ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParBaixo6          ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParBaixo6          ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParBaixo6          ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParBaixo6                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParBaixo6          ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParBaixo6    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParBaixo6    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParBaixo6    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParBaixo6    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParBaixo6    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParBaixo6          ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParBaixo6    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParBaixo6    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParBaixo6    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParBaixo6    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParBaixo6    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParBaixo6                ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParBaixo6                ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParBaixo6                ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParBaixo6                ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParBaixo6                ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParBaixo6                ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParBaixo6                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParBaixo6          ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParBaixo6          ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParBaixo6          ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParBaixo6          ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParBaixo6          ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

!**********************************************************************
! Expressions
!**********************************************************************
express.str (                       $X_PD                         ) = '2*$_lambda*($_vd - VX($M_Boogie_BRF)) + ($_lambda^2)*($_vd*TIME - DX($M_Boogie_BRF))' ! Definition

express.str (                       $X_tau11                      ) = '-0.5*(1-$_beta)*$_m*(0.25)*$X_PD' ! Definition

express.str (                       $X_tau12                      ) = '-0.5*(1-$_beta)*$_m*(0.25)*$X_PD' ! Definition

express.str (                       $X_tau21                      ) = '-0.5*$_beta*$_m*(0.4395)*$X_PD' ! Definition

express.str (                       $X_tau22                      ) = '-0.5*$_beta*$_m*(0.4395)*$X_PD' ! Definition

express.str (                       $X_IF                         ) = '-$_IF*tanh(-1000*VX($M_Boogie_BRF,$M_Isys,$M_Boogie_BRF))' ! Definition

express.str (                       $X_DistBotinhaPonta1          ) = 'DZ($M_Boogie_PontaBotinha1,$M_chao_PontaBotinha1_contact,$M_chao_PontaBotinha1_contact)' ! Definition

express.str (                       $X_DistBotinhaPonta2          ) = 'DZ($M_Boogie_PontaBotinha2,$M_chao_PontaBotinha2_contact,$M_chao_PontaBotinha2_contact)' ! Definition

express.str (                       $X_DistBotinhaPonta3          ) = 'DZ($M_Boogie_PontaBotinha3,$M_chao_PontaBotinha3_contact,$M_chao_PontaBotinha3_contact)' ! Definition

express.str (                       $X_DistBotinhaPonta4          ) = 'DZ($M_Boogie_PontaBotinha4,$M_chao_PontaBotinha4_contact,$M_chao_PontaBotinha4_contact)' ! Definition

express.str (                       $X_DistBotinhaPonta5          ) = 'DZ($M_Boogie_PontaBotinha5,$M_chao_PontaBotinha5_contact,$M_chao_PontaBotinha5_contact)' ! Definition

express.str (                       $X_DistBotinhaPonta6          ) = 'DZ($M_Boogie_PontaBotinha6,$M_chao_PontaBotinha6_contact,$M_chao_PontaBotinha6_contact)' ! Definition

express.str (                       $dX_DistBotinhaPonta1         ) = 'VZ($M_Boogie_PontaBotinha1,$M_chao_PontaBotinha1_contact,$M_chao_PontaBotinha1_contact)' ! Definition

express.str (                       $dX_DistBotinhaPonta2         ) = 'VZ($M_Boogie_PontaBotinha2,$M_chao_PontaBotinha2_contact,$M_chao_PontaBotinha2_contact)' ! Definition

express.str (                       $dX_DistBotinhaPonta3         ) = 'VZ($M_Boogie_PontaBotinha3,$M_chao_PontaBotinha3_contact,$M_chao_PontaBotinha3_contact)' ! Definition

express.str (                       $dX_DistBotinhaPonta4         ) = 'VZ($M_Boogie_PontaBotinha4,$M_chao_PontaBotinha4_contact,$M_chao_PontaBotinha4_contact)' ! Definition

express.str (                       $dX_DistBotinhaPonta5         ) = 'VZ($M_Boogie_PontaBotinha5,$M_chao_PontaBotinha5_contact,$M_chao_PontaBotinha5_contact)' ! Definition

express.str (                       $dX_DistBotinhaPonta6         ) = 'VZ($M_Boogie_PontaBotinha6,$M_chao_PontaBotinha6_contact,$M_chao_PontaBotinha6_contact)' ! Definition

express.str (                       $X_delta1                     ) = 'IF($X_DistBotinhaPonta1 < 0)\n{\n-$X_DistBotinhaPonta1\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_delta2                     ) = 'IF($X_DistBotinhaPonta2 < 0)\n{\n-$X_DistBotinhaPonta2\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_delta3                     ) = 'IF($X_DistBotinhaPonta3 < 0)\n{\n-$X_DistBotinhaPonta3\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_delta4                     ) = 'IF($X_DistBotinhaPonta4 < 0)\n{\n-$X_DistBotinhaPonta4\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_delta5                     ) = 'IF($X_DistBotinhaPonta5 < 0)\n{\n-$X_DistBotinhaPonta5\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_delta6                     ) = 'IF($X_DistBotinhaPonta6 < 0)\n{\n-$X_DistBotinhaPonta6\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $dX_delta1                    ) = 'IF($X_DistBotinhaPonta1 < 0)\n{\n-$dX_DistBotinhaPonta1\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $dX_delta2                    ) = 'IF($X_DistBotinhaPonta2 < 0)\n{\n-$dX_DistBotinhaPonta2\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $dX_delta3                    ) = 'IF($X_DistBotinhaPonta3 < 0)\n{\n-$dX_DistBotinhaPonta3\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $dX_delta4                    ) = 'IF($X_DistBotinhaPonta4 < 0)\n{\n-$dX_DistBotinhaPonta4\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $dX_delta5                    ) = 'IF($X_DistBotinhaPonta5 < 0)\n{\n-$dX_DistBotinhaPonta5\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $dX_delta6                    ) = 'IF($X_DistBotinhaPonta6 < 0)\n{\n-$dX_DistBotinhaPonta6\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_Fz_bot1                    ) = 'IF($X_delta1>0)\n{\n-($_ksolo*$X_delta1 + $_csolo*$dX_delta1)*$_A_bot + $_FzDownBot*tanh(100*VX($M_Boogie_BRF,$M_Isys,$M_chao_PontaBotinha1_contact))\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_Fz_bot2                    ) = 'IF($X_delta2>0)\n{\n-($_ksolo*$X_delta2 + $_csolo*$dX_delta2)*$_A_bot + $_FzDownBot*tanh(100*VX($M_Boogie_BRF,$M_Isys,$M_chao_PontaBotinha2_contact))\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_Fz_bot3                    ) = 'IF($X_delta3>0)\n{\n-($_ksolo*$X_delta3 + $_csolo*$dX_delta3)*$_A_bot + $_FzDownBot*tanh(100*VX($M_Boogie_BRF,$M_Isys,$M_chao_PontaBotinha3_contact))\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_Fz_bot4                    ) = 'IF($X_delta4>0)\n{\n-($_ksolo*$X_delta4 + $_csolo*$dX_delta4)*$_A_bot + $_FzDownBot*tanh(100*VX($M_Boogie_BRF,$M_Isys,$M_chao_PontaBotinha4_contact))\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_Fz_bot5                    ) = 'IF($X_delta5>0)\n{\n-($_ksolo*$X_delta5 + $_csolo*$dX_delta5)*$_A_bot + $_FzDownBot*tanh(100*VX($M_Boogie_BRF,$M_Isys,$M_chao_PontaBotinha5_contact))\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_Fz_bot6                    ) = 'IF($X_delta6>0)\n{\n-($_ksolo*$X_delta6 + $_csolo*$dX_delta6)*$_A_bot + $_FzDownBot*tanh(100*VX($M_Boogie_BRF,$M_Isys,$M_chao_PontaBotinha6_contact))\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_IF_Bot                     ) = '$X_IF/12'              ! Definition

express.str (                       $X_IF_Disco                   ) = '$X_IF/24'              ! Definition

express.str (                       $X_IF_Bot1                    ) = 'IF($X_delta1>0)\n{\n$X_IF_Bot\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_IF_Bot2                    ) = 'IF($X_delta2>0)\n{\n$X_IF_Bot\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_IF_Bot3                    ) = 'IF($X_delta3>0)\n{\n$X_IF_Bot\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_IF_Bot4                    ) = 'IF($X_delta4>0)\n{\n$X_IF_Bot\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_IF_Bot5                    ) = 'IF($X_delta5>0)\n{\n$X_IF_Bot\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_IF_Bot6                    ) = 'IF($X_delta6>0)\n{\n$X_IF_Bot\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_IF_Disco1                  ) = 'IF($S_disco1.$X_delta11 >0)\n{\n$X_IF_Disco\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_IF_Disco2                  ) = 'IF($S_disco2.$X_delta11 >0)\n{\n$X_IF_Disco\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_IF_Disco3                  ) = 'IF($S_disco3.$X_delta11 >0)\n{\n$X_IF_Disco\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_IF_Disco4                  ) = 'IF($S_disco4.$X_delta11 >0)\n{\n$X_IF_Disco\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_IF_Disco5                  ) = 'IF($S_disco5.$X_delta11 >0)\n{\n$X_IF_Disco\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_IF_Disco6                  ) = 'IF($S_disco6.$X_delta11 >0)\n{\n$X_IF_Disco\n}\nELSE\n{\n0\n}' ! Definition


! Overwritten substructure values
view.fclip.value (                  $S_esteira1.$V_WorkingView    ) = 3.50148491561412811E-02 ! Front clipping plane value
view.bclip.value (                  $S_esteira1.$V_WorkingView    ) = 3.50148468017578125E+01 ! Back clipping plane value

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact11 ) = 6.28349336988751705E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact11 ) = 1.57011665408415779E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact12 ) = 3.01710291049244502E-04 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact12 ) = 1.57000515740447444E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact13 ) = 3.14417039848146316E-04 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact13 ) = 1.57023525305106304E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact21 ) = 6.15370826848486339E-04 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact21 ) = 1.57010886018954299E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact22 ) = 5.90123945704263504E-04 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact22 ) = 1.57000655769022379E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact23 ) = 6.41052740411065061E-04 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact23 ) = 1.57021778828176317E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact31 ) = 6.28316338689681153E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact31 ) = 1.57014670127498390E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact32 ) = 2.51327330083936644E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact32 ) = 1.57002850044288422E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact33 ) = 3.76990758670265365E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact33 ) = 1.57027231400463840E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact41 ) = 3.14167351044656691E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact41 ) = 1.57011632296354176E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact42 ) = 7.71183793870571215E-04 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact42 ) = 1.57002173015022661E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact43 ) = 8.46656152201698069E-04 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact43 ) = 1.57021711980748013E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact51 ) = 6.28292872715941098E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact51 ) = 1.57018000896526311E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact52 ) = -2.28828557008678045E-04 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact52 ) = 1.57005866031534103E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact53 ) = -2.84985265512975941E-04 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact53 ) = 1.57030888493459875E+00 ! Algebraic states

joint.from (                        $S_esteira1.$J_Base           ) = $M_Boogie_esteira1      ! From Marker
joint.type (                        $S_esteira1.$J_Base           ) = 0                       ! Type
joint.par (               1 ,       $S_esteira1.$J_Base           ) = 0.00000000000000000E+00 ! [rad] Rotation about alpha
joint.par (               2 ,       $S_esteira1.$J_Base           ) = 0.00000000000000000E+00 ! [rad] Rotation about beta
joint.par (               3 ,       $S_esteira1.$J_Base           ) = 0.00000000000000000E+00 ! [rad] Rotation about gamma
joint.par (               4 ,       $S_esteira1.$J_Base           ) = 0.00000000000000000E+00 ! [m] Translation in x
joint.par (               5 ,       $S_esteira1.$J_Base           ) = 0.00000000000000000E+00 ! [m] Translation in y
joint.par (               6 ,       $S_esteira1.$J_Base           ) = 0.00000000000000000E+00 ! [m] Translation in z
joint.par (               7 ,       $S_esteira1.$J_Base           ) = 0.00000000000000000E+00 ! [-] Rotation sequence


joint.st.pos (            1 ,       $S_esteira1.$J_Roda1          ) = 0.00000000000000000E+00 ! Position
joint.st.vel (            1 ,       $S_esteira1.$J_Roda1          ) = 2.11319821815994095E-71 ! Velocity


joint.st.pos (            1 ,       $S_esteira1.$J_Roda2          ) = 0.00000000000000000E+00 ! Position
joint.st.vel (            1 ,       $S_esteira1.$J_Roda2          ) = 6.33959465447982405E-71 ! Velocity


joint.st.pos (            1 ,       $S_esteira1.$J_Roda3          ) = 0.00000000000000000E+00 ! Position
joint.st.vel (            1 ,       $S_esteira1.$J_Roda3          ) = 6.33959465447982405E-71 ! Velocity


joint.st.pos (            1 ,       $S_esteira1.$J_Roda4          ) = 0.00000000000000000E+00 ! Position
joint.st.vel (            1 ,       $S_esteira1.$J_Roda4          ) = 2.11319821815994417E-71 ! Velocity


joint.from (                        $S_esteira1.$J_connector      ) = $M_Isys_1               ! From Marker


marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact11 ) = -5.99988460000460311E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact11 ) = 5.23052321757521904E-05 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact11 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact12 ) = -5.99986564589829463E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact12 ) = -9.67733480777241140E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact12 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact13 ) = -5.99990475354404929E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact13 ) = 9.68779582991128041E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact13 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact21 ) = -6.26911780490264015E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact21 ) = 1.04595899970885356E-04 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact21 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact22 ) = -6.26910037024247480E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact22 ) = -9.67242445825249181E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact22 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact23 ) = -6.26913635482880593E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact23 ) = 9.69335057731045696E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact23 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact31 ) = -5.73065516315872436E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact31 ) = -3.71785906712007864E-06 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact31 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact32 ) = -5.73063511645442869E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact32 ) = -9.68259778774533675E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact32 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact33 ) = -5.73067646663348818E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact33 ) = 9.68184817222729199E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact33 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact41 ) = -6.45297425570811178E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact41 ) = 1.37535900558452290E-04 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact41 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact42 ) = -6.45295810642477541E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact42 ) = -9.66933478514375166E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact42 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact43 ) = -6.45299144745369979E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact43 ) = 9.69685303401291304E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact43 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact51 ) = -5.54680561632304236E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact51 ) = -4.34881670887937976E-05 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact51 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact52 ) = -5.54678506607745359E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact52 ) = -9.68633628052765899E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact52 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact53 ) = -5.54682744694133589E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact53 ) = 9.67762735664637053E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact53 ) = $P_chao                 ! [-] Contact geometry Primitive

prim.transparency (                 $S_esteira1.$P_chao           ) = 1.00000000000000000E+00 ! Transparency


view.fclip.value (                  $S_esteira2.$V_WorkingView    ) = 3.50148491561412811E-02 ! Front clipping plane value
view.bclip.value (                  $S_esteira2.$V_WorkingView    ) = 3.50148468017578125E+01 ! Back clipping plane value

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact11 ) = 3.08066104813525549E-04 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact11 ) = 1.57011665408484213E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact12 ) = 3.01689748564612102E-04 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact12 ) = 1.57000515740058866E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact13 ) = 3.14412143675589517E-04 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact13 ) = 1.57023525305001499E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact21 ) = 6.15384899398238355E-04 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact21 ) = 1.57010886019214535E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact22 ) = 5.90125399212777790E-04 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact22 ) = 1.57000655769047581E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact23 ) = 6.41053905564847870E-04 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact23 ) = 1.57021778828199232E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact31 ) = -2.19093765758536365E-05 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact31 ) = 1.57014670127731248E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact32 ) = -8.22194869795847024E-06 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact32 ) = 1.57002850044255848E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact33 ) = -3.59742487632895542E-05 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact33 ) = 1.57027231400504697E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact41 ) = 8.08568283241394925E-04 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact41 ) = 1.57011632296349335E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact42 ) = 2.51335124604468199E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact42 ) = 1.57002173015790891E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact43 ) = 8.46528979144858763E-04 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact43 ) = 1.57021711978433332E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact51 ) = 3.14156699550110048E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact51 ) = 1.57018000896507326E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact52 ) = -2.28851029746355601E-04 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact52 ) = 1.57005866031071006E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact53 ) = -2.84983232870866354E-04 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact53 ) = 1.57030888493507126E+00 ! Algebraic states

joint.from (                        $S_esteira2.$J_Base           ) = $M_Boogie_esteira2      ! From Marker
joint.type (                        $S_esteira2.$J_Base           ) = 0                       ! Type
joint.par (               1 ,       $S_esteira2.$J_Base           ) = 0.00000000000000000E+00 ! [rad] Rotation about alpha
joint.par (               2 ,       $S_esteira2.$J_Base           ) = 0.00000000000000000E+00 ! [rad] Rotation about beta
joint.par (               3 ,       $S_esteira2.$J_Base           ) = 0.00000000000000000E+00 ! [rad] Rotation about gamma
joint.par (               4 ,       $S_esteira2.$J_Base           ) = 0.00000000000000000E+00 ! [m] Translation in x
joint.par (               5 ,       $S_esteira2.$J_Base           ) = 0.00000000000000000E+00 ! [m] Translation in y
joint.par (               6 ,       $S_esteira2.$J_Base           ) = 0.00000000000000000E+00 ! [m] Translation in z
joint.par (               7 ,       $S_esteira2.$J_Base           ) = 0.00000000000000000E+00 ! [-] Rotation sequence


joint.st.pos (            1 ,       $S_esteira2.$J_Roda1          ) = 0.00000000000000000E+00 ! Position
joint.st.vel (            1 ,       $S_esteira2.$J_Roda1          ) = -8.81593831030293860E-59 ! Velocity


joint.st.pos (            1 ,       $S_esteira2.$J_Roda2          ) = 0.00000000000000000E+00 ! Position
joint.st.vel (            1 ,       $S_esteira2.$J_Roda2          ) = -2.64478149309088193E-58 ! Velocity


joint.st.pos (            1 ,       $S_esteira2.$J_Roda3          ) = 0.00000000000000000E+00 ! Position
joint.st.vel (            1 ,       $S_esteira2.$J_Roda3          ) = -2.64478149309088158E-58 ! Velocity


joint.st.pos (            1 ,       $S_esteira2.$J_Roda4          ) = 0.00000000000000000E+00 ! Position
joint.st.vel (            1 ,       $S_esteira2.$J_Roda4          ) = -8.81593831030294568E-59 ! Velocity


joint.from (                        $S_esteira2.$J_connector      ) = $M_Isys_2               ! From Marker


marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact11 ) = -5.99988460000471946E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact11 ) = 5.23058089248890022E-05 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact11 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact12 ) = -5.99986564589763383E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact12 ) = -9.67733515661898525E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact12 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact13 ) = -5.99990475354387165E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact13 ) = 9.68779574679509287E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact13 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact21 ) = -6.26911780490308423E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact21 ) = 1.04598291912268274E-04 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact21 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact22 ) = -6.26910037024251743E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact22 ) = -9.67242443353840964E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact22 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact23 ) = -6.26913635482884501E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact23 ) = 9.69335059710775548E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact23 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact31 ) = -5.73065516315911960E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact31 ) = -3.71600928668566946E-06 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact31 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact32 ) = -5.73063511645437274E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact32 ) = -9.68259781528979929E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact32 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact33 ) = -5.73067646663355745E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact33 ) = 9.68184820279490432E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact33 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact41 ) = -6.45297425570810290E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact41 ) = 1.37535852166461111E-04 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact41 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact42 ) = -6.45295810642608725E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact42 ) = -9.66933396941927342E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact42 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact43 ) = -6.45299144744975361E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact43 ) = 9.69685087184406630E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact43 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact51 ) = -5.54680561632301039E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact51 ) = -4.34883139959508572E-05 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact51 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact52 ) = -5.54678506607666932E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact52 ) = -9.68633666136896054E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact52 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact53 ) = -5.54682744694141583E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact53 ) = 9.67762739110331893E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact53 ) = $P_chao                 ! [-] Contact geometry Primitive

prim.transparency (                 $S_esteira2.$P_chao           ) = 1.00000000000000000E+00 ! Transparency


marker.pos (              2 ,       $S_rocker1.$M_Rocker_2roda    ) = 1.10000000000000001E-01 ! Position

joint.from (                        $S_rocker1.$J_Rocker          ) = $M_Boogie_rocker1       ! From Marker

prim.pos (                2 ,       $S_rocker1.$P_Rocker_CAD      ) = -5.99999999999999978E-01 ! Position
prim.par (               15 ,       $S_rocker1.$P_Rocker_CAD      ) = 1.00000000000000000E+00 ! [-] Mirror in z direction


marker.pos (              2 ,       $S_rocker2.$M_Rocker_2roda    ) = -1.10000000000000001E-01 ! Position

joint.from (                        $S_rocker2.$J_Rocker          ) = $M_Boogie_rocker2       ! From Marker

prim.pos (                2 ,       $S_rocker2.$P_Rocker_CAD      ) = 5.99999999999999978E-01 ! Position
prim.par (               15 ,       $S_rocker2.$P_Rocker_CAD      ) = 0.00000000000000000E+00 ! [-] Mirror in z direction


marker.st.alg (           1 ,       $S_roda1.$M_Base_contact1     ) = -1.25676019645685511E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_roda1.$M_Base_contact1     ) = 1.57043871563215420E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_roda1.$M_Base_contact2     ) = -9.42376845397469687E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_roda1.$M_Base_contact2     ) = -1.57152731950814073E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_roda1.$M_Base_contact3     ) = -6.91164630903444106E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_roda1.$M_Base_contact3     ) = 1.57088794075014526E+00 ! Algebraic states

joint.from (                        $S_roda1.$J_Base              ) = $S_rocker1.$M_Rocker_2roda ! From Marker
joint.type (                        $S_roda1.$J_Base              ) = 2                       ! Type


joint.type (                        $S_roda1.$J_Roda1             ) = 2                       ! Type


joint.from (                        $S_roda1.$J_connector         ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_roda1.$M_chao_contact1     ) = -3.69492940874096520E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_roda1.$M_chao_contact1     ) = -8.85243064580840455E-01 ! Algebraic states
marker.par (              3 ,       $S_roda1.$M_chao_contact1     ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_roda1.$M_chao_contact2     ) = -4.06933431345042962E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_roda1.$M_chao_contact2     ) = -8.85199481575545399E-01 ! Algebraic states
marker.par (              3 ,       $S_roda1.$M_chao_contact2     ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_roda1.$M_chao_contact3     ) = -3.32053931976257877E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_roda1.$M_chao_contact3     ) = -8.85281159099559734E-01 ! Algebraic states
marker.par (              3 ,       $S_roda1.$M_chao_contact3     ) = $P_chao                 ! [-] Contact geometry Primitive

prim.transparency (                 $S_roda1.$P_chao              ) = 1.00000000000000000E+00 ! Transparency


marker.st.alg (           1 ,       $S_roda2.$M_Base_contact1     ) = -3.34598165552131739E-03 ! Algebraic states
marker.st.alg (           2 ,       $S_roda2.$M_Base_contact1     ) = 1.57207165233461876E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_roda2.$M_Base_contact2     ) = -1.25692299049720297E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_roda2.$M_Base_contact2     ) = 1.57200001877593176E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_roda2.$M_Base_contact3     ) = 4.39785699471938329E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_roda2.$M_Base_contact3     ) = 1.41385003550527220E+01 ! Algebraic states

joint.from (                        $S_roda2.$J_Base              ) = $S_rocker2.$M_Rocker_2roda ! From Marker
joint.type (                        $S_roda2.$J_Base              ) = 2                       ! Type


joint.type (                        $S_roda2.$J_Roda1             ) = 2                       ! Type

prim.par (               15 ,       $S_roda2.$P_Roda1_aro         ) = 1.00000000000000000E+00 ! [-] Mirror in z direction


joint.from (                        $S_roda2.$J_connector         ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_roda2.$M_chao_contact1     ) = -3.69525733013704993E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_roda2.$M_chao_contact1     ) = 8.84324858369259670E-01 ! Algebraic states
marker.par (              3 ,       $S_roda2.$M_chao_contact1     ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_roda2.$M_chao_contact2     ) = -4.06972107709894360E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_roda2.$M_chao_contact2     ) = 8.84424389459729343E-01 ! Algebraic states
marker.par (              3 ,       $S_roda2.$M_chao_contact2     ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_roda2.$M_chao_contact3     ) = -3.32079094273395459E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_roda2.$M_chao_contact3     ) = 8.84246114909386982E-01 ! Algebraic states
marker.par (              3 ,       $S_roda2.$M_chao_contact3     ) = $P_chao                 ! [-] Contact geometry Primitive

prim.transparency (                 $S_roda2.$P_chao              ) = 1.00000000000000000E+00 ! Transparency


subvar.str (                        $S_LinhaSemente1.$_IF         ) = '$_IF'                  ! Definition

joint.st.pos (            1 ,       $S_LinhaSemente1.$J_Estrutura ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            2 ,       $S_LinhaSemente1.$J_Estrutura ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            3 ,       $S_LinhaSemente1.$J_Estrutura ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            4 ,       $S_LinhaSemente1.$J_Estrutura ) = 3.60638905120293340E-01 ! Position
joint.st.pos (            5 ,       $S_LinhaSemente1.$J_Estrutura ) = -2.50000000000000000E-01 ! Position
joint.st.pos (            6 ,       $S_LinhaSemente1.$J_Estrutura ) = 5.28390889286345034E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente1.$J_Estrutura ) = 5.69608758541808188E-72 ! Velocity
joint.st.vel (            2 ,       $S_LinhaSemente1.$J_Estrutura ) = -1.83214257983778712E-71 ! Velocity
joint.st.vel (            3 ,       $S_LinhaSemente1.$J_Estrutura ) = 6.95005434745714871E-72 ! Velocity
joint.st.vel (            4 ,       $S_LinhaSemente1.$J_Estrutura ) = 7.12445416791284552E-56 ! Velocity
joint.st.vel (            5 ,       $S_LinhaSemente1.$J_Estrutura ) = 6.14624097043813684E-72 ! Velocity
joint.st.vel (            6 ,       $S_LinhaSemente1.$J_Estrutura ) = -2.01616283256034899E-70 ! Velocity


prim.transparency (                 $S_LinhaSemente1.$P_chao      ) = 1.00000000000000000E+00 ! Transparency


joint.from (                        $S_LinhaSemente1.$J_connector ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_BarraCima.$M_Body1_contact) = -5.16244773342849572E-01 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente1.$S_BarraCima.$J_Body1) = -2.70526034059131837E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente1.$S_BarraCima.$J_Body1) = -4.29926139817872807E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_BarraBaixo.$M_Body1_contact) = 3.97756818462262896E+00 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente1.$S_BarraBaixo.$J_Body1) = -2.70526034059132336E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente1.$S_BarraBaixo.$J_Body1) = -4.38469394110928393E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_Base_contact1) = -2.19923807920696284E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_Base_contact1) = 4.71208538780772468E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_Base_contact2) = -3.76978894062191969E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_Base_contact2) = 7.85380563914880625E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_Base_contact3) = 1.22526860642319145E-03 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_Base_contact3) = 1.57037474181448955E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_chao_contact1) = -7.81431266580817763E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_chao_contact1) = -3.89803436717412299E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_chao_contact1) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_chao_contact2) = -7.96344287270915530E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_chao_contact2) = -3.89804952980882302E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_chao_contact2) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_chao_contact3) = -7.66518400768124231E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_chao_contact3) = -3.89804611506402832E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_chao_contact3) = $P_chao ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_Base_contact1) = -1.25648886205495423E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_Base_contact1) = 1.57049288480030813E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_Base_contact2) = -1.25648974901534061E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_Base_contact2) = 1.57058480614350127E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_Base_contact3) = 1.47057628483316283E-03 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_Base_contact3) = 1.57040865739113711E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_chao_contact1) = -7.81431280504604597E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_chao_contact1) = -1.09764154964305000E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_chao_contact1) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_chao_contact2) = -7.96343728411837226E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_chao_contact2) = -1.09765509776846973E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_chao_contact2) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_chao_contact3) = -7.66518956225798043E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_chao_contact3) = -1.09766047865082997E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_chao_contact3) = $P_chao ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscosV.$M_Base_contact1) = -1.88482853077880819E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscosV.$M_Base_contact1) = 1.57084366037780643E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscosV.$M_Base_contact2) = -1.88483424506444521E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscosV.$M_Base_contact2) = 1.57095757064972741E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscosV.$M_Base_contact3) = 1.31260109009086082E-03 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscosV.$M_Base_contact3) = 1.57073589137941205E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscosV.$M_chao_contact1) = -8.25436665175768880E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscosV.$M_chao_contact1) = -2.49850832137715306E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente1.$S_DiscosV.$M_chao_contact1) = $P_chao   ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscosV.$M_chao_contact2) = -8.37963230394161940E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscosV.$M_chao_contact2) = -2.49857556380137041E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente1.$S_DiscosV.$M_chao_contact2) = $P_chao   ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscosV.$M_chao_contact3) = -8.12910171850751162E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscosV.$M_chao_contact3) = -2.49845904060433055E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente1.$S_DiscosV.$M_chao_contact3) = $P_chao   ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoD1.$M_Base_contact1) = -6.28318530509201789E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoD1.$M_Base_contact1) = 1.57079632679489634E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoD1.$M_Base_contact2) = -6.28318530508836393E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoD1.$M_Base_contact2) = 1.57079632679489634E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoD1.$M_Base_contact3) = 2.09016724191250169E-09 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoD1.$M_Base_contact3) = 1.57079632679489634E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoD1.$M_chao_contact1) = 4.46638905120293417E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoD1.$M_chao_contact1) = -2.84999999734062814E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoD1.$M_chao_contact2) = 2.83896144912657633E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoD1.$M_chao_contact2) = -2.84999999733597353E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoD1.$M_chao_contact3) = 6.09381665327929034E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoD1.$M_chao_contact3) = -2.84999999733731746E-01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoD2.$M_Base_contact1) = -6.28318530812739784E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoD2.$M_Base_contact1) = 1.57079632679489634E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoD2.$M_Base_contact2) = -6.28318530509459183E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoD2.$M_Base_contact2) = 1.57079632679489634E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoD2.$M_Base_contact3) = 2.08605917482213619E-09 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoD2.$M_Base_contact3) = 1.57079632679489634E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoD2.$M_chao_contact1) = 4.21638905120293395E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoD2.$M_chao_contact1) = -2.15000000120742496E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoD2.$M_chao_contact2) = 2.58896144912657611E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoD2.$M_chao_contact2) = -2.14999999734390712E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoD2.$M_chao_contact3) = 5.84381665327929012E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoD2.$M_chao_contact3) = -2.14999999734255043E-01 ! Algebraic states


subvar.str (                        $S_LinhaSemente2.$_IF         ) = '$_IF'                  ! Definition

joint.st.pos (            1 ,       $S_LinhaSemente2.$J_Estrutura ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            2 ,       $S_LinhaSemente2.$J_Estrutura ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            3 ,       $S_LinhaSemente2.$J_Estrutura ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            4 ,       $S_LinhaSemente2.$J_Estrutura ) = 3.60638905120292008E-01 ! Position
joint.st.pos (            5 ,       $S_LinhaSemente2.$J_Estrutura ) = 2.50000000000000000E-01 ! Position
joint.st.pos (            6 ,       $S_LinhaSemente2.$J_Estrutura ) = 5.28390889286350585E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente2.$J_Estrutura ) = -3.20260386494754634E-73 ! Velocity
joint.st.vel (            2 ,       $S_LinhaSemente2.$J_Estrutura ) = 1.83214257983778993E-71 ! Velocity
joint.st.vel (            3 ,       $S_LinhaSemente2.$J_Estrutura ) = 4.27524380037233812E-72 ! Velocity
joint.st.vel (            4 ,       $S_LinhaSemente2.$J_Estrutura ) = 7.12445416791283556E-56 ! Velocity
joint.st.vel (            5 ,       $S_LinhaSemente2.$J_Estrutura ) = -6.40302567508363536E-72 ! Velocity
joint.st.vel (            6 ,       $S_LinhaSemente2.$J_Estrutura ) = 8.77796231154026734E-71 ! Velocity


prim.transparency (                 $S_LinhaSemente2.$P_chao      ) = 1.00000000000000000E+00 ! Transparency


joint.from (                        $S_LinhaSemente2.$J_connector ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_BarraCima.$M_Body1_contact) = -5.16244773342849794E-01 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente2.$S_BarraCima.$J_Body1) = -2.70526034059116294E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente2.$S_BarraCima.$J_Body1) = 1.72054363167400938E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_BarraBaixo.$M_Body1_contact) = 3.97756818462262896E+00 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente2.$S_BarraBaixo.$J_Body1) = -2.70526034059117348E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente2.$S_BarraBaixo.$J_Body1) = 1.79291576518220039E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_Base_contact1) = 1.68852493626492329E-03 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_Base_contact1) = 1.57049672227535009E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_Base_contact2) = 1.68045472709409940E-03 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_Base_contact2) = 1.57055565858729418E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_Base_contact3) = 1.67336359854724863E-03 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_Base_contact3) = 1.57044368561736358E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_chao_contact1) = -7.81431352019733971E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_chao_contact1) = 1.10268123842659188E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_chao_contact1) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_chao_contact2) = -7.96343272790540624E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_chao_contact2) = 1.10266910172957741E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_chao_contact2) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_chao_contact3) = -7.66519525676531277E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_chao_contact3) = 1.10265634854406713E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_chao_contact3) = $P_chao ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_Base_contact1) = 9.42282770495691402E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_Base_contact1) = 4.71209930707974234E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_Base_contact2) = 2.51346844873350506E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_Base_contact2) = 7.85370232419083791E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_Base_contact3) = 1.93026635722789151E-03 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_Base_contact3) = 1.57049951634538032E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_chao_contact1) = -7.81431524510360109E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_chao_contact1) = 3.90308688807157800E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_chao_contact1) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_chao_contact2) = -7.96342673242068866E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_chao_contact2) = 3.90307663795811333E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_chao_contact2) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_chao_contact3) = -7.66520426958851075E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_chao_contact3) = 3.90305440377849144E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_chao_contact3) = $P_chao ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscosV.$M_Base_contact1) = 6.28490983371097744E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscosV.$M_Base_contact1) = 1.57061929106415010E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscosV.$M_Base_contact2) = 6.28483618113752041E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscosV.$M_Base_contact2) = 1.57066033210530898E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscosV.$M_Base_contact3) = 1.77745504829705998E-03 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscosV.$M_Base_contact3) = 1.57058151289638048E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscosV.$M_chao_contact1) = -8.25434044344001627E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscosV.$M_chao_contact1) = 2.50201168379967309E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente2.$S_DiscosV.$M_chao_contact1) = $P_chao   ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscosV.$M_chao_contact2) = -8.37959750967255523E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscosV.$M_chao_contact2) = 2.50192609134178179E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente2.$S_DiscosV.$M_chao_contact2) = $P_chao   ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscosV.$M_chao_contact3) = -8.12908376043431069E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscosV.$M_chao_contact3) = 2.50207298878262541E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente2.$S_DiscosV.$M_chao_contact3) = $P_chao   ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoD1.$M_Base_contact1) = -6.28318530905436834E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoD1.$M_Base_contact1) = 1.57079632679489745E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoD1.$M_Base_contact2) = -6.28318530904804629E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoD1.$M_Base_contact2) = 1.57079632679489745E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoD1.$M_Base_contact3) = -2.96800164938173497E-08 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoD1.$M_Base_contact3) = 1.57079632679489745E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoD1.$M_chao_contact1) = 4.46638905120292362E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoD1.$M_chao_contact1) = 2.14999999761169874E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoD1.$M_chao_contact2) = 2.83896144912656689E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoD1.$M_chao_contact2) = 2.14999999761975230E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoD1.$M_chao_contact3) = 6.09381665327927924E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoD1.$M_chao_contact3) = 2.14999996219036260E-01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoD2.$M_Base_contact1) = -6.28318530905328654E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoD2.$M_Base_contact1) = 1.57079632679489745E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoD2.$M_Base_contact2) = -6.28318530904765638E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoD2.$M_Base_contact2) = 1.57079632679489745E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoD2.$M_Base_contact3) = -2.65084885733451951E-08 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoD2.$M_Base_contact3) = 1.57079632679489745E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoD2.$M_chao_contact1) = 4.21638905120292340E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoD2.$M_chao_contact1) = 2.84999999761307687E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoD2.$M_chao_contact2) = 2.58896144912656667E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoD2.$M_chao_contact2) = 2.84999999762024947E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoD2.$M_chao_contact3) = 5.84381665327928013E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoD2.$M_chao_contact3) = 2.84999996623060137E-01 ! Algebraic states


subvar.str (                        $S_LinhaSemente3.$_IF         ) = '$_IF'                  ! Definition

joint.st.pos (            1 ,       $S_LinhaSemente3.$J_Estrutura ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            2 ,       $S_LinhaSemente3.$J_Estrutura ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            3 ,       $S_LinhaSemente3.$J_Estrutura ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            4 ,       $S_LinhaSemente3.$J_Estrutura ) = 3.60638905120292286E-01 ! Position
joint.st.pos (            5 ,       $S_LinhaSemente3.$J_Estrutura ) = -7.50000000000000000E-01 ! Position
joint.st.pos (            6 ,       $S_LinhaSemente3.$J_Estrutura ) = 5.28390889286349030E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente3.$J_Estrutura ) = -4.43650731793511366E-72 ! Velocity
joint.st.vel (            2 ,       $S_LinhaSemente3.$J_Estrutura ) = 6.10714193279263009E-72 ! Velocity
joint.st.vel (            3 ,       $S_LinhaSemente3.$J_Estrutura ) = 1.56217374384851740E-71 ! Velocity
joint.st.vel (            4 ,       $S_LinhaSemente3.$J_Estrutura ) = 7.12445416791283556E-56 ! Velocity
joint.st.vel (            5 ,       $S_LinhaSemente3.$J_Estrutura ) = -1.61322545417740960E-71 ! Velocity
joint.st.vel (            6 ,       $S_LinhaSemente3.$J_Estrutura ) = 1.32133287900619965E-70 ! Velocity


prim.transparency (                 $S_LinhaSemente3.$P_chao      ) = 1.00000000000000000E+00 ! Transparency


joint.from (                        $S_LinhaSemente3.$J_connector ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_BarraCima.$M_Body1_contact) = -5.16244773342849683E-01 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente3.$S_BarraCima.$J_Body1) = -2.70526034059121345E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente3.$S_BarraCima.$J_Body1) = 2.75262266900781254E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_BarraBaixo.$M_Body1_contact) = 3.97756818462262896E+00 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente3.$S_BarraBaixo.$J_Body1) = -2.70526034059121956E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente3.$S_BarraBaixo.$J_Body1) = 3.10893136335261105E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_Base_contact1) = -4.71247124348736577E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_Base_contact1) = 1.72784676552986163E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_Base_contact2) = -6.91142268532780406E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_Base_contact2) = 2.67034205727882927E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_Base_contact3) = 9.73885494179580178E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_Base_contact3) = -3.92703630108325683E+01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_chao_contact1) = -7.81431437529117279E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_chao_contact1) = -8.89868352862460243E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_chao_contact1) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_chao_contact2) = -7.96345222917082030E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_chao_contact2) = -8.89870105205423201E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_chao_contact2) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_chao_contact3) = -7.66517847243649264E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_chao_contact3) = -8.89868364823893643E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_chao_contact3) = $P_chao ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_Base_contact1) = -3.45585654317021067E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_Base_contact1) = 1.09952740391642436E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_Base_contact2) = -5.02644466271317683E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_Base_contact2) = 1.41370176148285065E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_Base_contact3) = 2.01062972406187214E+02 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_Base_contact3) = -3.61287558571219591E+01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_chao_contact1) = -7.81431312405945633E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_chao_contact1) = -6.09832841353137867E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_chao_contact1) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_chao_contact2) = -7.96344709074958423E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_chao_contact2) = -6.09834470010229501E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_chao_contact2) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_chao_contact3) = -7.66518090697261734E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_chao_contact3) = -6.09833484741141962E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_chao_contact3) = $P_chao ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscosV.$M_Base_contact1) = -3.76982494044783962E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscosV.$M_Base_contact1) = 7.85420114170517625E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscosV.$M_Base_contact2) = -2.82751541834271478E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscosV.$M_Base_contact2) = 1.09959590101577618E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscosV.$M_Base_contact3) = 6.28327474998333670E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscosV.$M_Base_contact3) = -2.98450678099390920E+01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscosV.$M_chao_contact1) = -8.25438698134279214E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscosV.$M_chao_contact1) = -7.49898292918418807E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente3.$S_DiscosV.$M_chao_contact1) = $P_chao   ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscosV.$M_chao_contact2) = -8.37965873196026756E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscosV.$M_chao_contact2) = -7.49903293146803818E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente3.$S_DiscosV.$M_chao_contact2) = $P_chao   ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscosV.$M_chao_contact3) = -8.12911617326920855E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscosV.$M_chao_contact3) = -7.49894504700944653E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente3.$S_DiscosV.$M_chao_contact3) = $P_chao   ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoD1.$M_Base_contact1) = -6.28318531252874557E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoD1.$M_Base_contact1) = 1.57079632679489678E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoD1.$M_Base_contact2) = -6.28318531252743284E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoD1.$M_Base_contact2) = 1.57079632679489678E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoD1.$M_Base_contact3) = -5.35402073375330952E-09 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoD1.$M_Base_contact3) = 1.57079632679489678E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoD1.$M_chao_contact1) = 4.46638905120292418E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoD1.$M_chao_contact1) = -7.85000000681434162E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoD1.$M_chao_contact2) = 2.83896144912656800E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoD1.$M_chao_contact2) = -7.85000000681266963E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoD1.$M_chao_contact3) = 6.09381665327928146E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoD1.$M_chao_contact3) = -7.85000000682053556E-01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoD2.$M_Base_contact1) = -6.28318531252851820E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoD2.$M_Base_contact1) = 1.57079632679489678E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoD2.$M_Base_contact2) = -6.28318531252771617E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoD2.$M_Base_contact2) = 1.57079632679489678E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoD2.$M_Base_contact3) = -5.35278797730248190E-09 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoD2.$M_Base_contact3) = 1.57079632679489678E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoD2.$M_chao_contact1) = 4.21638905120292395E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoD2.$M_chao_contact1) = -7.15000000681405123E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoD2.$M_chao_contact2) = 2.58896144912656778E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoD2.$M_chao_contact2) = -7.15000000681302983E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoD2.$M_chao_contact3) = 5.84381665327928124E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoD2.$M_chao_contact3) = -7.15000000681896286E-01 ! Algebraic states


subvar.str (                        $S_LinhaSemente4.$_IF         ) = '$_IF'                  ! Definition

joint.st.pos (            1 ,       $S_LinhaSemente4.$J_Estrutura ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            2 ,       $S_LinhaSemente4.$J_Estrutura ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            3 ,       $S_LinhaSemente4.$J_Estrutura ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            4 ,       $S_LinhaSemente4.$J_Estrutura ) = 3.60638905120293285E-01 ! Position
joint.st.pos (            5 ,       $S_LinhaSemente4.$J_Estrutura ) = 7.50000000000000000E-01 ! Position
joint.st.pos (            6 ,       $S_LinhaSemente4.$J_Estrutura ) = 5.28390889286346366E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente4.$J_Estrutura ) = -1.21916079776171255E-72 ! Velocity
joint.st.vel (            2 ,       $S_LinhaSemente4.$J_Estrutura ) = -2.44285677311705163E-71 ! Velocity
joint.st.vel (            3 ,       $S_LinhaSemente4.$J_Estrutura ) = -2.25934787389019019E-72 ! Velocity
joint.st.vel (            4 ,       $S_LinhaSemente4.$J_Estrutura ) = 7.12445416791284281E-56 ! Velocity
joint.st.vel (            5 ,       $S_LinhaSemente4.$J_Estrutura ) = 4.76515630199521806E-72 ! Velocity
joint.st.vel (            6 ,       $S_LinhaSemente4.$J_Estrutura ) = -1.08517154051725216E-70 ! Velocity


prim.transparency (                 $S_LinhaSemente4.$P_chao      ) = 1.00000000000000000E+00 ! Transparency


joint.from (                        $S_LinhaSemente4.$J_connector ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_BarraCima.$M_Body1_contact) = -5.16244773342849683E-01 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente4.$S_BarraCima.$J_Body1) = -2.70526034059125897E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente4.$S_BarraCima.$J_Body1) = -1.53181649119391571E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_BarraBaixo.$M_Body1_contact) = 3.97756818462262896E+00 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente4.$S_BarraBaixo.$J_Body1) = -2.70526034059126397E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente4.$S_BarraBaixo.$J_Body1) = -2.12399300169443480E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_Base_contact1) = 2.19890817942393646E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_Base_contact1) = 1.09952957020404991E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_Base_contact2) = 3.77011721386211107E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_Base_contact2) = 1.41368563469272672E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_Base_contact3) = 2.04201477860295512E+02 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_Base_contact3) = 3.61280698160563603E+01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_chao_contact1) = -7.81431712371183540E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_chao_contact1) = 6.10326215442832720E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_chao_contact1) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_chao_contact2) = -7.96342191672867106E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_chao_contact2) = 6.10325282337100372E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_chao_contact2) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_chao_contact3) = -7.66521246501187914E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_chao_contact3) = 6.10322638166876930E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_chao_contact3) = $P_chao ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_Base_contact1) = 3.45554494419201603E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_Base_contact1) = 1.72784966888660527E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_Base_contact2) = 5.65507311703950819E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_Base_contact2) = 2.67031868650936488E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_Base_contact3) = 1.00533012277808268E+02 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_Base_contact3) = 3.92697308226971273E+01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_chao_contact1) = -7.81431975179467031E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_chao_contact1) = 8.90325477214806371E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_chao_contact1) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_chao_contact2) = -7.96341579009186162E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_chao_contact2) = 8.90324574277660541E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_chao_contact2) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_chao_contact3) = -7.66522335325594817E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_chao_contact3) = 8.90321889990674631E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_chao_contact3) = $P_chao ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscosV.$M_Base_contact1) = 2.51347214534070353E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscosV.$M_Base_contact1) = 7.85353227594445791E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscosV.$M_Base_contact2) = 1.57060659731181609E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscosV.$M_Base_contact2) = 1.09950730386597986E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscosV.$M_Base_contact3) = 6.28338923158462919E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscosV.$M_Base_contact3) = 3.29863249267101253E+01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscosV.$M_chao_contact1) = -8.25430910222290137E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscosV.$M_chao_contact1) = 7.50229120820804618E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente4.$S_DiscosV.$M_chao_contact1) = $P_chao   ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscosV.$M_chao_contact2) = -8.37955534979482763E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscosV.$M_chao_contact2) = 7.50219638420264623E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente4.$S_DiscosV.$M_chao_contact2) = $P_chao   ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscosV.$M_chao_contact3) = -8.12906279167726709E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscosV.$M_chao_contact3) = 7.50235841417021709E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente4.$S_DiscosV.$M_chao_contact3) = $P_chao   ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoD1.$M_Base_contact1) = -6.28318531377311285E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoD1.$M_Base_contact1) = 1.57079632679489789E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoD1.$M_Base_contact2) = -6.28318531397101854E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoD1.$M_Base_contact2) = 1.57079632679489789E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoD1.$M_Base_contact3) = -6.79075289003904975E-09 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoD1.$M_Base_contact3) = 1.57079632679489789E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoD1.$M_chao_contact1) = 4.46638905120293805E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoD1.$M_chao_contact1) = 7.14999999160044752E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoD1.$M_chao_contact2) = 2.83896144912658133E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoD1.$M_chao_contact2) = 7.14999999134833253E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoD1.$M_chao_contact3) = 6.09381665327929589E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoD1.$M_chao_contact3) = 7.14999999134919850E-01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoD2.$M_Base_contact1) = -6.28318531377258171E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoD2.$M_Base_contact1) = 1.57079632679489789E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoD2.$M_Base_contact2) = -6.28318531397072721E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoD2.$M_Base_contact2) = 1.57079632679489789E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoD2.$M_Base_contact3) = -6.79128954731964684E-09 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoD2.$M_Base_contact3) = 1.57079632679489789E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoD2.$M_chao_contact1) = 4.21638905120293783E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoD2.$M_chao_contact1) = 7.84999999160112427E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoD2.$M_chao_contact2) = 2.58896144912658110E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoD2.$M_chao_contact2) = 7.84999999134870619E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoD2.$M_chao_contact3) = 5.84381665327929456E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoD2.$M_chao_contact3) = 7.84999999134851745E-01 ! Algebraic states


subvar.str (                        $S_LinhaSemente5.$_IF         ) = '$_IF'                  ! Definition

joint.st.pos (            1 ,       $S_LinhaSemente5.$J_Estrutura ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            2 ,       $S_LinhaSemente5.$J_Estrutura ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            3 ,       $S_LinhaSemente5.$J_Estrutura ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            4 ,       $S_LinhaSemente5.$J_Estrutura ) = 3.60638905120292674E-01 ! Position
joint.st.pos (            5 ,       $S_LinhaSemente5.$J_Estrutura ) = -1.25000000000000000E+00 ! Position
joint.st.pos (            6 ,       $S_LinhaSemente5.$J_Estrutura ) = 5.28390889286346810E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente5.$J_Estrutura ) = 3.22038546435148277E-72 ! Velocity
joint.st.vel (            2 ,       $S_LinhaSemente5.$J_Estrutura ) = 6.10714193279262587E-71 ! Velocity
joint.st.vel (            3 ,       $S_LinhaSemente5.$J_Estrutura ) = -3.70170636687200842E-72 ! Velocity
joint.st.vel (            4 ,       $S_LinhaSemente5.$J_Estrutura ) = 7.12445416791283918E-56 ! Velocity
joint.st.vel (            5 ,       $S_LinhaSemente5.$J_Estrutura ) = 3.63117802333082623E-72 ! Velocity
joint.st.vel (            6 ,       $S_LinhaSemente5.$J_Estrutura ) = -2.89301391017231768E-71 ! Velocity


prim.transparency (                 $S_LinhaSemente5.$P_chao      ) = 1.00000000000000000E+00 ! Transparency


joint.from (                        $S_LinhaSemente5.$J_connector ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_BarraCima.$M_Body1_contact) = -5.16244773342849572E-01 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente5.$S_BarraCima.$J_Body1) = -2.70526034059131282E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente5.$S_BarraCima.$J_Body1) = -1.92886615448301687E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_BarraBaixo.$M_Body1_contact) = 3.97756818462262896E+00 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente5.$S_BarraBaixo.$J_Body1) = -2.70526034059131282E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente5.$S_BarraBaixo.$J_Body1) = -2.02803412190294842E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_Base_contact1) = -7.22570907997599789E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_Base_contact1) = 4.24112337459419848E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_Base_contact2) = -1.03673005279147247E+02 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_Base_contact2) = 6.75441783242765155E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_Base_contact3) = 6.91155044548458335E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_Base_contact3) = -3.61287725524383347E+01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_chao_contact1) = -7.81431826887388503E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_chao_contact1) = -1.38992627610828623E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_chao_contact1) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_chao_contact2) = -7.96346073332683879E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_chao_contact2) = -1.38992819825899860E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_chao_contact2) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_chao_contact3) = -7.66517797484006724E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_chao_contact3) = -1.38992528974840335E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_chao_contact3) = $P_chao ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_Base_contact1) = -5.96909176346062793E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_Base_contact1) = 2.35616624183140182E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_Base_contact2) = -8.48236472944935258E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_Base_contact2) = 4.24114079877873067E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_Base_contact3) = 6.91156986225968524E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_Base_contact3) = -3.61287748760281531E+01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_chao_contact1) = -7.81431584258302614E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_chao_contact1) = -1.10989471758639735E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_chao_contact1) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_chao_contact2) = -7.96345607933928168E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_chao_contact2) = -1.10989655267965337E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_chao_contact2) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_chao_contact3) = -7.66517767466576050E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_chao_contact3) = -1.10989426926403412E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_chao_contact3) = $P_chao ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscosV.$M_Base_contact1) = -5.65481677686671560E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscosV.$M_Base_contact1) = 3.29870672208033326E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscosV.$M_Base_contact2) = -4.39818257977612106E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscosV.$M_Base_contact2) = 2.67040791727969982E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscosV.$M_Base_contact3) = 4.39828200790378716E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscosV.$M_Base_contact3) = -2.98449738523582901E+01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscosV.$M_chao_contact1) = -8.25440182154489221E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscosV.$M_chao_contact1) = -1.24994086629850809E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente5.$S_DiscosV.$M_chao_contact1) = $P_chao   ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscosV.$M_chao_contact2) = -8.37967740247759885E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscosV.$M_chao_contact2) = -1.24994428002006530E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente5.$S_DiscosV.$M_chao_contact2) = $P_chao   ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscosV.$M_chao_contact3) = -8.12912731040538539E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscosV.$M_chao_contact3) = -1.24993813772295059E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente5.$S_DiscosV.$M_chao_contact3) = $P_chao   ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoD1.$M_Base_contact1) = -6.28318530882537640E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoD1.$M_Base_contact1) = 1.57079632679489500E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoD1.$M_Base_contact2) = -6.28318530977594847E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoD1.$M_Base_contact2) = 1.57079632679489500E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoD1.$M_Base_contact3) = 4.61549942377720977E-09 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoD1.$M_Base_contact3) = 1.57079632679489500E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoD1.$M_chao_contact1) = 4.46638905120292029E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoD1.$M_chao_contact1) = -1.28500000020965843E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoD1.$M_chao_contact2) = 2.83896144912656412E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoD1.$M_chao_contact2) = -1.28500000033075290E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoD1.$M_chao_contact3) = 6.09381665327927702E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoD1.$M_chao_contact3) = -1.28499999941202758E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoD2.$M_Base_contact1) = -6.28318530255350005E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoD2.$M_Base_contact1) = 1.57079632679489500E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoD2.$M_Base_contact2) = -6.28318530255759544E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoD2.$M_Base_contact2) = 1.57079632679489500E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoD2.$M_Base_contact3) = 4.61889209425570484E-09 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoD2.$M_Base_contact3) = 1.57079632679489500E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoD2.$M_chao_contact1) = 4.21638905120292007E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoD2.$M_chao_contact1) = -1.21499999941067882E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoD2.$M_chao_contact2) = 2.58896144912656390E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoD2.$M_chao_contact2) = -1.21499999941120063E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoD2.$M_chao_contact3) = 5.84381665327927680E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoD2.$M_chao_contact3) = -1.21499999941159520E+00 ! Algebraic states


subvar.str (                        $S_LinhaSemente6.$_IF         ) = '$_IF'                  ! Definition

joint.st.pos (            1 ,       $S_LinhaSemente6.$J_Estrutura ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            2 ,       $S_LinhaSemente6.$J_Estrutura ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            3 ,       $S_LinhaSemente6.$J_Estrutura ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            4 ,       $S_LinhaSemente6.$J_Estrutura ) = 3.60638905120294784E-01 ! Position
joint.st.pos (            5 ,       $S_LinhaSemente6.$J_Estrutura ) = 1.25000000000000000E+00 ! Position
joint.st.pos (            6 ,       $S_LinhaSemente6.$J_Estrutura ) = 5.28390889286340815E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente6.$J_Estrutura ) = -2.47848009555682054E-72 ! Velocity
joint.st.vel (            2 ,       $S_LinhaSemente6.$J_Estrutura ) = 6.10714193279262004E-72 ! Velocity
joint.st.vel (            3 ,       $S_LinhaSemente6.$J_Estrutura ) = 8.79555658933372842E-72 ! Velocity
joint.st.vel (            4 ,       $S_LinhaSemente6.$J_Estrutura ) = 7.12445416791283556E-56 ! Velocity
joint.st.vel (            5 ,       $S_LinhaSemente6.$J_Estrutura ) = -3.94371857694179818E-72 ! Velocity
joint.st.vel (            6 ,       $S_LinhaSemente6.$J_Estrutura ) = 1.27126485676026367E-70 ! Velocity


prim.transparency (                 $S_LinhaSemente6.$P_chao      ) = 1.00000000000000000E+00 ! Transparency


joint.from (                        $S_LinhaSemente6.$J_connector ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_BarraCima.$M_Body1_contact) = -5.16244773342849461E-01 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente6.$S_BarraCima.$J_Body1) = -2.70526034059140330E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente6.$S_BarraCima.$J_Body1) = 2.93359532921449578E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_BarraBaixo.$M_Body1_contact) = 3.97756818462262896E+00 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente6.$S_BarraBaixo.$J_Body1) = -2.70526034059140941E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente6.$S_BarraBaixo.$J_Body1) = 2.65245578247643963E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_Base_contact1) = 4.71219319090995157E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_Base_contact1) = 2.35616935568241850E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_Base_contact2) = 7.22546797925179050E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_Base_contact2) = 4.24111190862084371E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_Base_contact3) = 6.59715083652878036E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_Base_contact3) = 3.61281899682048149E+01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_chao_contact1) = -7.81432168158683549E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_chao_contact1) = 1.11030701684149946E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_chao_contact1) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_chao_contact2) = -7.96341107569475959E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_chao_contact2) = 1.11030606530722542E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_chao_contact2) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_chao_contact3) = -7.66523155244232512E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_chao_contact3) = 1.11030374248623565E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_chao_contact3) = $P_chao ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_Base_contact1) = 5.96885901914372425E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_Base_contact1) = 4.24112604832253410E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_Base_contact2) = 9.11045242648786484E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_Base_contact2) = 6.75438223151275849E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_Base_contact3) = 5.02671371299846896E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_Base_contact3) = 3.92698399177512769E+01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_chao_contact1) = -7.81432353022495807E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_chao_contact1) = 1.39026105304581571E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_chao_contact1) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_chao_contact2) = -7.96340532910545829E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_chao_contact2) = 1.39025995661734814E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_chao_contact2) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_chao_contact3) = -7.66524056995677849E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_chao_contact3) = 1.39025858403614899E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_chao_contact3) = $P_chao ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscosV.$M_Base_contact1) = 4.39840320049043996E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscosV.$M_Base_contact1) = 3.29860005069873381E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscosV.$M_Base_contact2) = 3.14175873069461744E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscosV.$M_Base_contact2) = 2.67026698005026084E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscosV.$M_Base_contact3) = 4.08389165042268800E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscosV.$M_Base_contact3) = 2.98445490176528807E+01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscosV.$M_chao_contact1) = -8.25427820119260147E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscosV.$M_chao_contact1) = 1.25019908288117487E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente6.$S_DiscosV.$M_chao_contact1) = $P_chao   ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscosV.$M_chao_contact2) = -8.37951371097709163E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscosV.$M_chao_contact2) = 1.25019074675129205E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente6.$S_DiscosV.$M_chao_contact2) = $P_chao   ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscosV.$M_chao_contact3) = -8.12904216645767264E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscosV.$M_chao_contact3) = 1.25020503480566614E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente6.$S_DiscosV.$M_chao_contact3) = $P_chao   ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoD1.$M_Base_contact1) = -6.28318534120222161E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoD1.$M_Base_contact1) = 1.57079632679489722E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoD1.$M_Base_contact2) = -6.28318530496156580E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoD1.$M_Base_contact2) = 1.57079632679489722E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoD1.$M_Base_contact3) = -6.37130610579834666E-10 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoD1.$M_Base_contact3) = 1.57079632679489722E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoD1.$M_chao_contact1) = 4.46638905120294971E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoD1.$M_chao_contact1) = 1.21499999566582639E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoD1.$M_chao_contact2) = 2.83896144912659187E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoD1.$M_chao_contact2) = 1.21500000028255561E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoD1.$M_chao_contact3) = 6.09381665327930477E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoD1.$M_chao_contact3) = 1.21499999991883545E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoD2.$M_Base_contact1) = -6.28318530985397317E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoD2.$M_Base_contact1) = 1.57079632679489722E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoD2.$M_Base_contact2) = -6.28318527308986940E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoD2.$M_Base_contact2) = 1.57079632679489700E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoD2.$M_Base_contact3) = -6.77211520224925267E-09 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoD2.$M_Base_contact3) = 1.57079632679489722E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoD2.$M_chao_contact1) = 4.21638905120294949E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoD2.$M_chao_contact1) = 1.28499999965930711E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoD2.$M_chao_contact2) = 2.58896144912659165E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoD2.$M_chao_contact2) = 1.28500000434271922E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoD2.$M_chao_contact3) = 5.84381665327930455E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoD2.$M_chao_contact3) = 1.28499999913729401E+00 ! Algebraic states


subvar.str (                        $S_disco1.$_b                 ) = '0.01'                  ! Definition

subvar.str (                        $S_disco1.$_d                 ) = '0.511'                 ! Definition

subvar.str (                        $S_disco1.$_A                 ) = '0.001*5.67'            ! Definition

marker.st.alg (           1 ,       $S_disco1.$M_Base_contact1    ) = -6.28349183372730113E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco1.$M_Base_contact1    ) = 1.56988752590171776E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_disco1.$M_Base_contact2    ) = -6.28325566410358238E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco1.$M_Base_contact2    ) = 1.56984960212838787E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_disco1.$M_Base_contact3    ) = -1.38230624248336539E+02 ! Algebraic states
marker.st.alg (           2 ,       $S_disco1.$M_Base_contact3    ) = 1.41363148208502558E+01 ! Algebraic states

joint.from (                        $S_disco1.$J_Base             ) = $M_Boogie_Disco1        ! From Marker
joint.type (                        $S_disco1.$J_Base             ) = 2                       ! Type


prim.pos (                2 ,       $S_disco1.$P_Roda1_pneu       ) = 4.49999999999999983E-02 ! Position
prim.ang (                3 ,       $S_disco1.$P_Roda1_pneu       ) = { 90 deg }              ! Angles
prim.mp.dens.solid (                $S_disco1.$P_Roda1_pneu       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $S_disco1.$P_Roda1_pneu       ) = './pecas_stl/disco_de_corte_stl/discos.stl' ! [-] CAD file name

prim.type (                         $S_disco1.$P_Roda1_aro        ) = 2                       ! Type
prim.ang (                1 ,       $S_disco1.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Angles
prim.ang (                2 ,       $S_disco1.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            2 ,       $S_disco1.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            2 ,       $S_disco1.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            2 ,       $S_disco1.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            2 ,       $S_disco1.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $S_disco1.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! Transparency
prim.par (                2 ,       $S_disco1.$P_Roda1_aro        ) = $S_disco1.$_b           ! [m] Height
prim.par (                3 ,       $S_disco1.$P_Roda1_aro        ) = $S_disco1.$_d           ! [m] Outer diameter
prim.par (                4 ,       $S_disco1.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [m] Inner diameter
prim.par (                5 ,       $S_disco1.$P_Roda1_aro        ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $S_disco1.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $S_disco1.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $S_disco1.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $S_disco1.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [rad] Start angle


joint.from (                        $S_disco1.$J_connector        ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_disco1.$M_chao_contact1    ) = -5.43290314110796757E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco1.$M_chao_contact1    ) = -2.65032669231544227E-01 ! Algebraic states
marker.par (              3 ,       $S_disco1.$M_chao_contact1    ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_disco1.$M_chao_contact2    ) = -5.65059930158926260E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco1.$M_chao_contact2    ) = -2.65007512790854383E-01 ! Algebraic states
marker.par (              3 ,       $S_disco1.$M_chao_contact2    ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_disco1.$M_chao_contact3    ) = -5.21520895179507082E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco1.$M_chao_contact3    ) = -2.65058245738786780E-01 ! Algebraic states
marker.par (              3 ,       $S_disco1.$M_chao_contact3    ) = $P_chao                 ! [-] Contact geometry Primitive

prim.transparency (                 $S_disco1.$P_chao             ) = 1.00000000000000000E+00 ! Transparency


subvar.str (                        $S_disco2.$_b                 ) = '0.01'                  ! Definition

subvar.str (                        $S_disco2.$_d                 ) = '0.511'                 ! Definition

subvar.str (                        $S_disco2.$_A                 ) = '0.001*5.67'            ! Definition

marker.st.alg (           1 ,       $S_disco2.$M_Base_contact1    ) = -6.28368202902464112E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco2.$M_Base_contact1    ) = 1.57053547191468090E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_disco2.$M_Base_contact2    ) = -6.28335875998471316E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco2.$M_Base_contact2    ) = 1.57048186277014779E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_disco2.$M_Base_contact3    ) = -8.25187250119215716E-04 ! Algebraic states
marker.st.alg (           2 ,       $S_disco2.$M_Base_contact3    ) = 1.57059923170141547E+00 ! Algebraic states

joint.from (                        $S_disco2.$J_Base             ) = $M_Boogie_Disco2        ! From Marker
joint.type (                        $S_disco2.$J_Base             ) = 2                       ! Type


prim.pos (                2 ,       $S_disco2.$P_Roda1_pneu       ) = 4.49999999999999983E-02 ! Position
prim.ang (                3 ,       $S_disco2.$P_Roda1_pneu       ) = { 90 deg }              ! Angles
prim.mp.dens.solid (                $S_disco2.$P_Roda1_pneu       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $S_disco2.$P_Roda1_pneu       ) = './pecas_stl/disco_de_corte_stl/discos.stl' ! [-] CAD file name

prim.type (                         $S_disco2.$P_Roda1_aro        ) = 2                       ! Type
prim.ang (                1 ,       $S_disco2.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Angles
prim.ang (                2 ,       $S_disco2.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            2 ,       $S_disco2.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            2 ,       $S_disco2.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            2 ,       $S_disco2.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            2 ,       $S_disco2.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $S_disco2.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! Transparency
prim.par (                2 ,       $S_disco2.$P_Roda1_aro        ) = $S_disco2.$_b           ! [m] Height
prim.par (                3 ,       $S_disco2.$P_Roda1_aro        ) = $S_disco2.$_d           ! [m] Outer diameter
prim.par (                4 ,       $S_disco2.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [m] Inner diameter
prim.par (                5 ,       $S_disco2.$P_Roda1_aro        ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $S_disco2.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $S_disco2.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $S_disco2.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $S_disco2.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [rad] Start angle


joint.from (                        $S_disco2.$J_connector        ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_disco2.$M_chao_contact1    ) = -5.43297214626225244E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco2.$M_chao_contact1    ) = 2.34946960695966933E-01 ! Algebraic states
marker.par (              3 ,       $S_disco2.$M_chao_contact1    ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_disco2.$M_chao_contact2    ) = -5.65066679608507449E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco2.$M_chao_contact2    ) = 2.34981468043205299E-01 ! Algebraic states
marker.par (              3 ,       $S_disco2.$M_chao_contact2    ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_disco2.$M_chao_contact3    ) = -5.21527857042284726E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco2.$M_chao_contact3    ) = 2.34911928885095656E-01 ! Algebraic states
marker.par (              3 ,       $S_disco2.$M_chao_contact3    ) = $P_chao                 ! [-] Contact geometry Primitive

prim.transparency (                 $S_disco2.$P_chao             ) = 1.00000000000000000E+00 ! Transparency


subvar.str (                        $S_disco3.$_b                 ) = '0.01'                  ! Definition

subvar.str (                        $S_disco3.$_d                 ) = '0.511'                 ! Definition

subvar.str (                        $S_disco3.$_A                 ) = '0.001*5.67'            ! Definition

marker.st.alg (           1 ,       $S_disco3.$M_Base_contact1    ) = -6.28332389355176435E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco3.$M_Base_contact1    ) = 1.56943033225658501E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_disco3.$M_Base_contact2    ) = -6.28316590091545457E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco3.$M_Base_contact2    ) = 1.56940581889268982E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_disco3.$M_Base_contact3    ) = -6.91153393324451457E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_disco3.$M_Base_contact3    ) = 1.41358500717883402E+01 ! Algebraic states

joint.from (                        $S_disco3.$J_Base             ) = $M_Boogie_Disco3        ! From Marker
joint.type (                        $S_disco3.$J_Base             ) = 2                       ! Type


prim.pos (                2 ,       $S_disco3.$P_Roda1_pneu       ) = 4.49999999999999983E-02 ! Position
prim.ang (                3 ,       $S_disco3.$P_Roda1_pneu       ) = { 90 deg }              ! Angles
prim.mp.dens.solid (                $S_disco3.$P_Roda1_pneu       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $S_disco3.$P_Roda1_pneu       ) = './pecas_stl/disco_de_corte_stl/discos.stl' ! [-] CAD file name

prim.type (                         $S_disco3.$P_Roda1_aro        ) = 2                       ! Type
prim.ang (                1 ,       $S_disco3.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Angles
prim.ang (                2 ,       $S_disco3.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            2 ,       $S_disco3.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            2 ,       $S_disco3.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            2 ,       $S_disco3.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            2 ,       $S_disco3.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $S_disco3.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! Transparency
prim.par (                2 ,       $S_disco3.$P_Roda1_aro        ) = $S_disco3.$_b           ! [m] Height
prim.par (                3 ,       $S_disco3.$P_Roda1_aro        ) = $S_disco3.$_d           ! [m] Outer diameter
prim.par (                4 ,       $S_disco3.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [m] Inner diameter
prim.par (                5 ,       $S_disco3.$P_Roda1_aro        ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $S_disco3.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $S_disco3.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $S_disco3.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $S_disco3.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [rad] Start angle


joint.from (                        $S_disco3.$J_connector        ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_disco3.$M_chao_contact1    ) = -5.43285456472479300E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco3.$M_chao_contact1    ) = -7.65014755076253605E-01 ! Algebraic states
marker.par (              3 ,       $S_disco3.$M_chao_contact1    ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_disco3.$M_chao_contact2    ) = -5.65055193087965346E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco3.$M_chao_contact2    ) = -7.64997928013696926E-01 ! Algebraic states
marker.par (              3 ,       $S_disco3.$M_chao_contact2    ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_disco3.$M_chao_contact3    ) = -5.21515978626915810E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco3.$M_chao_contact3    ) = -7.65031954027230010E-01 ! Algebraic states
marker.par (              3 ,       $S_disco3.$M_chao_contact3    ) = $P_chao                 ! [-] Contact geometry Primitive

prim.transparency (                 $S_disco3.$P_chao             ) = 1.00000000000000000E+00 ! Transparency


subvar.str (                        $S_disco4.$_b                 ) = '0.01'                  ! Definition

subvar.str (                        $S_disco4.$_d                 ) = '0.511'                 ! Definition

subvar.str (                        $S_disco4.$_A                 ) = '0.001*5.67'            ! Definition

marker.st.alg (           1 ,       $S_disco4.$M_Base_contact1    ) = -6.28380004990688956E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco4.$M_Base_contact1    ) = 1.57136390328546205E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_disco4.$M_Base_contact2    ) = -6.28342450454098334E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco4.$M_Base_contact2    ) = 1.57129255722464545E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_disco4.$M_Base_contact3    ) = -6.28328486742956045E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_disco4.$M_Base_contact3    ) = -1.09949364361661850E+01 ! Algebraic states

joint.from (                        $S_disco4.$J_Base             ) = $M_Boogie_Disco4        ! From Marker
joint.type (                        $S_disco4.$J_Base             ) = 2                       ! Type


prim.pos (                2 ,       $S_disco4.$P_Roda1_pneu       ) = 4.49999999999999983E-02 ! Position
prim.ang (                3 ,       $S_disco4.$P_Roda1_pneu       ) = { 90 deg }              ! Angles
prim.mp.dens.solid (                $S_disco4.$P_Roda1_pneu       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $S_disco4.$P_Roda1_pneu       ) = './pecas_stl/disco_de_corte_stl/discos.stl' ! [-] CAD file name

prim.type (                         $S_disco4.$P_Roda1_aro        ) = 2                       ! Type
prim.ang (                1 ,       $S_disco4.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Angles
prim.ang (                2 ,       $S_disco4.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            2 ,       $S_disco4.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            2 ,       $S_disco4.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            2 ,       $S_disco4.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            2 ,       $S_disco4.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $S_disco4.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! Transparency
prim.par (                2 ,       $S_disco4.$P_Roda1_aro        ) = $S_disco4.$_b           ! [m] Height
prim.par (                3 ,       $S_disco4.$P_Roda1_aro        ) = $S_disco4.$_d           ! [m] Outer diameter
prim.par (                4 ,       $S_disco4.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [m] Inner diameter
prim.par (                5 ,       $S_disco4.$P_Roda1_aro        ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $S_disco4.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $S_disco4.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $S_disco4.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $S_disco4.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [rad] Start angle


joint.from (                        $S_disco4.$J_connector        ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_disco4.$M_chao_contact1    ) = -5.43306076748167932E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco4.$M_chao_contact1    ) = 7.34934182661278079E-01 ! Algebraic states
marker.par (              3 ,       $S_disco4.$M_chao_contact1    ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_disco4.$M_chao_contact2    ) = -5.65075346525622102E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco4.$M_chao_contact2    ) = 7.34974418071340341E-01 ! Algebraic states
marker.par (              3 ,       $S_disco4.$M_chao_contact2    ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_disco4.$M_chao_contact3    ) = -5.21536798124608314E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco4.$M_chao_contact3    ) = 7.34893275323947770E-01 ! Algebraic states
marker.par (              3 ,       $S_disco4.$M_chao_contact3    ) = $P_chao                 ! [-] Contact geometry Primitive

prim.transparency (                 $S_disco4.$P_chao             ) = 1.00000000000000000E+00 ! Transparency


subvar.str (                        $S_disco5.$_b                 ) = '0.01'                  ! Definition

subvar.str (                        $S_disco5.$_d                 ) = '0.511'                 ! Definition

subvar.str (                        $S_disco5.$_A                 ) = '0.001*5.67'            ! Definition

marker.st.alg (           1 ,       $S_disco5.$M_Base_contact1    ) = -6.28317825247772177E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco5.$M_Base_contact1    ) = 1.56914339767575761E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_disco5.$M_Base_contact2    ) = -6.28308956166828469E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco5.$M_Base_contact2    ) = 1.56913016322507426E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_disco5.$M_Base_contact3    ) = -3.76991974778686654E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_disco5.$M_Base_contact3    ) = 1.41355552656949417E+01 ! Algebraic states

joint.from (                        $S_disco5.$J_Base             ) = $M_Boogie_Disco5        ! From Marker
joint.type (                        $S_disco5.$J_Base             ) = 2                       ! Type


prim.pos (                2 ,       $S_disco5.$P_Roda1_pneu       ) = 4.49999999999999983E-02 ! Position
prim.ang (                3 ,       $S_disco5.$P_Roda1_pneu       ) = { 90 deg }              ! Angles
prim.mp.dens.solid (                $S_disco5.$P_Roda1_pneu       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $S_disco5.$P_Roda1_pneu       ) = './pecas_stl/disco_de_corte_stl/discos.stl' ! [-] CAD file name

prim.type (                         $S_disco5.$P_Roda1_aro        ) = 2                       ! Type
prim.ang (                1 ,       $S_disco5.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Angles
prim.ang (                2 ,       $S_disco5.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            2 ,       $S_disco5.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            2 ,       $S_disco5.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            2 ,       $S_disco5.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            2 ,       $S_disco5.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $S_disco5.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! Transparency
prim.par (                2 ,       $S_disco5.$P_Roda1_aro        ) = $S_disco5.$_b           ! [m] Height
prim.par (                3 ,       $S_disco5.$P_Roda1_aro        ) = $S_disco5.$_d           ! [m] Outer diameter
prim.par (                4 ,       $S_disco5.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [m] Inner diameter
prim.par (                5 ,       $S_disco5.$P_Roda1_aro        ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $S_disco5.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $S_disco5.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $S_disco5.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $S_disco5.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [rad] Start angle
prim.par (               10 ,       $S_disco5.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [rad] Delta angle
prim.par (               11 ,       $S_disco5.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [-] Close geometry with


joint.from (                        $S_disco5.$J_connector        ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_disco5.$M_chao_contact1    ) = -5.43282406809916196E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco5.$M_chao_contact1    ) = -1.26499924912226436E+00 ! Algebraic states
marker.par (              3 ,       $S_disco5.$M_chao_contact1    ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_disco5.$M_chao_contact2    ) = -5.65052245055923930E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco5.$M_chao_contact2    ) = -1.26498977454347172E+00 ! Algebraic states
marker.par (              3 ,       $S_disco5.$M_chao_contact2    ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_disco5.$M_chao_contact3    ) = -5.21512863863076070E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco5.$M_chao_contact3    ) = -1.26500908419287605E+00 ! Algebraic states
marker.par (              3 ,       $S_disco5.$M_chao_contact3    ) = $P_chao                 ! [-] Contact geometry Primitive

prim.transparency (                 $S_disco5.$P_chao             ) = 1.00000000000000000E+00 ! Transparency


subvar.str (                        $S_disco6.$_b                 ) = '0.01'                  ! Definition

subvar.str (                        $S_disco6.$_d                 ) = '0.511'                 ! Definition

subvar.str (                        $S_disco6.$_A                 ) = '0.001*5.67'            ! Definition

marker.st.alg (           1 ,       $S_disco6.$M_Base_contact1    ) = -6.28371485616769387E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco6.$M_Base_contact1    ) = 1.57220270114936178E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_disco6.$M_Base_contact2    ) = -6.28338281964294154E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco6.$M_Base_contact2    ) = 1.57211378304293947E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_disco6.$M_Base_contact3    ) = -3.76999783602984522E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_disco6.$M_Base_contact3    ) = -1.09940914883152967E+01 ! Algebraic states

joint.from (                        $S_disco6.$J_Base             ) = $M_Boogie_Disco6        ! From Marker
joint.type (                        $S_disco6.$J_Base             ) = 2                       ! Type


prim.pos (                2 ,       $S_disco6.$P_Roda1_pneu       ) = 4.49999999999999983E-02 ! Position
prim.ang (                3 ,       $S_disco6.$P_Roda1_pneu       ) = { 90 deg }              ! Angles
prim.mp.dens.solid (                $S_disco6.$P_Roda1_pneu       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $S_disco6.$P_Roda1_pneu       ) = './pecas_stl/disco_de_corte_stl/discos.stl' ! [-] CAD file name

prim.type (                         $S_disco6.$P_Roda1_aro        ) = 2                       ! Type
prim.ang (                1 ,       $S_disco6.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Angles
prim.ang (                2 ,       $S_disco6.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            2 ,       $S_disco6.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            2 ,       $S_disco6.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            2 ,       $S_disco6.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            2 ,       $S_disco6.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $S_disco6.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! Transparency
prim.par (                2 ,       $S_disco6.$P_Roda1_aro        ) = $S_disco6.$_b           ! [m] Height
prim.par (                3 ,       $S_disco6.$P_Roda1_aro        ) = $S_disco6.$_d           ! [m] Outer diameter
prim.par (                4 ,       $S_disco6.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [m] Inner diameter
prim.par (                5 ,       $S_disco6.$P_Roda1_aro        ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $S_disco6.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $S_disco6.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $S_disco6.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $S_disco6.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [rad] Start angle


joint.from (                        $S_disco6.$J_connector        ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_disco6.$M_chao_contact1    ) = -5.43315098748001013E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco6.$M_chao_contact1    ) = 1.23494314792442483E+00 ! Algebraic states
marker.par (              3 ,       $S_disco6.$M_chao_contact1    ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_disco6.$M_chao_contact2    ) = -5.65084144428995216E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco6.$M_chao_contact2    ) = 1.23497885377950745E+00 ! Algebraic states
marker.par (              3 ,       $S_disco6.$M_chao_contact2    ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_disco6.$M_chao_contact3    ) = -5.21545926513241920E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco6.$M_chao_contact3    ) = 1.23490669851087453E+00 ! Algebraic states
marker.par (              3 ,       $S_disco6.$M_chao_contact3    ) = $P_chao                 ! [-] Contact geometry Primitive

prim.transparency (                 $S_disco6.$P_chao             ) = 1.00000000000000000E+00 ! Transparency


model.data.redundancy                                               = 'eJxjYBgFxAJGKMYmjk8PNewdKECM3bjUMBJgo+tDFselnpCZlJhDjjgh95uZG5mlmiUmJqUkmpgbGpukGRsbpZoZWianpKQZpKYYAgC1Hwk/gAMAAAAAAAA=' ! Constraint redundancy data
model.data.dependency                                               = 'eJxjZEAFLEDMSABjA4T0oOvFZya1zMJmLil8UtWxkeBuUv2GzscXdpT4YaDUERt25KQLdP5o2JGWpxjwsKnlh+EYduj8kZbuGAjwR8OOtLQ1GnYjU52ZuZFZqlliYlJKoom5obFJmrGxUaqZoWVySkqaQWqKIQAFJApCxAkAAAAAAAA=' ! Solver state dependency data
