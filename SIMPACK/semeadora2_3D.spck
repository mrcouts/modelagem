!file.version=3.7! Removing this line will make the file unreadable

!**********************************************************************
! Simpack Version Information
!**********************************************************************
version.number = 20220002
version.desc   = ''
version.build  = 122

!**********************************************************************
!  Global parameters
!**********************************************************************
searchpath (              1                                       ) = '.'
gravity (                 1                                       ) = 0.00000000000000000E+00 ! Gravity
gravity (                 2                                       ) = 0.00000000000000000E+00 ! Gravity
gravity (                 3                                       ) = -9.81000000000000050E+00 ! Gravity
vehicle.startvel                                                    = 0.00000000000000000E+00 ! Vehicle initial velocity
vehicle.applystartvel                                               = 0                       ! Apply vehicle initial velocity at solver start
glob.compat.flxnodeori                                              = 0                       ! Flexbody Node Orientation Method
glob.compat.afcf                                                    = 0                       ! References Frame for Joint and Force Element Forces and Torques
rw.cont.meth                                                        = 2                       ! MISCPAR_RW_CONTACT_METHOD
rw.linear                                                           = 0                       ! MISCPAR_RW_PROFILE_LINEARIZATION_METHOD
time                                                                = 0.00000000000000000E+00 ! Time
slv.active                                                          = $SLV_SolverSettings     ! Active SolverSettings element
track.active                                                        = null                    ! Active Track element
prop3d.bg.base.color.r                                              = 2.15000000000000000E+02 ! Background color (red component)
prop3d.bg.base.color.g                                              = 2.15000000000000000E+02 ! Background color (green component)
prop3d.bg.base.color.b                                              = 2.15000000000000000E+02 ! Background color (blue component)
prop3d.bg.base.color.t                                              = 0.00000000000000000E+00 ! Background color (transparency component)
prop3d.bg.grad.color.r                                              = 2.55000000000000000E+02 ! Gradient color (red component)
prop3d.bg.grad.color.g                                              = 2.55000000000000000E+02 ! Gradient color (green component)
prop3d.bg.grad.color.b                                              = 2.55000000000000000E+02 ! Gradient color (blue component)
prop3d.bg.grad.color.t                                              = 0.00000000000000000E+00 ! Gradient color (transparency component)
prop3d.bg.gradient                                                  = 1                       ! 0 = constant, 1 = gradient
prop3d.marker.size                                                  = 0.00000000000000000E+00 ! length of Marker axes, if value is zero, use "auto"
prop3d.marker.auto                                                  = 1                       ! 0 = user defined, 1 = auto size determination
prop3d.marker.color.r                                               = 0.00000000000000000E+00 ! Marker color (red component)
prop3d.marker.color.g                                               = 0.00000000000000000E+00 ! Marker color (green component)
prop3d.marker.color.b                                               = 0.00000000000000000E+00 ! Marker color (blue component)
prop3d.marker.color.t                                               = 0.00000000000000000E+00 ! Marker color (transparency component)
prop3d.display                                                      = 1                       ! 1 = shaded,  2 = wireframe, 3 = hidden line
prop3d.bbox                                                         = 0                       ! 0 = exclude all refsys objects, 1 = include all refsys objects
prop2d.joint.visible                                                = 1                       ! Joints visible
prop2d.force.visible                                                = 1                       ! Forces visible
prop2d.constr.visible                                               = 1                       ! Constraints visible
prop2d.sensor.visible                                               = 0                       ! Sensors visible
prop2d.grid.visible                                                 = 0                       ! Show grid
prop2d.grid.hor.start                                               = 0.00000000000000000E+00 ! Horizontal offset
prop2d.grid.hor.step                                                = 1.00000000000000000E+01 ! Horizontal step
prop2d.grid.vert.start                                              = 0.00000000000000000E+00 ! Vertical offset
prop2d.grid.vert.step                                               = 1.00000000000000000E+01 ! Vertical step
prop2d.line.width                                                   = 0                       ! Line width
prop2d.proj.dir                                                     = 2                       ! Projection direction


!**********************************************************************
! Substructures
!**********************************************************************
substr.file (                       $S_esteira1                   ) = 'esteira_3D.spck'       ! Filename
substr.id (                         $S_esteira1                   ) = '1'                     ! Substructure Id

substr.file (                       $S_esteira2                   ) = 'esteira_3D.spck'       ! Filename
substr.id (                         $S_esteira2                   ) = '2'                     ! Substructure Id

substr.file (                       $S_rocker1                    ) = 'Rocker.spck'           ! Filename
substr.id (                         $S_rocker1                    ) = '1'                     ! Substructure Id

substr.file (                       $S_rocker2                    ) = 'Rocker.spck'           ! Filename
substr.id (                         $S_rocker2                    ) = '2'                     ! Substructure Id

substr.file (                       $S_roda1                      ) = 'RODA_3D.spck'          ! Filename
substr.id (                         $S_roda1                      ) = '1'                     ! Substructure Id

substr.file (                       $S_roda2                      ) = 'RODA_3D.spck'          ! Filename
substr.id (                         $S_roda2                      ) = '2'                     ! Substructure Id

substr.file (                       $S_LinhaSemente1              ) = './LinhaDeSemente_3D.spck' ! Filename
substr.id (                         $S_LinhaSemente1              ) = '1'                     ! Substructure Id

substr.file (                       $S_LinhaSemente2              ) = './LinhaDeSemente_3D.spck' ! Filename
substr.id (                         $S_LinhaSemente2              ) = '2'                     ! Substructure Id

substr.file (                       $S_LinhaSemente3              ) = './LinhaDeSemente_3D.spck' ! Filename
substr.id (                         $S_LinhaSemente3              ) = '3'                     ! Substructure Id

substr.file (                       $S_LinhaSemente4              ) = './LinhaDeSemente_3D.spck' ! Filename
substr.id (                         $S_LinhaSemente4              ) = '4'                     ! Substructure Id

substr.file (                       $S_LinhaSemente5              ) = './LinhaDeSemente_3D.spck' ! Filename
substr.id (                         $S_LinhaSemente5              ) = '5'                     ! Substructure Id

substr.file (                       $S_LinhaSemente6              ) = './LinhaDeSemente_3D.spck' ! Filename
substr.id (                         $S_LinhaSemente6              ) = '6'                     ! Substructure Id

substr.file (                       $S_disco5                     ) = './RODA_simples_3D.spck' ! Filename
substr.id (                         $S_disco5                     ) = '6'                     ! Substructure Id

substr.file (                       $S_disco3                     ) = './RODA_simples_3D.spck' ! Filename
substr.id (                         $S_disco3                     ) = '7'                     ! Substructure Id

substr.file (                       $S_disco1                     ) = './RODA_simples_3D.spck' ! Filename
substr.id (                         $S_disco1                     ) = '8'                     ! Substructure Id

substr.file (                       $S_disco2                     ) = './RODA_simples_3D.spck' ! Filename
substr.id (                         $S_disco2                     ) = '9'                     ! Substructure Id

substr.file (                       $S_disco4                     ) = './RODA_simples_3D.spck' ! Filename
substr.id (                         $S_disco4                     ) = '10'                    ! Substructure Id

substr.file (                       $S_disco6                     ) = './RODA_simples_3D.spck' ! Filename
substr.id (                         $S_disco6                     ) = '11'                    ! Substructure Id

!**********************************************************************
! Views
!**********************************************************************
view.type (                         $V_WorkingView                ) = 0                       ! Projection type
view.pos (                1 ,       $V_WorkingView                ) = 4.06707286834716797E+00 ! Position
view.pos (                2 ,       $V_WorkingView                ) = -2.75332760810852051E+00 ! Position
view.pos (                3 ,       $V_WorkingView                ) = 5.65932035446166992E-01 ! Position
view.orient (             1 ,       $V_WorkingView                ) = -6.72031700611114502E-01 ! Orientation
view.orient (             2 ,       $V_WorkingView                ) = -1.99920386075973511E-01 ! Orientation
view.orient (             3 ,       $V_WorkingView                ) = -1.63604691624641418E-01 ! Orientation
view.orient (             4 ,       $V_WorkingView                ) = -6.94001913070678711E-01 ! Orientation
view.angle (                        $V_WorkingView                ) = 7.85398185253143311E-01 ! Lens angle
view.fclip.auto (                   $V_WorkingView                ) = 1                       ! Front clipping plane auto
view.bclip.auto (                   $V_WorkingView                ) = 1                       ! Back clipping plane auto
view.fclip.value (                  $V_WorkingView                ) = 9.99999977648258209E-03 ! Front clipping plane value
view.bclip.value (                  $V_WorkingView                ) = 1.28654851913452148E+01 ! Back clipping plane value
view.rotcenter.type (               $V_WorkingView                ) = 0                       ! Rotation center type
view.rotcenter.adjust (             $V_WorkingView                ) = 1                       ! Adjust rotation center
view.motion.active (                $V_WorkingView                ) = 0                       ! Camera is moved

view.type (                         $V_Ortho                      ) = 0                       ! Projection type
view.pos (                1 ,       $V_Ortho                      ) = 6.85247761197388172E-01 ! Position
view.pos (                2 ,       $V_Ortho                      ) = -7.19467787537723780E-01 ! Position
view.pos (                3 ,       $V_Ortho                      ) = 3.52404586199554615E-01 ! Position
view.orient (             1 ,       $V_Ortho                      ) = 5.24405717849731445E-01 ! Orientation
view.orient (             2 ,       $V_Ortho                      ) = 2.11789414286613464E-01 ! Orientation
view.orient (             3 ,       $V_Ortho                      ) = 2.88275688886642456E-01 ! Orientation
view.orient (             4 ,       $V_Ortho                      ) = 7.72684276103973389E-01 ! Orientation
view.angle (                        $V_Ortho                      ) = 7.85398185253143311E-01 ! Lens angle
view.fclip.auto (                   $V_Ortho                      ) = 1                       ! Front clipping plane auto
view.bclip.auto (                   $V_Ortho                      ) = 1                       ! Back clipping plane auto
view.rotcenter.type (               $V_Ortho                      ) = 0                       ! Rotation center type
view.rotcenter.adjust (             $V_Ortho                      ) = 1                       ! Adjust rotation center
view.motion.active (                $V_Ortho                      ) = 0                       ! Camera is moved

view.type (                         $V_Front                      ) = 1                       ! Projection type
view.pos (                1 ,       $V_Front                      ) = 0.00000000000000000E+00 ! Position
view.pos (                2 ,       $V_Front                      ) = -5.99845290184020996E-01 ! Position
view.pos (                3 ,       $V_Front                      ) = 2.98023294931226701E-08 ! Position
view.orient (             1 ,       $V_Front                      ) = 7.07106769084930420E-01 ! Orientation
view.orient (             2 ,       $V_Front                      ) = 0.00000000000000000E+00 ! Orientation
view.orient (             3 ,       $V_Front                      ) = 0.00000000000000000E+00 ! Orientation
view.orient (             4 ,       $V_Front                      ) = 7.07106769084930420E-01 ! Orientation
view.height (                       $V_Front                      ) = 8.00000000000000044E-01 ! View height
view.fclip.auto (                   $V_Front                      ) = 1                       ! Front clipping plane auto
view.bclip.auto (                   $V_Front                      ) = 1                       ! Back clipping plane auto
view.rotcenter.type (               $V_Front                      ) = 0                       ! Rotation center type
view.rotcenter.adjust (             $V_Front                      ) = 1                       ! Adjust rotation center
view.motion.active (                $V_Front                      ) = 0                       ! Camera is moved

view.type (                         $V_Top                        ) = 1                       ! Projection type
view.pos (                1 ,       $V_Top                        ) = 0.00000000000000000E+00 ! Position
view.pos (                2 ,       $V_Top                        ) = -7.49893719330430031E-04 ! Position
view.pos (                3 ,       $V_Top                        ) = 5.99095582962036133E-01 ! Position
view.orient (             1 ,       $V_Top                        ) = 2.51447520582814832E-08 ! Orientation
view.orient (             2 ,       $V_Top                        ) = 0.00000000000000000E+00 ! Orientation
view.orient (             3 ,       $V_Top                        ) = 0.00000000000000000E+00 ! Orientation
view.orient (             4 ,       $V_Top                        ) = 1.00000000000000000E+00 ! Orientation
view.height (                       $V_Top                        ) = 8.00000000000000044E-01 ! View height
view.fclip.auto (                   $V_Top                        ) = 1                       ! Front clipping plane auto
view.bclip.auto (                   $V_Top                        ) = 1                       ! Back clipping plane auto
view.rotcenter.type (               $V_Top                        ) = 0                       ! Rotation center type
view.rotcenter.adjust (             $V_Top                        ) = 1                       ! Adjust rotation center
view.motion.active (                $V_Top                        ) = 0                       ! Camera is moved

!**********************************************************************
! Solver Settings
!**********************************************************************
slv.kin.task (                      $SLV_SolverSettings           ) = 3                       ! KIN_INTPAR_TASK
slv.kin.tout.n (                    $SLV_SolverSettings           ) = 201                     ! KIN_INTPAR_NUM_STEPS
slv.kin.tol (                       $SLV_SolverSettings           ) = 9.99999999999999955E-07 ! Kinematics tolerance
slv.integ.fix.driftstab (           $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_INTPAR_FIXINT_CONSTAB
slv.integ.fix.jac.update (          $SLV_SolverSettings           ) = 3                       ! TIME_INTEG_PAR_FIXINT_JACOBIAN_EVAL
slv.integ.fix.part.type (           $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_INTPAR_FIXINT_JAC_PART_TYPE
slv.integ.fix.order (               $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_PAR_FIXINT_METHOD_ORDER
slv.integ.fix.posup (               $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_PAR_FIXINT_POS_COORD_UPDATE
slv.integ.sodasrt.formalism (       $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_PAR_FORMALISM
slv.integ.type (                    $SLV_SolverSettings           ) = 1                       ! Integrator type
slv.integ.jac.struc (               $SLV_SolverSettings           ) = 3                       ! SOLVER_TIME_INTEG_PAR_JACOBIAN_STRUC
slv.integ.jac.incr.type (           $SLV_SolverSettings           ) = 2                       ! Jacobian increment type
slv.integ.linalg.slv (              $SLV_SolverSettings           ) = 1                       ! 1 = dense ; 2 = sparse (UMFPACK) ; 3 = sparse (PARDISO)
slv.integ.lsode.meth (              $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_PAR_LSODE_INTEG_METHOD
slv.integ.lsode.jac.struc (         $SLV_SolverSettings           ) = 3                       ! SOLVER_TIME_INTEG_PAR_LSODE_JACOBIAN_STRUC
slv.integ.lsode.maxord (            $SLV_SolverSettings           ) = 5                       ! TIME_INTEG_INTPAR_LSODE_MAX_ORDER
slv.integ.maxrhs (                  $SLV_SolverSettings           ) = -1                      ! TIME_INTEG_INTPAR_MAX_RHS
slv.integ.maxstp (                  $SLV_SolverSettings           ) = -1                      ! TIME_INTEG_INTPAR_MAX_TIME_STEPS
slv.integ.newton.maxit (            $SLV_SolverSettings           ) = 7                       ! TIME_INTEG_INTPAR_NEWTON_ITERS
slv.integ.tout.n (                  $SLV_SolverSettings           ) = 101                     ! TIME_INTEG_INTPAR_OUTPUT_NUM_POINTS
slv.integ.sodasrt2.iestsc (         $SLV_SolverSettings           ) = 2                       ! TIME_INTEG_PAR_SODASRT20_ERROR_EST_SCALE_METHOD
slv.integ.sodasrt.maxord (          $SLV_SolverSettings           ) = 5                       ! TIME_INTEG_INTPAR_SODASRT_MAX_ORDER
slv.integ.sodasrt1.errnorm (        $SLV_SolverSettings           ) = 3                       ! TIME_INTEG_PAR_SODASRT_NORM_TYPE
slv.integ.tout.mode (               $SLV_SolverSettings           ) = 0                       ! TIME_INTEG_INTPAR_TOUT_MODE
slv.integ.meetop (                  $SLV_SolverSettings           ) = 0                       ! TIME_INTEG_BOOLPAR_EVAL_MOTION_EQ_AT_COMM_POINTS
slv.integ.driftstab (               $SLV_SolverSettings           ) = 2                       ! TIME_INTEG_BOOLPAR_ACCEPT_DRIFT
slv.integ.root (                    $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_BOOLPAR_DETECT_IMPLICIT_DISCONTINUITIES
slv.integ.jac.part (                $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_BOOLPAR_PARTITIONED_EVAL_JACOBIAN
slv.integ.addrhscall (              $SLV_SolverSettings           ) = 0                       ! TIME_INTEG_BOOLPAR_EXTRA_EVAL_AFTER_SUCCESSFUL_STEP
slv.integ.linalg.red2nd (           $SLV_SolverSettings           ) = 1                       ! Linear equations second order reduction
slv.integ.fix.oneleg (              $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_BOOLPAR_FIXINT_IMPLICIT_ONE_LEG_OLC
slv.integ.fix.conforce (            $SLV_SolverSettings           ) = 0                       ! TIME_INTEG_BOOLPAR_FIXINT_CONFORCE
slv.integ.fix.clss (                $SLV_SolverSettings           ) = 2                       ! TIME_INTEG_BOOLPAR_FIXINT_METHOD_CLASS
slv.integ.sodasrt1.scal.lam (       $SLV_SolverSettings           ) = 9.99999999999999955E-08 ! TIME_INTEG_SCALARPAR_SCALE_CONSTRAINT_FORCES
slv.integ.sodasrt1.scal.acc (       $SLV_SolverSettings           ) = 1.00000000000000000E+00 ! TIME_INTEG_SCALARPAR_SCALE_ACCELERATIONS
slv.integ.newton.eps (              $SLV_SolverSettings           ) = 3.33000000000000018E-01 ! TIME_INTEG_SCALARPAR_NEWTON_ERROR_BOUND
slv.integ.fix.utcpar (              $SLV_SolverSettings           ) = 1.00000000000000000E+00 ! TIME_INTEG_SCALARPAR_FIXINT_EULER_UTC
slv.integ.fix.olcpar (              $SLV_SolverSettings           ) = 5.00000000000000000E-01 ! TIME_INTEG_SCALARPAR_FIXINT_ONE_LEG_OLC
slv.integ.sodasrt2.estfac (         $SLV_SolverSettings           ) = 9.99999999999999955E-07 ! TIME_INTEG_SCALARPAR_SODASRT20_ERROR_EST_SCALE_FACTOR
slv.integ.tout.freq (               $SLV_SolverSettings           ) = { 200 Hz }              ! TIME_INTEG_PAR_OUTPUT_FREQ
slv.integ.tend.time (               $SLV_SolverSettings           ) = { 9 s }                 ! TIME_INTEG_TIMEPAR_END_TIME
slv.integ.atol.gen (                $SLV_SolverSettings           ) = 1.00000000000000008E-05 ! TIME_INTEG_PARSTATE_DEFAULT
slv.integ.atol.vel (                $SLV_SolverSettings           ) = 1.00000000000000005E-04 ! TIME_INTEG_PARSTATE_VEL
slv.integ.rtol.gen (                $SLV_SolverSettings           ) = 9.99999999999999955E-08 ! TIME_INTEG_PARSTATE_DEFAULT
slv.integ.rtol.vel (                $SLV_SolverSettings           ) = 1.00000000000000008E-05 ! TIME_INTEG_PARSTATE_VEL
slv.meas.geo (                      $SLV_SolverSettings           ) = 1                       ! Animation data to result file
slv.meas.sensor.pos (               $SLV_SolverSettings           ) = 1                       ! Sensor position to result file
slv.meas.sensor.vel (               $SLV_SolverSettings           ) = 1                       ! Sensor velocity to result file
slv.meas.sensor.acc (               $SLV_SolverSettings           ) = 1                       ! Sensor acceleration to result file
slv.meas.force.af (                 $SLV_SolverSettings           ) = 1                       ! applied forces to result file
slv.meas.force.ov (                 $SLV_SolverSettings           ) = 1                       ! Force output values to result file
slv.meas.force.st.dyn (             $SLV_SolverSettings           ) = 1                       ! Force dynamic states to result file
slv.meas.force.st.alg (             $SLV_SolverSettings           ) = 1                       ! Force algebraic states to result file
slv.meas.joint.st.pos (             $SLV_SolverSettings           ) = 1                       ! Joint position to result file
slv.meas.joint.st.vel (             $SLV_SolverSettings           ) = 1                       ! Joint velocity to result file
slv.meas.joint.st.acc (             $SLV_SolverSettings           ) = 1                       ! Joint acceleration to result file
slv.meas.joint.cf (                 $SLV_SolverSettings           ) = 1                       ! Joint constraining forces to result file
slv.meas.body.pos (                 $SLV_SolverSettings           ) = 1                       ! Body position to result file
slv.meas.body.vel (                 $SLV_SolverSettings           ) = 1                       ! Body velocity to result file
slv.meas.body.acc (                 $SLV_SolverSettings           ) = 1                       ! Body acceleration to result file
slv.meas.body.flx.st.pos (          $SLV_SolverSettings           ) = 1                       ! Body elastic state position to result file
slv.meas.body.flx.st.vel (          $SLV_SolverSettings           ) = 1                       ! Body elastic state velocity to result file
slv.meas.body.flx.st.acc (          $SLV_SolverSettings           ) = 1                       ! Body elastic state acceleration to result file
slv.meas.marker.st.alg (            $SLV_SolverSettings           ) = 1                       ! Marker algebraic state to result file
slv.meas.constr.cf (                $SLV_SolverSettings           ) = 1                       ! Constraint constrained state to result file
slv.meas.yout (                     $SLV_SolverSettings           ) = 1                       ! y-Outputs to result file
slv.meas.result (                   $SLV_SolverSettings           ) = 1                       ! Result elements to result file
slv.meas.subvar (                   $SLV_SolverSettings           ) = 1                       ! MEAS_BOOLPAR_SUBVAR
slv.assmbl.task (                   $SLV_SolverSettings           ) = 3                       ! ASSMBL_PAR_SOLVER_MODE
slv.output.path.type (              $SLV_SolverSettings           ) = 1                       ! OUTPUT_PATH_PAR_TYPE
slv.output.file.desc (              $SLV_SolverSettings           ) = ''                      ! Description written to the output file if supported
slv.compat.solver (                 $SLV_SolverSettings           ) = 0                       ! 0 = no (new solver); 1 = yes (classic solver)
slv.txt (                           $SLV_SolverSettings           ) = ''                      ! Comment

!**********************************************************************
! SubVars
!**********************************************************************
subvar.str (                        $_H                           ) = '$S_rocker1.$_H + (0.4395) - (0.25)' ! Definition
subvar.dflt (                       $_H                           ) = ''                      ! Default value

subvar.str (                        $_L                           ) = '1.5'                   ! Definition
subvar.dflt (                       $_L                           ) = ''                      ! Default value

subvar.str (                        $_W                           ) = '1.75'                  ! Definition
subvar.dflt (                       $_W                           ) = ''                      ! Default value

subvar.str (                        $_mboogie                     ) = '2826'                  ! Definition
subvar.dflt (                       $_mboogie                     ) = ''                      ! Default value

subvar.str (                        $_m                           ) = '$_mboogie + (1072.8499999999999) + (1072.8499999999999) + $S_rocker1.$_m + $S_rocker2.$_m + (75.349999999999994) + (75.349999999999994)' ! Definition
subvar.dflt (                       $_m                           ) = ''                      ! Default value

subvar.str (                        $_vd                          ) = '2'                     ! Definition
subvar.dflt (                       $_vd                          ) = ''                      ! Default value

subvar.str (                        $_lambda                      ) = '1'                     ! Definition
subvar.dflt (                       $_lambda                      ) = ''                      ! Default value

subvar.str (                        $_beta                        ) = '0.3'                   ! Definition
subvar.dflt (                       $_beta                        ) = ''                      ! Default value

subvar.str (                        $_deltaW                      ) = '0.47'                  ! Definition
subvar.dflt (                       $_deltaW                      ) = ''                      ! Default value

subvar.str (                        $_DistLinhas                  ) = '0.5'                   ! Definition
subvar.dflt (                       $_DistLinhas                  ) = ''                      ! Default value

subvar.str (                        $_DistXBogiePar               ) = '0.73'                  ! Definition
subvar.dflt (                       $_DistXBogiePar               ) = ''                      ! Default value

subvar.str (                        $_DistZBogiePar               ) = '0.45 + 0.072303391 +0.07 -0.004 -0.4 -0.1 -0.06' ! Definition
subvar.dflt (                       $_DistZBogiePar               ) = ''                      ! Default value

subvar.str (                        $_DistPar                     ) = '0.3'                   ! Definition
subvar.dflt (                       $_DistPar                     ) = ''                      ! Default value

subvar.str (                        $_EstrutZ                     ) = '-0.19'                 ! Definition
subvar.dflt (                       $_EstrutZ                     ) = ''                      ! Default value

subvar.str (                        $_fix_botinhaZ                ) = '-0.24 + 0.03 + $_EstrutZ' ! Definition
subvar.dflt (                       $_fix_botinhaZ                ) = ''                      ! Default value

subvar.str (                        $_fix_botinhaX                ) = '1.03'                  ! Definition
subvar.dflt (                       $_fix_botinhaX                ) = ''                      ! Default value

subvar.str (                        $_rarb                        ) = '0.05'                  ! Definition
subvar.dflt (                       $_rarb                        ) = ''                      ! Default value

subvar.str (                        $_ksolo                       ) = '5*10^6'                ! Definition
subvar.dflt (                       $_ksolo                       ) = ''                      ! Default value

subvar.str (                        $_csolo                       ) = '10^6'                  ! Definition
subvar.dflt (                       $_csolo                       ) = ''                      ! Default value

subvar.str (                        $_A_bot                       ) = '5e-4'                  ! Definition
subvar.dflt (                       $_A_bot                       ) = ''                      ! Default value

subvar.str (                        $_IF                          ) = '20400/2'               ! Definition
subvar.dflt (                       $_IF                          ) = ''                      ! Default value

subvar.str (                        $_FzDownBot                   ) = '100'                   ! Definition
subvar.dflt (                       $_FzDownBot                   ) = ''                      ! Default value

!**********************************************************************
! Reference systems
!**********************************************************************
refsys.type (                       $R_Isys                       ) = 1                       ! Type
refsys.attr.2d.pos.x (              $R_Isys                       ) = -9.00000000000000000E+01
refsys.attr.2d.pos.y (              $R_Isys                       ) = -1.00000000000000000E+01
refsys.attr.2d.width (              $R_Isys                       ) = 2.40000000000000000E+02
refsys.attr.2d.height (             $R_Isys                       ) = 2.20000000000000000E+02

marker.type (                       $M_Isys                       ) = 1                       ! Type
marker.parent (                     $M_Isys                       ) = $R_Isys                 ! Reference system

marker.type (                       $M_Isys_1                     ) = 2                       ! Type
marker.parent (                     $M_Isys_1                     ) = $R_Isys                 ! Reference system
marker.pos (              2 ,       $M_Isys_1                     ) = -1.00000000000000000E+00 ! Position

marker.type (                       $M_Isys_2                     ) = 2                       ! Type
marker.parent (                     $M_Isys_2                     ) = $R_Isys                 ! Reference system
marker.pos (              2 ,       $M_Isys_2                     ) = 1.00000000000000000E+00 ! Position

prim.type (                         $P_Isys                       ) = 30                      ! Type
prim.ref (                          $P_Isys                       ) = $M_Isys                 ! Reference Marker
prim.color.r (            1 ,       $P_Isys                       ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Isys                       ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Isys                       ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Isys                       ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.par (                3 ,       $P_Isys                       ) = 1.00000000000000006E-01 ! [m] Length


!**********************************************************************
! Bodies
!**********************************************************************
body.m (                            $B_chao                       ) = 1.00000000000000000E+00 ! Mass of the Body
body.mp (                           $B_chao                       ) = 0                       ! 0=manual; 1=auto (based on geometry); 2=mass manual, CG & Inertia auto
body.I.tens (             1 ,   1 , $B_chao                       ) = 1.00000000000000000E+00 ! Moments of inertia
body.I.tens (             2 ,   2 , $B_chao                       ) = 1.00000000000000000E+00 ! Moments of inertia
body.I.tens (             3 ,   3 , $B_chao                       ) = 1.00000000000000000E+00 ! Moments of inertia
body.I.kind (                       $B_chao                       ) = -1                      ! Kind of I-tensor specification: -1=wrt CG; 0=wrt BRF; 1=wrt Marker
body.attr.2d.pos.x (                $B_chao                       ) = -3.00000000000000000E+01
body.attr.2d.pos.y (                $B_chao                       ) = 3.00000000000000000E+01
body.attr.2d.width (                $B_chao                       ) = 1.10000000000000000E+02
body.attr.2d.height (               $B_chao                       ) = 8.00000000000000000E+01

marker.type (                       $M_chao_BRF                   ) = 1                       ! Type
marker.parent (                     $M_chao_BRF                   ) = $B_chao                 ! Body
marker.flx.type (                   $M_chao_BRF                   ) = 4                       ! Flexible type

marker.type (                       $M_chao_PontaBotinha1_contact ) = -87                     ! Type
marker.parent (                     $M_chao_PontaBotinha1_contact ) = $B_chao                 ! Body
marker.st.alg (           1 ,       $M_chao_PontaBotinha1_contact ) = 2.06999999999999984E+00 ! Algebraic states
marker.st.alg (           2 ,       $M_chao_PontaBotinha1_contact ) = -2.49999999638804149E-01 ! Algebraic states
marker.par (              1 ,       $M_chao_PontaBotinha1_contact ) = 1.00000000000000000E+00 ! [-] Marker type
marker.par (              2 ,       $M_chao_PontaBotinha1_contact ) = $M_Boogie_PontaBotinha1_contact ! [-] Parent Marker
marker.par (              3 ,       $M_chao_PontaBotinha1_contact ) = $P_chao                 ! [-] Contact geometry Primitive

marker.type (                       $M_chao_PontaBotinha2_contact ) = -87                     ! Type
marker.parent (                     $M_chao_PontaBotinha2_contact ) = $B_chao                 ! Body
marker.st.alg (           1 ,       $M_chao_PontaBotinha2_contact ) = 2.06999999999999984E+00 ! Algebraic states
marker.st.alg (           2 ,       $M_chao_PontaBotinha2_contact ) = 2.50000000561070912E-01 ! Algebraic states
marker.par (              1 ,       $M_chao_PontaBotinha2_contact ) = 1.00000000000000000E+00 ! [-] Marker type
marker.par (              2 ,       $M_chao_PontaBotinha2_contact ) = $M_Boogie_PontaBotinha2_contact ! [-] Parent Marker
marker.par (              3 ,       $M_chao_PontaBotinha2_contact ) = $P_chao                 ! [-] Contact geometry Primitive

marker.type (                       $M_chao_PontaBotinha3_contact ) = -87                     ! Type
marker.parent (                     $M_chao_PontaBotinha3_contact ) = $B_chao                 ! Body
marker.st.alg (           1 ,       $M_chao_PontaBotinha3_contact ) = 2.06999999999999984E+00 ! Algebraic states
marker.st.alg (           2 ,       $M_chao_PontaBotinha3_contact ) = -7.49993853652020870E-01 ! Algebraic states
marker.par (              1 ,       $M_chao_PontaBotinha3_contact ) = 1.00000000000000000E+00 ! [-] Marker type
marker.par (              2 ,       $M_chao_PontaBotinha3_contact ) = $M_Boogie_PontaBotinha3_contact ! [-] Parent Marker
marker.par (              3 ,       $M_chao_PontaBotinha3_contact ) = $P_chao                 ! [-] Contact geometry Primitive

marker.type (                       $M_chao_PontaBotinha4_contact ) = -87                     ! Type
marker.parent (                     $M_chao_PontaBotinha4_contact ) = $B_chao                 ! Body
marker.st.alg (           1 ,       $M_chao_PontaBotinha4_contact ) = 2.06999999999999984E+00 ! Algebraic states
marker.st.alg (           2 ,       $M_chao_PontaBotinha4_contact ) = 7.50000000486721885E-01 ! Algebraic states
marker.par (              1 ,       $M_chao_PontaBotinha4_contact ) = 1.00000000000000000E+00 ! [-] Marker type
marker.par (              2 ,       $M_chao_PontaBotinha4_contact ) = $M_Boogie_PontaBotinha4_contact ! [-] Parent Marker
marker.par (              3 ,       $M_chao_PontaBotinha4_contact ) = $P_chao                 ! [-] Contact geometry Primitive

marker.type (                       $M_chao_PontaBotinha5_contact ) = -87                     ! Type
marker.parent (                     $M_chao_PontaBotinha5_contact ) = $B_chao                 ! Body
marker.st.alg (           1 ,       $M_chao_PontaBotinha5_contact ) = 2.06999999999999984E+00 ! Algebraic states
marker.st.alg (           2 ,       $M_chao_PontaBotinha5_contact ) = -1.24999999954558083E+00 ! Algebraic states
marker.par (              1 ,       $M_chao_PontaBotinha5_contact ) = 1.00000000000000000E+00 ! [-] Marker type
marker.par (              2 ,       $M_chao_PontaBotinha5_contact ) = $M_Boogie_PontaBotinha5_contact ! [-] Parent Marker
marker.par (              3 ,       $M_chao_PontaBotinha5_contact ) = $P_chao                 ! [-] Contact geometry Primitive

marker.type (                       $M_chao_PontaBotinha6_contact ) = -87                     ! Type
marker.parent (                     $M_chao_PontaBotinha6_contact ) = $B_chao                 ! Body
marker.st.alg (           1 ,       $M_chao_PontaBotinha6_contact ) = 2.06999999999999984E+00 ! Algebraic states
marker.st.alg (           2 ,       $M_chao_PontaBotinha6_contact ) = 1.25000000037704040E+00 ! Algebraic states
marker.par (              1 ,       $M_chao_PontaBotinha6_contact ) = 1.00000000000000000E+00 ! [-] Marker type
marker.par (              2 ,       $M_chao_PontaBotinha6_contact ) = $M_Boogie_PontaBotinha6_contact ! [-] Parent Marker
marker.par (              3 ,       $M_chao_PontaBotinha6_contact ) = $P_chao                 ! [-] Contact geometry Primitive

joint.from (                        $J_chao                       ) = $M_Isys                 ! From Marker
joint.to (                          $J_chao                       ) = $M_chao_BRF             ! To Marker
joint.type (                        $J_chao                       ) = 1                       ! Type
joint.st.pos (            1 ,       $J_chao                       ) = 0.00000000000000000E+00 ! Position
joint.st.vel (            1 ,       $J_chao                       ) = 0.00000000000000000E+00 ! Velocity
joint.attr.2d.pos.x (     1 ,       $J_chao                       ) = 20
joint.attr.2d.pos.y (     1 ,       $J_chao                       ) = 170
joint.attr.2d.ori (       1 ,       $J_chao                       ) = 270
joint.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $J_chao      ) = 20, 20
joint.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $J_chao      ) = 210, 187
joint.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $J_chao        ) = 20, 20
joint.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $J_chao        ) = 110, 153

prim.type (                         $P_chao                       ) = 43                      ! Type
prim.ref (                          $P_chao                       ) = $M_chao_BRF             ! Reference Marker
prim.ang (                1 ,       $P_chao                       ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_chao                       ) = 0.00000000000000000E+00 ! Angles
prim.ang (                3 ,       $P_chao                       ) = 0.00000000000000000E+00 ! Angles
prim.vtx (                1 ,   1 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,   2 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,   3 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,   4 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,   5 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,   6 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,   7 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,   8 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,   9 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  10 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  11 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  12 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  13 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  14 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  15 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  16 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  17 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  18 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  19 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  20 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  21 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  22 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  23 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  24 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  25 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  26 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  27 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  28 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  29 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  30 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  31 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  32 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  33 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  34 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  35 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  36 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  37 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  38 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  39 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  40 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  41 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  42 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  43 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  44 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  45 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  46 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  47 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  48 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  49 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  50 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  51 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  52 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  53 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  54 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  55 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  56 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  57 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  58 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  59 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  60 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  61 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,  62 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,  63 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,  64 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,  65 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                2 ,   1 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,   2 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,   3 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,   4 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,   5 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,   6 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,   7 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,   8 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,   9 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  10 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  11 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  12 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  13 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  14 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  15 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  16 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  17 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  18 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  19 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  20 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  21 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  22 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  23 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  24 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  25 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  26 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  27 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  28 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  29 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  30 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  31 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  32 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  33 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  34 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  35 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  36 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  37 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  38 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  39 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  40 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  41 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  42 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  43 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  44 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  45 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  46 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  47 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  48 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  49 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  50 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  51 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  52 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  53 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  54 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  55 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  56 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  57 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  58 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  59 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  60 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  61 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  62 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  63 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  64 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  65 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,   1 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,   2 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,   3 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,   4 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,   5 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,   6 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,   7 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,   8 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,   9 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  10 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  11 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  12 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  13 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  14 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  15 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  16 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  17 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  18 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  19 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  20 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  21 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  22 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  23 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  24 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  25 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  26 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  27 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  28 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  29 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  30 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  31 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  32 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  33 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  34 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  35 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  36 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  37 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  38 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  39 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  40 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  41 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  42 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  43 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  44 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  45 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  46 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  47 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  48 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  49 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  50 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  51 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  52 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  53 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  54 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  55 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  56 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  57 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  58 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  59 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  60 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  61 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  62 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  63 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  64 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  65 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.color.r (            1 ,       $P_chao                       ) = 1.65000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_chao                       ) = 1.15000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_chao                       ) = 5.70000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_chao                       ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_chao                       ) = 2.50000000000000000E-01 ! Transparency
prim.mp.dens.solid (                $P_chao                       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_chao                       ) = 0.00000000000000000E+00 ! [-] Surface by
prim.par (                7 ,       $P_chao                       ) = 0.00000000000000000E+00 ! [-] Coordinate type
prim.par (                8 ,       $P_chao                       ) = 1.00000000000000000E+00 ! [-] Surface fitting type
prim.par (                9 ,       $P_chao                       ) = 3.00000000000000000E+00 ! [-] Spline degree in 1st dir
prim.par (               10 ,       $P_chao                       ) = 3.00000000000000000E+00 ! [-] Spline degree in 2nd dir
prim.par (               17 ,       $P_chao                       ) = 0.00000000000000000E+00 ! [-] No. graphic points in 1st dir
prim.par (               18 ,       $P_chao                       ) = 0.00000000000000000E+00 ! [-] No. graphic points in 2nd dir
prim.par (               19 ,       $P_chao                       ) = 0.00000000000000000E+00 ! [m] Graphics start 1st dir
prim.par (               20 ,       $P_chao                       ) = 0.00000000000000000E+00 ! [m] Graphics end 1st dir
prim.par (               21 ,       $P_chao                       ) = 0.00000000000000000E+00 ! [m] Graphics start 2nd dir
prim.par (               22 ,       $P_chao                       ) = 0.00000000000000000E+00 ! [m] Graphics end 2nd dir


body.m (                            $B_Boogie                     ) = 1.00000000000000000E+00 ! Mass of the Body
body.mp (                           $B_Boogie                     ) = 1                       ! 0=manual; 1=auto (based on geometry); 2=mass manual, CG & Inertia auto
body.I.tens (             1 ,   1 , $B_Boogie                     ) = 1.00000000000000000E+00 ! Moments of inertia
body.I.tens (             2 ,   2 , $B_Boogie                     ) = 1.00000000000000000E+00 ! Moments of inertia
body.I.tens (             3 ,   3 , $B_Boogie                     ) = 1.00000000000000000E+00 ! Moments of inertia
body.I.kind (                       $B_Boogie                     ) = -1                      ! Kind of I-tensor specification: -1=wrt CG; 0=wrt BRF; 1=wrt Marker
body.flx.dmp.all (                  $B_Boogie                     ) = 0.00000000000000000E+00 ! Damping input value

marker.type (                       $M_Boogie_BRF                 ) = 1                       ! Type
marker.parent (                     $M_Boogie_BRF                 ) = $B_Boogie               ! Body
marker.flx.type (                   $M_Boogie_BRF                 ) = 4                       ! Flexible type

marker.type (                       $M_Boogie_esteira1            ) = 2                       ! Type
marker.ref (                        $M_Boogie_esteira1            ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_esteira1            ) = $B_Boogie               ! Body
marker.pos (              2 ,       $M_Boogie_esteira1            ) = { -$_W/2  - (0.25)/2 }  ! Position
marker.pos (              3 ,       $M_Boogie_esteira1            ) = { -$_H/2 }              ! Position

marker.type (                       $M_Boogie_esteira2            ) = 2                       ! Type
marker.ref (                        $M_Boogie_esteira2            ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_esteira2            ) = $B_Boogie               ! Body
marker.pos (              2 ,       $M_Boogie_esteira2            ) = { $_W/2 + (0.25)/2 }    ! Position
marker.pos (              3 ,       $M_Boogie_esteira2            ) = { -$_H/2 }              ! Position

marker.type (                       $M_Boogie_rocker1             ) = 2                       ! Type
marker.parent (                     $M_Boogie_rocker1             ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_rocker1             ) = -1.00000000000000006E-01 ! Position
marker.pos (              2 ,       $M_Boogie_rocker1             ) = { -$_W/2 -$_deltaW + $S_rocker1.$_W/2 } ! Position
marker.pos (              3 ,       $M_Boogie_rocker1             ) = { $_H/2 }               ! Position

marker.type (                       $M_Boogie_rocker2             ) = 2                       ! Type
marker.parent (                     $M_Boogie_rocker2             ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_rocker2             ) = -1.00000000000000006E-01 ! Position
marker.pos (              2 ,       $M_Boogie_rocker2             ) = { $_W/2 +$_deltaW - $S_rocker1.$_W/2 } ! Position
marker.pos (              3 ,       $M_Boogie_rocker2             ) = { $_H/2 }               ! Position

marker.type (                       $M_Boogie_ParalelogramoCima1  ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoCima1  ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoCima1  ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoCima1  ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoCima1  ) = { -$_DistLinhas/2 }     ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoCima1  ) = { $_DistZBogiePar + $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoCima2  ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoCima2  ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoCima2  ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoCima2  ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoCima2  ) = { $_DistLinhas/2 }      ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoCima2  ) = { $_DistZBogiePar + $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoCima3  ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoCima3  ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoCima3  ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoCima3  ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoCima3  ) = { -3*$_DistLinhas/2 }   ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoCima3  ) = { $_DistZBogiePar + $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoCima4  ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoCima4  ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoCima4  ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoCima4  ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoCima4  ) = { 3*$_DistLinhas/2 }    ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoCima4  ) = { $_DistZBogiePar + $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoCima5  ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoCima5  ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoCima5  ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoCima5  ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoCima5  ) = { -5*$_DistLinhas/2 }   ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoCima5  ) = { $_DistZBogiePar + $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoCima6  ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoCima6  ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoCima6  ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoCima6  ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoCima6  ) = { 5*$_DistLinhas/2 }    ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoCima6  ) = { $_DistZBogiePar + $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoBaixo1 ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoBaixo1 ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoBaixo1 ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoBaixo1 ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoBaixo1 ) = { -$_DistLinhas/2 }     ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoBaixo1 ) = { $_DistZBogiePar - $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoBaixo2 ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoBaixo2 ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoBaixo2 ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoBaixo2 ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoBaixo2 ) = { $_DistLinhas/2 }      ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoBaixo2 ) = { $_DistZBogiePar - $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoBaixo3 ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoBaixo3 ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoBaixo3 ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoBaixo3 ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoBaixo3 ) = { -3*$_DistLinhas/2 }   ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoBaixo3 ) = { $_DistZBogiePar - $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoBaixo4 ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoBaixo4 ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoBaixo4 ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoBaixo4 ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoBaixo4 ) = { 3*$_DistLinhas/2 }    ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoBaixo4 ) = { $_DistZBogiePar - $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoBaixo5 ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoBaixo5 ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoBaixo5 ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoBaixo5 ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoBaixo5 ) = { -5*$_DistLinhas/2 }   ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoBaixo5 ) = { $_DistZBogiePar - $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoBaixo6 ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoBaixo6 ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoBaixo6 ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoBaixo6 ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoBaixo6 ) = { 5*$_DistLinhas/2 }    ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoBaixo6 ) = { $_DistZBogiePar - $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_PontaBotinha1       ) = 2                       ! Type
marker.parent (                     $M_Boogie_PontaBotinha1       ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_PontaBotinha1       ) = 7.00000000000000067E-02 ! Position
marker.pos (              2 ,       $M_Boogie_PontaBotinha1       ) = { -$_DistLinhas/2 }     ! Position
marker.pos (              3 ,       $M_Boogie_PontaBotinha1       ) = { -$_H/2 -0.39 }        ! Position

marker.type (                       $M_Boogie_PontaBotinha2       ) = 2                       ! Type
marker.parent (                     $M_Boogie_PontaBotinha2       ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_PontaBotinha2       ) = 7.00000000000000067E-02 ! Position
marker.pos (              2 ,       $M_Boogie_PontaBotinha2       ) = { $_DistLinhas/2 }      ! Position
marker.pos (              3 ,       $M_Boogie_PontaBotinha2       ) = { -$_H/2 -0.39 }        ! Position

marker.type (                       $M_Boogie_PontaBotinha3       ) = 2                       ! Type
marker.parent (                     $M_Boogie_PontaBotinha3       ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_PontaBotinha3       ) = 7.00000000000000067E-02 ! Position
marker.pos (              2 ,       $M_Boogie_PontaBotinha3       ) = { -3*$_DistLinhas/2 }   ! Position
marker.pos (              3 ,       $M_Boogie_PontaBotinha3       ) = { -$_H/2 -0.39 }        ! Position

marker.type (                       $M_Boogie_PontaBotinha4       ) = 2                       ! Type
marker.parent (                     $M_Boogie_PontaBotinha4       ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_PontaBotinha4       ) = 7.00000000000000067E-02 ! Position
marker.pos (              2 ,       $M_Boogie_PontaBotinha4       ) = { 3*$_DistLinhas/2 }    ! Position
marker.pos (              3 ,       $M_Boogie_PontaBotinha4       ) = { -$_H/2 -0.39 }        ! Position

marker.type (                       $M_Boogie_PontaBotinha5       ) = 2                       ! Type
marker.parent (                     $M_Boogie_PontaBotinha5       ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_PontaBotinha5       ) = 7.00000000000000067E-02 ! Position
marker.pos (              2 ,       $M_Boogie_PontaBotinha5       ) = { -5*$_DistLinhas/2 }   ! Position
marker.pos (              3 ,       $M_Boogie_PontaBotinha5       ) = { -$_H/2 -0.39 }        ! Position

marker.type (                       $M_Boogie_PontaBotinha6       ) = 2                       ! Type
marker.parent (                     $M_Boogie_PontaBotinha6       ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_PontaBotinha6       ) = 7.00000000000000067E-02 ! Position
marker.pos (              2 ,       $M_Boogie_PontaBotinha6       ) = { 5*$_DistLinhas/2 }    ! Position
marker.pos (              3 ,       $M_Boogie_PontaBotinha6       ) = { -$_H/2 -0.39 }        ! Position

marker.type (                       $M_Boogie_PontaBotinha1_contact) = -87                    ! Type
marker.parent (                     $M_Boogie_PontaBotinha1_contact) = $B_Boogie              ! Body
marker.pos (              1 ,       $M_Boogie_PontaBotinha1_contact) = 7.00000000000000067E-02 ! Position
marker.pos (              2 ,       $M_Boogie_PontaBotinha1_contact) = { -5*$_DistLinhas/2 }  ! Position
marker.pos (              3 ,       $M_Boogie_PontaBotinha1_contact) = { -$_H/2 -0.39 }       ! Position
marker.st.alg (           1 ,       $M_Boogie_PontaBotinha1_contact) = 6.53748142493364532E-09 ! Algebraic states
marker.st.alg (           2 ,       $M_Boogie_PontaBotinha1_contact) = 1.57079632679489656E+00 ! Algebraic states
marker.par (              1 ,       $M_Boogie_PontaBotinha1_contact) = 0.00000000000000000E+00 ! [-] Marker type
marker.par (              3 ,       $M_Boogie_PontaBotinha1_contact) = $P_Boogie_CBotinha1    ! [-] Contact geometry Primitive
marker.par (              4 ,       $M_Boogie_PontaBotinha1_contact) = 1.00000000000000000E+00 ! [-] Normal orientation
marker.par (              6 ,       $M_Boogie_PontaBotinha1_contact) = 1.00000000000000000E+00 ! [-] Contact point determin. method
marker.par (              7 ,       $M_Boogie_PontaBotinha1_contact) = 9.99999999999999955E-08 ! [-] Solver tolerance

marker.type (                       $M_Boogie_PontaBotinha2_contact) = -87                    ! Type
marker.parent (                     $M_Boogie_PontaBotinha2_contact) = $B_Boogie              ! Body
marker.pos (              1 ,       $M_Boogie_PontaBotinha2_contact) = 7.00000000000000067E-02 ! Position
marker.pos (              2 ,       $M_Boogie_PontaBotinha2_contact) = { -5*$_DistLinhas/2 }  ! Position
marker.pos (              3 ,       $M_Boogie_PontaBotinha2_contact) = { -$_H/2 -0.39 }       ! Position
marker.st.alg (           1 ,       $M_Boogie_PontaBotinha2_contact) = 1.01551300203885155E-08 ! Algebraic states
marker.st.alg (           2 ,       $M_Boogie_PontaBotinha2_contact) = 1.57079632679489656E+00 ! Algebraic states
marker.par (              1 ,       $M_Boogie_PontaBotinha2_contact) = 0.00000000000000000E+00 ! [-] Marker type
marker.par (              3 ,       $M_Boogie_PontaBotinha2_contact) = $P_Boogie_CBotinha2    ! [-] Contact geometry Primitive
marker.par (              4 ,       $M_Boogie_PontaBotinha2_contact) = 1.00000000000000000E+00 ! [-] Normal orientation
marker.par (              6 ,       $M_Boogie_PontaBotinha2_contact) = 1.00000000000000000E+00 ! [-] Contact point determin. method
marker.par (              7 ,       $M_Boogie_PontaBotinha2_contact) = 9.99999999999999955E-08 ! [-] Solver tolerance

marker.type (                       $M_Boogie_PontaBotinha3_contact) = -87                    ! Type
marker.parent (                     $M_Boogie_PontaBotinha3_contact) = $B_Boogie              ! Body
marker.pos (              1 ,       $M_Boogie_PontaBotinha3_contact) = 7.00000000000000067E-02 ! Position
marker.pos (              2 ,       $M_Boogie_PontaBotinha3_contact) = { -5*$_DistLinhas/2 }  ! Position
marker.pos (              3 ,       $M_Boogie_PontaBotinha3_contact) = { -$_H/2 -0.39 }       ! Position
marker.st.alg (           1 ,       $M_Boogie_PontaBotinha3_contact) = 1.11246114072448887E-04 ! Algebraic states
marker.st.alg (           2 ,       $M_Boogie_PontaBotinha3_contact) = 1.57079632679489656E+00 ! Algebraic states
marker.par (              1 ,       $M_Boogie_PontaBotinha3_contact) = 0.00000000000000000E+00 ! [-] Marker type
marker.par (              3 ,       $M_Boogie_PontaBotinha3_contact) = $P_Boogie_CBotinha3    ! [-] Contact geometry Primitive
marker.par (              4 ,       $M_Boogie_PontaBotinha3_contact) = 1.00000000000000000E+00 ! [-] Normal orientation
marker.par (              6 ,       $M_Boogie_PontaBotinha3_contact) = 1.00000000000000000E+00 ! [-] Contact point determin. method
marker.par (              7 ,       $M_Boogie_PontaBotinha3_contact) = 9.99999999999999955E-08 ! [-] Solver tolerance

marker.type (                       $M_Boogie_PontaBotinha4_contact) = -87                    ! Type
marker.parent (                     $M_Boogie_PontaBotinha4_contact) = $B_Boogie              ! Body
marker.pos (              1 ,       $M_Boogie_PontaBotinha4_contact) = 7.00000000000000067E-02 ! Position
marker.pos (              2 ,       $M_Boogie_PontaBotinha4_contact) = { -5*$_DistLinhas/2 }  ! Position
marker.pos (              3 ,       $M_Boogie_PontaBotinha4_contact) = { -$_H/2 -0.39 }       ! Position
marker.st.alg (           1 ,       $M_Boogie_PontaBotinha4_contact) = 8.80944690781640666E-09 ! Algebraic states
marker.st.alg (           2 ,       $M_Boogie_PontaBotinha4_contact) = 1.57079632679489656E+00 ! Algebraic states
marker.par (              1 ,       $M_Boogie_PontaBotinha4_contact) = 0.00000000000000000E+00 ! [-] Marker type
marker.par (              3 ,       $M_Boogie_PontaBotinha4_contact) = $P_Boogie_CBotinha4    ! [-] Contact geometry Primitive
marker.par (              4 ,       $M_Boogie_PontaBotinha4_contact) = 1.00000000000000000E+00 ! [-] Normal orientation
marker.par (              6 ,       $M_Boogie_PontaBotinha4_contact) = 1.00000000000000000E+00 ! [-] Contact point determin. method
marker.par (              7 ,       $M_Boogie_PontaBotinha4_contact) = 9.99999999999999955E-08 ! [-] Solver tolerance

marker.type (                       $M_Boogie_PontaBotinha5_contact) = -87                    ! Type
marker.parent (                     $M_Boogie_PontaBotinha5_contact) = $B_Boogie              ! Body
marker.pos (              1 ,       $M_Boogie_PontaBotinha5_contact) = 7.00000000000000067E-02 ! Position
marker.pos (              2 ,       $M_Boogie_PontaBotinha5_contact) = { -5*$_DistLinhas/2 }  ! Position
marker.pos (              3 ,       $M_Boogie_PontaBotinha5_contact) = { -$_H/2 -0.39 }       ! Position
marker.st.alg (           1 ,       $M_Boogie_PontaBotinha5_contact) = 8.22477916389674590E-09 ! Algebraic states
marker.st.alg (           2 ,       $M_Boogie_PontaBotinha5_contact) = 1.57079632679489656E+00 ! Algebraic states
marker.par (              1 ,       $M_Boogie_PontaBotinha5_contact) = 0.00000000000000000E+00 ! [-] Marker type
marker.par (              3 ,       $M_Boogie_PontaBotinha5_contact) = $P_Boogie_CBotinha5    ! [-] Contact geometry Primitive
marker.par (              4 ,       $M_Boogie_PontaBotinha5_contact) = 1.00000000000000000E+00 ! [-] Normal orientation
marker.par (              6 ,       $M_Boogie_PontaBotinha5_contact) = 1.00000000000000000E+00 ! [-] Contact point determin. method
marker.par (              7 ,       $M_Boogie_PontaBotinha5_contact) = 9.99999999999999955E-08 ! [-] Solver tolerance

marker.type (                       $M_Boogie_PontaBotinha6_contact) = -87                    ! Type
marker.parent (                     $M_Boogie_PontaBotinha6_contact) = $B_Boogie              ! Body
marker.pos (              1 ,       $M_Boogie_PontaBotinha6_contact) = 7.00000000000000067E-02 ! Position
marker.pos (              2 ,       $M_Boogie_PontaBotinha6_contact) = { -5*$_DistLinhas/2 }  ! Position
marker.pos (              3 ,       $M_Boogie_PontaBotinha6_contact) = { -$_H/2 -0.39 }       ! Position
marker.st.alg (           1 ,       $M_Boogie_PontaBotinha6_contact) = 6.82425990372764449E-09 ! Algebraic states
marker.st.alg (           2 ,       $M_Boogie_PontaBotinha6_contact) = 1.57079632679489656E+00 ! Algebraic states
marker.par (              1 ,       $M_Boogie_PontaBotinha6_contact) = 0.00000000000000000E+00 ! [-] Marker type
marker.par (              3 ,       $M_Boogie_PontaBotinha6_contact) = $P_Boogie_CBotinha6    ! [-] Contact geometry Primitive
marker.par (              4 ,       $M_Boogie_PontaBotinha6_contact) = 1.00000000000000000E+00 ! [-] Normal orientation
marker.par (              6 ,       $M_Boogie_PontaBotinha6_contact) = 1.00000000000000000E+00 ! [-] Contact point determin. method
marker.par (              7 ,       $M_Boogie_PontaBotinha6_contact) = 9.99999999999999955E-08 ! [-] Solver tolerance

marker.type (                       $M_Boogie_Disco1              ) = 2                       ! Type
marker.parent (                     $M_Boogie_Disco1              ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_Disco1              ) = { $_fix_botinhaX -0.463 } ! Position
marker.pos (              2 ,       $M_Boogie_Disco1              ) = { -$_DistLinhas/2 -0.015 } ! Position
marker.pos (              3 ,       $M_Boogie_Disco1              ) = { $_fix_botinhaZ -0.237 } ! Position

marker.type (                       $M_Boogie_Disco2              ) = 2                       ! Type
marker.parent (                     $M_Boogie_Disco2              ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_Disco2              ) = { $_fix_botinhaX -0.463 } ! Position
marker.pos (              2 ,       $M_Boogie_Disco2              ) = { $_DistLinhas/2 -0.015 } ! Position
marker.pos (              3 ,       $M_Boogie_Disco2              ) = { $_fix_botinhaZ -0.237 } ! Position

marker.type (                       $M_Boogie_Disco3              ) = 2                       ! Type
marker.parent (                     $M_Boogie_Disco3              ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_Disco3              ) = { $_fix_botinhaX -0.463 } ! Position
marker.pos (              2 ,       $M_Boogie_Disco3              ) = { -3*$_DistLinhas/2 -0.015 } ! Position
marker.pos (              3 ,       $M_Boogie_Disco3              ) = { $_fix_botinhaZ -0.237 } ! Position

marker.type (                       $M_Boogie_Disco4              ) = 2                       ! Type
marker.parent (                     $M_Boogie_Disco4              ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_Disco4              ) = { $_fix_botinhaX -0.463 } ! Position
marker.pos (              2 ,       $M_Boogie_Disco4              ) = { 3*$_DistLinhas/2 -0.015 } ! Position
marker.pos (              3 ,       $M_Boogie_Disco4              ) = { $_fix_botinhaZ -0.237 } ! Position

marker.type (                       $M_Boogie_Disco5              ) = 2                       ! Type
marker.parent (                     $M_Boogie_Disco5              ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_Disco5              ) = { $_fix_botinhaX -0.463 } ! Position
marker.pos (              2 ,       $M_Boogie_Disco5              ) = { -5*$_DistLinhas/2 -0.015 } ! Position
marker.pos (              3 ,       $M_Boogie_Disco5              ) = { $_fix_botinhaZ -0.237 } ! Position

marker.type (                       $M_Boogie_Disco6              ) = 2                       ! Type
marker.parent (                     $M_Boogie_Disco6              ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_Disco6              ) = { $_fix_botinhaX -0.463 } ! Position
marker.pos (              2 ,       $M_Boogie_Disco6              ) = { 5*$_DistLinhas/2 -0.015 } ! Position
marker.pos (              3 ,       $M_Boogie_Disco6              ) = { $_fix_botinhaZ -0.237 } ! Position

joint.from (                        $J_Boogie                     ) = $M_Isys                 ! From Marker
joint.to (                          $J_Boogie                     ) = $M_Boogie_BRF           ! To Marker
joint.type (                        $J_Boogie                     ) = 25                      ! Type
joint.st.pos (            1 ,       $J_Boogie                     ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            2 ,       $J_Boogie                     ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            3 ,       $J_Boogie                     ) = 2.00000000000000000E+00 ! Position
joint.st.pos (            4 ,       $J_Boogie                     ) = 1.00000000000000000E+00 ! Position
joint.st.vel (            1 ,       $J_Boogie                     ) = 0.00000000000000000E+00 ! Velocity
joint.st.vel (            2 ,       $J_Boogie                     ) = 0.00000000000000000E+00 ! Velocity
joint.st.vel (            3 ,       $J_Boogie                     ) = 7.12445416791284009E-56 ! Velocity
joint.st.vel (            4 ,       $J_Boogie                     ) = 0.00000000000000000E+00 ! Velocity
joint.st.dep (            1 ,       $J_Boogie                     ) = 0                       ! Dependency state
joint.st.dep (            2 ,       $J_Boogie                     ) = 0                       ! Dependency state
joint.st.dep (            3 ,       $J_Boogie                     ) = 0                       ! Dependency state
joint.st.dep (            4 ,       $J_Boogie                     ) = 0                       ! Dependency state
joint.txt (                         $J_Boogie                     ) = '$_H/2 + $S_esteira1.$_r1' ! Comment
joint.par (               1 ,       $J_Boogie                     ) = 1.00000000000000000E+00 ! [-] Axis of rotation    1
joint.par (               2 ,       $J_Boogie                     ) = 2.00000000000000000E+00 ! [-] Axis of rotation    2
joint.par (               3 ,       $J_Boogie                     ) = 0.00000000000000000E+00 ! [-] Axis of rotation    3
joint.par (               4 ,       $J_Boogie                     ) = 1.00000000000000000E+00 ! [-] Axis of translation 1
joint.par (               5 ,       $J_Boogie                     ) = 3.00000000000000000E+00 ! [-] Axis of translation 2
joint.par (               6 ,       $J_Boogie                     ) = 0.00000000000000000E+00 ! [-] Axis of translation 3
joint.par (               8 ,       $J_Boogie                     ) = 0.00000000000000000E+00 ! [-] Trans-rot sequence

prim.type (                         $P_Boogie                     ) = 1                       ! Type
prim.ref (                          $P_Boogie                     ) = $M_Boogie_BRF           ! Reference Marker
prim.color.r (            1 ,       $P_Boogie                     ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie                     ) = 2.55000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie                     ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie                     ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_Boogie                     ) = 1.00000000000000000E+00 ! Transparency
prim.mp.dens.solid (                $P_Boogie                     ) = 0.00000000000000000E+00 ! Density
prim.par (                2 ,       $P_Boogie                     ) = $_L                     ! [m] Length in X
prim.par (                3 ,       $P_Boogie                     ) = $_W                     ! [m] Length in Y
prim.par (                4 ,       $P_Boogie                     ) = $_H                     ! [m] Length in Z

prim.type (                         $P_Boogie_esteira1D           ) = 39                      ! Type
prim.ref (                          $P_Boogie_esteira1D           ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                2 ,       $P_Boogie_esteira1D           ) = { -$_W/2 - 0.285 +0.07 } ! Position
prim.pos (                3 ,       $P_Boogie_esteira1D           ) = { 0.26 - 0.11 -0.07 + 0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_esteira1D           ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            1 ,       $P_Boogie_esteira1D           ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_esteira1D           ) = 2.55000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_esteira1D           ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_esteira1D           ) = './pecas_stl/chassi_imp.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_esteira1D           ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_esteira1D           ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_esteira2D           ) = 39                      ! Type
prim.ref (                          $P_Boogie_esteira2D           ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                2 ,       $P_Boogie_esteira2D           ) = { $_W/2 +0.285 - 0.07 } ! Position
prim.pos (                3 ,       $P_Boogie_esteira2D           ) = { 0.26 - 0.11 -0.07 +0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_esteira2D           ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            1 ,       $P_Boogie_esteira2D           ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_esteira2D           ) = 2.55000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_esteira2D           ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_esteira2D           ) = './pecas_stl/chassi_imp.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_esteira2D           ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_esteira2D           ) = 1.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_esteira2D           ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_esteira1E           ) = 39                      ! Type
prim.ref (                          $P_Boogie_esteira1E           ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                2 ,       $P_Boogie_esteira1E           ) = { -$_W/2 -0.285 + 0.32 - 0.07 } ! Position
prim.pos (                3 ,       $P_Boogie_esteira1E           ) = { 0.26 - 0.11 -0.07 +0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_esteira1E           ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            1 ,       $P_Boogie_esteira1E           ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_esteira1E           ) = 2.55000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_esteira1E           ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_esteira1E           ) = './pecas_stl/chassi_imp.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_esteira1E           ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_esteira1E           ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_esteira2E           ) = 39                      ! Type
prim.ref (                          $P_Boogie_esteira2E           ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                2 ,       $P_Boogie_esteira2E           ) = { $_W/2 + 0.285 - 0.32 + 0.07 } ! Position
prim.pos (                3 ,       $P_Boogie_esteira2E           ) = { 0.26 - 0.11 -0.07 + 0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_esteira2E           ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            1 ,       $P_Boogie_esteira2E           ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_esteira2E           ) = 2.55000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_esteira2E           ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_esteira2E           ) = './pecas_stl/chassi_imp.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_esteira2E           ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_esteira2E           ) = 1.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_esteira2E           ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_Viga1               ) = 39                      ! Type
prim.ref (                          $P_Boogie_Viga1               ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_Viga1               ) = -5.25000000000000022E-01 ! Position
prim.pos (                2 ,       $P_Boogie_Viga1               ) = 1.14999999999999991E+00 ! Position
prim.pos (                3 ,       $P_Boogie_Viga1               ) = { 0.69 -0.11 -0.06 +0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_Viga1               ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_Viga1               ) = 3.00000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_Viga1               ) = 1.44000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_Viga1               ) = 2.55000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_Viga1               ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_Viga1               ) = './pecas_stl/Viga_Berco.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_Viga1               ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_Viga1               ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_Viga2               ) = 39                      ! Type
prim.ref (                          $P_Boogie_Viga2               ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_Viga2               ) = 5.25000000000000022E-01 ! Position
prim.pos (                2 ,       $P_Boogie_Viga2               ) = 1.14999999999999991E+00 ! Position
prim.pos (                3 ,       $P_Boogie_Viga2               ) = { 0.69 -0.11 -0.06 +0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_Viga2               ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_Viga2               ) = 3.00000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_Viga2               ) = 1.44000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_Viga2               ) = 2.55000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_Viga2               ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_Viga2               ) = './pecas_stl/Viga_Berco.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_Viga2               ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_Viga2               ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_Estrutura           ) = 39                      ! Type
prim.ref (                          $P_Boogie_Estrutura           ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_Estrutura           ) = -5.99999999999999978E-01 ! Position
prim.pos (                2 ,       $P_Boogie_Estrutura           ) = -1.60000000000000009E+00 ! Position
prim.pos (                3 ,       $P_Boogie_Estrutura           ) = $_EstrutZ               ! Position
prim.ang (                1 ,       $P_Boogie_Estrutura           ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_Estrutura           ) = { 180 deg }             ! Angles
prim.ang (                3 ,       $P_Boogie_Estrutura           ) = { 45 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_Estrutura           ) = 9.90000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_Estrutura           ) = 1.84000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_Estrutura           ) = 2.55000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_Estrutura           ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_Estrutura           ) = './pecas_stl/estrutura_implementos.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_Estrutura           ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_Estrutura           ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_fix_botinha1        ) = 39                      ! Type
prim.ref (                          $P_Boogie_fix_botinha1        ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_fix_botinha1        ) = $_fix_botinhaX          ! Position
prim.pos (                2 ,       $P_Boogie_fix_botinha1        ) = { -$_DistLinhas/2 -0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_fix_botinha1        ) = $_fix_botinhaZ          ! Position
prim.ang (                1 ,       $P_Boogie_fix_botinha1        ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_fix_botinha1        ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_fix_botinha1        ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_fix_botinha1        ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_fix_botinha1        ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_fix_botinha1        ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_fix_botinha1        ) = './pecas_stl/botinha1_stl/fixacao.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_fix_botinha1        ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_fix_botinha1        ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_fix_botinha2        ) = 39                      ! Type
prim.ref (                          $P_Boogie_fix_botinha2        ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_fix_botinha2        ) = $_fix_botinhaX          ! Position
prim.pos (                2 ,       $P_Boogie_fix_botinha2        ) = { $_DistLinhas/2 -0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_fix_botinha2        ) = $_fix_botinhaZ          ! Position
prim.ang (                1 ,       $P_Boogie_fix_botinha2        ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_fix_botinha2        ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_fix_botinha2        ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_fix_botinha2        ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_fix_botinha2        ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_fix_botinha2        ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_fix_botinha2        ) = './pecas_stl/botinha1_stl/fixacao.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_fix_botinha2        ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_fix_botinha2        ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_fix_botinha3        ) = 39                      ! Type
prim.ref (                          $P_Boogie_fix_botinha3        ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_fix_botinha3        ) = $_fix_botinhaX          ! Position
prim.pos (                2 ,       $P_Boogie_fix_botinha3        ) = { -3*$_DistLinhas/2 -0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_fix_botinha3        ) = $_fix_botinhaZ          ! Position
prim.ang (                1 ,       $P_Boogie_fix_botinha3        ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_fix_botinha3        ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_fix_botinha3        ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_fix_botinha3        ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_fix_botinha3        ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_fix_botinha3        ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_fix_botinha3        ) = './pecas_stl/botinha1_stl/fixacao.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_fix_botinha3        ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_fix_botinha3        ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_fix_botinha4        ) = 39                      ! Type
prim.ref (                          $P_Boogie_fix_botinha4        ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_fix_botinha4        ) = $_fix_botinhaX          ! Position
prim.pos (                2 ,       $P_Boogie_fix_botinha4        ) = { 3*$_DistLinhas/2 -0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_fix_botinha4        ) = $_fix_botinhaZ          ! Position
prim.ang (                1 ,       $P_Boogie_fix_botinha4        ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_fix_botinha4        ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_fix_botinha4        ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_fix_botinha4        ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_fix_botinha4        ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_fix_botinha4        ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_fix_botinha4        ) = './pecas_stl/botinha1_stl/fixacao.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_fix_botinha4        ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_fix_botinha4        ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_fix_botinha5        ) = 39                      ! Type
prim.ref (                          $P_Boogie_fix_botinha5        ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_fix_botinha5        ) = $_fix_botinhaX          ! Position
prim.pos (                2 ,       $P_Boogie_fix_botinha5        ) = { -5*$_DistLinhas/2 -0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_fix_botinha5        ) = $_fix_botinhaZ          ! Position
prim.ang (                1 ,       $P_Boogie_fix_botinha5        ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_fix_botinha5        ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_fix_botinha5        ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_fix_botinha5        ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_fix_botinha5        ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_fix_botinha5        ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_fix_botinha5        ) = './pecas_stl/botinha1_stl/fixacao.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_fix_botinha5        ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_fix_botinha5        ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_fix_botinha6        ) = 39                      ! Type
prim.ref (                          $P_Boogie_fix_botinha6        ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_fix_botinha6        ) = $_fix_botinhaX          ! Position
prim.pos (                2 ,       $P_Boogie_fix_botinha6        ) = { 5*$_DistLinhas/2 -0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_fix_botinha6        ) = $_fix_botinhaZ          ! Position
prim.ang (                1 ,       $P_Boogie_fix_botinha6        ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_fix_botinha6        ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_fix_botinha6        ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_fix_botinha6        ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_fix_botinha6        ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_fix_botinha6        ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_fix_botinha6        ) = './pecas_stl/botinha1_stl/fixacao.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_fix_botinha6        ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_fix_botinha6        ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_botinha1            ) = 39                      ! Type
prim.ref (                          $P_Boogie_botinha1            ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_botinha1            ) = { $_fix_botinhaX +0.035 } ! Position
prim.pos (                2 ,       $P_Boogie_botinha1            ) = { -$_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_botinha1            ) = { $_fix_botinhaZ +0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_botinha1            ) = { 90 deg }              ! Angles
prim.ang (                3 ,       $P_Boogie_botinha1            ) = { 180 deg }             ! Angles
prim.color.r (            1 ,       $P_Boogie_botinha1            ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_botinha1            ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_botinha1            ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_botinha1            ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_botinha1            ) = './pecas_stl/botinha1_stl/botinha.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_botinha1            ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_botinha2            ) = 39                      ! Type
prim.ref (                          $P_Boogie_botinha2            ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_botinha2            ) = { $_fix_botinhaX +0.035 } ! Position
prim.pos (                2 ,       $P_Boogie_botinha2            ) = { $_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_botinha2            ) = { $_fix_botinhaZ +0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_botinha2            ) = { 90 deg }              ! Angles
prim.ang (                3 ,       $P_Boogie_botinha2            ) = { 180 deg }             ! Angles
prim.color.r (            1 ,       $P_Boogie_botinha2            ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_botinha2            ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_botinha2            ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_botinha2            ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_botinha2            ) = './pecas_stl/botinha1_stl/botinha.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_botinha2            ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_botinha3            ) = 39                      ! Type
prim.ref (                          $P_Boogie_botinha3            ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_botinha3            ) = { $_fix_botinhaX +0.035 } ! Position
prim.pos (                2 ,       $P_Boogie_botinha3            ) = { -3*$_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_botinha3            ) = { $_fix_botinhaZ +0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_botinha3            ) = { 90 deg }              ! Angles
prim.ang (                3 ,       $P_Boogie_botinha3            ) = { 180 deg }             ! Angles
prim.color.r (            1 ,       $P_Boogie_botinha3            ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_botinha3            ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_botinha3            ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_botinha3            ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_botinha3            ) = './pecas_stl/botinha1_stl/botinha.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_botinha3            ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_botinha4            ) = 39                      ! Type
prim.ref (                          $P_Boogie_botinha4            ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_botinha4            ) = { $_fix_botinhaX +0.035 } ! Position
prim.pos (                2 ,       $P_Boogie_botinha4            ) = { 3*$_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_botinha4            ) = { $_fix_botinhaZ +0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_botinha4            ) = { 90 deg }              ! Angles
prim.ang (                3 ,       $P_Boogie_botinha4            ) = { 180 deg }             ! Angles
prim.color.r (            1 ,       $P_Boogie_botinha4            ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_botinha4            ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_botinha4            ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_botinha4            ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_botinha4            ) = './pecas_stl/botinha1_stl/botinha.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_botinha4            ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_botinha5            ) = 39                      ! Type
prim.ref (                          $P_Boogie_botinha5            ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_botinha5            ) = { $_fix_botinhaX +0.035 } ! Position
prim.pos (                2 ,       $P_Boogie_botinha5            ) = { -5*$_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_botinha5            ) = { $_fix_botinhaZ +0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_botinha5            ) = { 90 deg }              ! Angles
prim.ang (                3 ,       $P_Boogie_botinha5            ) = { 180 deg }             ! Angles
prim.color.r (            1 ,       $P_Boogie_botinha5            ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_botinha5            ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_botinha5            ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_botinha5            ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_botinha5            ) = './pecas_stl/botinha1_stl/botinha.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_botinha5            ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_botinha6            ) = 39                      ! Type
prim.ref (                          $P_Boogie_botinha6            ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_botinha6            ) = { $_fix_botinhaX +0.035 } ! Position
prim.pos (                2 ,       $P_Boogie_botinha6            ) = { 5*$_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_botinha6            ) = { $_fix_botinhaZ +0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_botinha6            ) = { 90 deg }              ! Angles
prim.ang (                3 ,       $P_Boogie_botinha6            ) = { 180 deg }             ! Angles
prim.color.r (            1 ,       $P_Boogie_botinha6            ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_botinha6            ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_botinha6            ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_botinha6            ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_botinha6            ) = './pecas_stl/botinha1_stl/botinha.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_botinha6            ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_mola_disco5         ) = 39                      ! Type
prim.ref (                          $P_Boogie_mola_disco5         ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_mola_disco5         ) = { $_fix_botinhaX + 0.12 } ! Position
prim.pos (                2 ,       $P_Boogie_mola_disco5         ) = { -5*$_DistLinhas/2 -0.05 } ! Position
prim.pos (                3 ,       $P_Boogie_mola_disco5         ) = { $_fix_botinhaZ - 0.05 } ! Position
prim.ang (                1 ,       $P_Boogie_mola_disco5         ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_mola_disco5         ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_mola_disco5         ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_mola_disco5         ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_mola_disco5         ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_mola_disco5         ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_mola_disco5         ) = './pecas_stl/disco_de_corte_stl/mola.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_mola_disco5         ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_mola_disco5         ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_mola_disco3         ) = 39                      ! Type
prim.ref (                          $P_Boogie_mola_disco3         ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_mola_disco3         ) = { $_fix_botinhaX + 0.12 } ! Position
prim.pos (                2 ,       $P_Boogie_mola_disco3         ) = { -3*$_DistLinhas/2 -0.05 } ! Position
prim.pos (                3 ,       $P_Boogie_mola_disco3         ) = { $_fix_botinhaZ - 0.05 } ! Position
prim.ang (                1 ,       $P_Boogie_mola_disco3         ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_mola_disco3         ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_mola_disco3         ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_mola_disco3         ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_mola_disco3         ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_mola_disco3         ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_mola_disco3         ) = './pecas_stl/disco_de_corte_stl/mola.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_mola_disco3         ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_mola_disco3         ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_mola_disco1         ) = 39                      ! Type
prim.ref (                          $P_Boogie_mola_disco1         ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_mola_disco1         ) = { $_fix_botinhaX + 0.12 } ! Position
prim.pos (                2 ,       $P_Boogie_mola_disco1         ) = { -$_DistLinhas/2 -0.05 } ! Position
prim.pos (                3 ,       $P_Boogie_mola_disco1         ) = { $_fix_botinhaZ - 0.05 } ! Position
prim.ang (                1 ,       $P_Boogie_mola_disco1         ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_mola_disco1         ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_mola_disco1         ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_mola_disco1         ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_mola_disco1         ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_mola_disco1         ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_mola_disco1         ) = './pecas_stl/disco_de_corte_stl/mola.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_mola_disco1         ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_mola_disco1         ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_mola_disco2         ) = 39                      ! Type
prim.ref (                          $P_Boogie_mola_disco2         ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_mola_disco2         ) = { $_fix_botinhaX + 0.12 } ! Position
prim.pos (                2 ,       $P_Boogie_mola_disco2         ) = { $_DistLinhas/2 -0.05 } ! Position
prim.pos (                3 ,       $P_Boogie_mola_disco2         ) = { $_fix_botinhaZ - 0.05 } ! Position
prim.ang (                1 ,       $P_Boogie_mola_disco2         ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_mola_disco2         ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_mola_disco2         ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_mola_disco2         ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_mola_disco2         ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_mola_disco2         ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_mola_disco2         ) = './pecas_stl/disco_de_corte_stl/mola.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_mola_disco2         ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_mola_disco2         ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_mola_disco4         ) = 39                      ! Type
prim.ref (                          $P_Boogie_mola_disco4         ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_mola_disco4         ) = { $_fix_botinhaX + 0.12 } ! Position
prim.pos (                2 ,       $P_Boogie_mola_disco4         ) = { 3*$_DistLinhas/2 -0.05 } ! Position
prim.pos (                3 ,       $P_Boogie_mola_disco4         ) = { $_fix_botinhaZ - 0.05 } ! Position
prim.ang (                1 ,       $P_Boogie_mola_disco4         ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_mola_disco4         ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_mola_disco4         ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_mola_disco4         ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_mola_disco4         ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_mola_disco4         ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_mola_disco4         ) = './pecas_stl/disco_de_corte_stl/mola.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_mola_disco4         ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_mola_disco4         ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_mola_disco6         ) = 39                      ! Type
prim.ref (                          $P_Boogie_mola_disco6         ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_mola_disco6         ) = { $_fix_botinhaX + 0.12 } ! Position
prim.pos (                2 ,       $P_Boogie_mola_disco6         ) = { 5*$_DistLinhas/2 -0.05 } ! Position
prim.pos (                3 ,       $P_Boogie_mola_disco6         ) = { $_fix_botinhaZ - 0.05 } ! Position
prim.ang (                1 ,       $P_Boogie_mola_disco6         ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_mola_disco6         ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_mola_disco6         ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_mola_disco6         ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_mola_disco6         ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_mola_disco6         ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_mola_disco6         ) = './pecas_stl/disco_de_corte_stl/mola.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_mola_disco6         ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_mola_disco6         ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_bracos_disco1       ) = 39                      ! Type
prim.ref (                          $P_Boogie_bracos_disco1       ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_bracos_disco1       ) = { $_fix_botinhaX -0.467 } ! Position
prim.pos (                2 ,       $P_Boogie_bracos_disco1       ) = { -$_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_bracos_disco1       ) = { $_fix_botinhaZ - 0.236 } ! Position
prim.ang (                1 ,       $P_Boogie_bracos_disco1       ) = { 270 deg }             ! Angles
prim.ang (                3 ,       $P_Boogie_bracos_disco1       ) = { (180 + 28) deg }      ! Angles
prim.color.r (            1 ,       $P_Boogie_bracos_disco1       ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_bracos_disco1       ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_bracos_disco1       ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_bracos_disco1       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_bracos_disco1       ) = './pecas_stl/disco_de_corte_stl/bracos.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_bracos_disco1       ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_bracos_disco1       ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_bracos_disco2       ) = 39                      ! Type
prim.ref (                          $P_Boogie_bracos_disco2       ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_bracos_disco2       ) = { $_fix_botinhaX -0.467 } ! Position
prim.pos (                2 ,       $P_Boogie_bracos_disco2       ) = { $_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_bracos_disco2       ) = { $_fix_botinhaZ - 0.236 } ! Position
prim.ang (                1 ,       $P_Boogie_bracos_disco2       ) = { 270 deg }             ! Angles
prim.ang (                3 ,       $P_Boogie_bracos_disco2       ) = { (180 + 28) deg }      ! Angles
prim.color.r (            1 ,       $P_Boogie_bracos_disco2       ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_bracos_disco2       ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_bracos_disco2       ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_bracos_disco2       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_bracos_disco2       ) = './pecas_stl/disco_de_corte_stl/bracos.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_bracos_disco2       ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_bracos_disco2       ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_bracos_disco3       ) = 39                      ! Type
prim.ref (                          $P_Boogie_bracos_disco3       ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_bracos_disco3       ) = { $_fix_botinhaX -0.467 } ! Position
prim.pos (                2 ,       $P_Boogie_bracos_disco3       ) = { -3*$_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_bracos_disco3       ) = { $_fix_botinhaZ - 0.236 } ! Position
prim.ang (                1 ,       $P_Boogie_bracos_disco3       ) = { 270 deg }             ! Angles
prim.ang (                3 ,       $P_Boogie_bracos_disco3       ) = { (180 + 28) deg }      ! Angles
prim.color.r (            1 ,       $P_Boogie_bracos_disco3       ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_bracos_disco3       ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_bracos_disco3       ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_bracos_disco3       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_bracos_disco3       ) = './pecas_stl/disco_de_corte_stl/bracos.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_bracos_disco3       ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_bracos_disco3       ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_bracos_disco4       ) = 39                      ! Type
prim.ref (                          $P_Boogie_bracos_disco4       ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_bracos_disco4       ) = { $_fix_botinhaX -0.467 } ! Position
prim.pos (                2 ,       $P_Boogie_bracos_disco4       ) = { 3*$_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_bracos_disco4       ) = { $_fix_botinhaZ - 0.236 } ! Position
prim.ang (                1 ,       $P_Boogie_bracos_disco4       ) = { 270 deg }             ! Angles
prim.ang (                3 ,       $P_Boogie_bracos_disco4       ) = { (180 + 28) deg }      ! Angles
prim.color.r (            1 ,       $P_Boogie_bracos_disco4       ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_bracos_disco4       ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_bracos_disco4       ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_bracos_disco4       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_bracos_disco4       ) = './pecas_stl/disco_de_corte_stl/bracos.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_bracos_disco4       ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_bracos_disco4       ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_bracos_disco5       ) = 39                      ! Type
prim.ref (                          $P_Boogie_bracos_disco5       ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_bracos_disco5       ) = { $_fix_botinhaX -0.467 } ! Position
prim.pos (                2 ,       $P_Boogie_bracos_disco5       ) = { -5*$_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_bracos_disco5       ) = { $_fix_botinhaZ - 0.236 } ! Position
prim.ang (                1 ,       $P_Boogie_bracos_disco5       ) = { 270 deg }             ! Angles
prim.ang (                3 ,       $P_Boogie_bracos_disco5       ) = { (180 + 28) deg }      ! Angles
prim.color.r (            1 ,       $P_Boogie_bracos_disco5       ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_bracos_disco5       ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_bracos_disco5       ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_bracos_disco5       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_bracos_disco5       ) = './pecas_stl/disco_de_corte_stl/bracos.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_bracos_disco5       ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_bracos_disco5       ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_bracos_disco6       ) = 39                      ! Type
prim.ref (                          $P_Boogie_bracos_disco6       ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_bracos_disco6       ) = { $_fix_botinhaX -0.467 } ! Position
prim.pos (                2 ,       $P_Boogie_bracos_disco6       ) = { 6*$_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_bracos_disco6       ) = { $_fix_botinhaZ - 0.236 } ! Position
prim.ang (                1 ,       $P_Boogie_bracos_disco6       ) = { 270 deg }             ! Angles
prim.ang (                3 ,       $P_Boogie_bracos_disco6       ) = { (180 + 28) deg }      ! Angles
prim.color.r (            1 ,       $P_Boogie_bracos_disco6       ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_bracos_disco6       ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_bracos_disco6       ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_bracos_disco6       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_bracos_disco6       ) = './pecas_stl/disco_de_corte_stl/bracos.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_bracos_disco6       ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_bracos_disco6       ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_CBotinha1           ) = 15                      ! Type
prim.ref (                          $P_Boogie_CBotinha1           ) = $M_Boogie_PontaBotinha1 ! Reference Marker
prim.color.r (            1 ,       $P_Boogie_CBotinha1           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_Boogie_CBotinha1           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_CBotinha1           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_Boogie_CBotinha1           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_CBotinha1           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_Boogie_CBotinha1           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_CBotinha1           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_Boogie_CBotinha1           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_Boogie_CBotinha1           ) = 1.00000000000000000E+00 ! Transparency
prim.par (                2 ,       $P_Boogie_CBotinha1           ) = $_rarb                  ! [m] Radius
prim.par (                3 ,       $P_Boogie_CBotinha1           ) = 0.00000000000000000E+00 ! [rad] Start angle
prim.par (                4 ,       $P_Boogie_CBotinha1           ) = 0.00000000000000000E+00 ! [rad] Delta angle
prim.par (                5 ,       $P_Boogie_CBotinha1           ) = 2.40000000000000000E+01 ! [-] Number of meridians

prim.type (                         $P_Boogie_CBotinha2           ) = 15                      ! Type
prim.ref (                          $P_Boogie_CBotinha2           ) = $M_Boogie_PontaBotinha2 ! Reference Marker
prim.color.r (            1 ,       $P_Boogie_CBotinha2           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_Boogie_CBotinha2           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_CBotinha2           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_Boogie_CBotinha2           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_CBotinha2           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_Boogie_CBotinha2           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_CBotinha2           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_Boogie_CBotinha2           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_Boogie_CBotinha2           ) = 1.00000000000000000E+00 ! Transparency
prim.par (                2 ,       $P_Boogie_CBotinha2           ) = $_rarb                  ! [m] Radius
prim.par (                3 ,       $P_Boogie_CBotinha2           ) = 0.00000000000000000E+00 ! [rad] Start angle
prim.par (                4 ,       $P_Boogie_CBotinha2           ) = 0.00000000000000000E+00 ! [rad] Delta angle
prim.par (                5 ,       $P_Boogie_CBotinha2           ) = 2.40000000000000000E+01 ! [-] Number of meridians

prim.type (                         $P_Boogie_CBotinha3           ) = 15                      ! Type
prim.ref (                          $P_Boogie_CBotinha3           ) = $M_Boogie_PontaBotinha3 ! Reference Marker
prim.color.r (            1 ,       $P_Boogie_CBotinha3           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_Boogie_CBotinha3           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_CBotinha3           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_Boogie_CBotinha3           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_CBotinha3           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_Boogie_CBotinha3           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_CBotinha3           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_Boogie_CBotinha3           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_Boogie_CBotinha3           ) = 1.00000000000000000E+00 ! Transparency
prim.par (                2 ,       $P_Boogie_CBotinha3           ) = $_rarb                  ! [m] Radius
prim.par (                3 ,       $P_Boogie_CBotinha3           ) = 0.00000000000000000E+00 ! [rad] Start angle
prim.par (                4 ,       $P_Boogie_CBotinha3           ) = 0.00000000000000000E+00 ! [rad] Delta angle
prim.par (                5 ,       $P_Boogie_CBotinha3           ) = 2.40000000000000000E+01 ! [-] Number of meridians

prim.type (                         $P_Boogie_CBotinha4           ) = 15                      ! Type
prim.ref (                          $P_Boogie_CBotinha4           ) = $M_Boogie_PontaBotinha4 ! Reference Marker
prim.color.r (            1 ,       $P_Boogie_CBotinha4           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_Boogie_CBotinha4           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_CBotinha4           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_Boogie_CBotinha4           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_CBotinha4           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_Boogie_CBotinha4           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_CBotinha4           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_Boogie_CBotinha4           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_Boogie_CBotinha4           ) = 1.00000000000000000E+00 ! Transparency
prim.par (                2 ,       $P_Boogie_CBotinha4           ) = $_rarb                  ! [m] Radius
prim.par (                3 ,       $P_Boogie_CBotinha4           ) = 0.00000000000000000E+00 ! [rad] Start angle
prim.par (                4 ,       $P_Boogie_CBotinha4           ) = 0.00000000000000000E+00 ! [rad] Delta angle
prim.par (                5 ,       $P_Boogie_CBotinha4           ) = 2.40000000000000000E+01 ! [-] Number of meridians

prim.type (                         $P_Boogie_CBotinha5           ) = 15                      ! Type
prim.ref (                          $P_Boogie_CBotinha5           ) = $M_Boogie_PontaBotinha5 ! Reference Marker
prim.color.r (            1 ,       $P_Boogie_CBotinha5           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_Boogie_CBotinha5           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_CBotinha5           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_Boogie_CBotinha5           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_CBotinha5           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_Boogie_CBotinha5           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_CBotinha5           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_Boogie_CBotinha5           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_Boogie_CBotinha5           ) = 1.00000000000000000E+00 ! Transparency
prim.par (                2 ,       $P_Boogie_CBotinha5           ) = $_rarb                  ! [m] Radius
prim.par (                3 ,       $P_Boogie_CBotinha5           ) = 0.00000000000000000E+00 ! [rad] Start angle
prim.par (                4 ,       $P_Boogie_CBotinha5           ) = 0.00000000000000000E+00 ! [rad] Delta angle
prim.par (                5 ,       $P_Boogie_CBotinha5           ) = 2.40000000000000000E+01 ! [-] Number of meridians

prim.type (                         $P_Boogie_CBotinha6           ) = 15                      ! Type
prim.ref (                          $P_Boogie_CBotinha6           ) = $M_Boogie_PontaBotinha6 ! Reference Marker
prim.color.r (            1 ,       $P_Boogie_CBotinha6           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_Boogie_CBotinha6           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_CBotinha6           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_Boogie_CBotinha6           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_CBotinha6           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_Boogie_CBotinha6           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_CBotinha6           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_Boogie_CBotinha6           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_Boogie_CBotinha6           ) = 1.00000000000000000E+00 ! Transparency
prim.par (                2 ,       $P_Boogie_CBotinha6           ) = $_rarb                  ! [m] Radius
prim.par (                3 ,       $P_Boogie_CBotinha6           ) = 0.00000000000000000E+00 ! [rad] Start angle
prim.par (                4 ,       $P_Boogie_CBotinha6           ) = 0.00000000000000000E+00 ! [rad] Delta angle
prim.par (                5 ,       $P_Boogie_CBotinha6           ) = 2.40000000000000000E+01 ! [-] Number of meridians


!**********************************************************************
! Force Elements
!**********************************************************************
force.type (                        $F_tau11                      ) = 50                      ! Type
force.from (                        $F_tau11                      ) = $M_Isys                 ! From Marker
force.to (                          $F_tau11                      ) = $S_esteira1.$M_Roda1_BRF ! To Marker
force.disabled (                    $F_tau11                      ) = 0                       ! Disabled
force.par (               1 ,       $F_tau11                      ) = $M_Boogie_BRF           ! [-] Reference Marker for calc.
force.par (               3 ,       $F_tau11                      ) = null                    ! [-] Expression for Fx
force.par (               4 ,       $F_tau11                      ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_tau11                      ) = null                    ! [-] Expression for Fz
force.par (               6 ,       $F_tau11                      ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_tau11                      ) = $X_tau11                ! [-] Expression for Ly
force.par (               8 ,       $F_tau11                      ) = null                    ! [-] Expression for Lz

force.type (                        $F_tau12                      ) = 50                      ! Type
force.from (                        $F_tau12                      ) = $M_Isys                 ! From Marker
force.to (                          $F_tau12                      ) = $S_esteira2.$M_Roda1_BRF ! To Marker
force.disabled (                    $F_tau12                      ) = 0                       ! Disabled
force.par (               1 ,       $F_tau12                      ) = $M_Boogie_BRF           ! [-] Reference Marker for calc.
force.par (               3 ,       $F_tau12                      ) = null                    ! [-] Expression for Fx
force.par (               4 ,       $F_tau12                      ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_tau12                      ) = null                    ! [-] Expression for Fz
force.par (               6 ,       $F_tau12                      ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_tau12                      ) = $X_tau12                ! [-] Expression for Ly
force.par (               8 ,       $F_tau12                      ) = null                    ! [-] Expression for Lz

force.type (                        $F_tau21                      ) = 50                      ! Type
force.from (                        $F_tau21                      ) = $S_rocker1.$M_Rocker_2roda ! From Marker
force.to (                          $F_tau21                      ) = $S_roda1.$M_Roda1_BRF   ! To Marker
force.disabled (                    $F_tau21                      ) = 0                       ! Disabled
force.par (               1 ,       $F_tau21                      ) = $M_Isys                 ! [-] Reference Marker for calc.
force.par (               3 ,       $F_tau21                      ) = null                    ! [-] Expression for Fx
force.par (               4 ,       $F_tau21                      ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_tau21                      ) = null                    ! [-] Expression for Fz
force.par (               6 ,       $F_tau21                      ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_tau21                      ) = $X_tau21                ! [-] Expression for Ly
force.par (               8 ,       $F_tau21                      ) = null                    ! [-] Expression for Lz

force.type (                        $F_tau22                      ) = 50                      ! Type
force.from (                        $F_tau22                      ) = $S_rocker2.$M_Rocker_2roda ! From Marker
force.to (                          $F_tau22                      ) = $S_roda2.$M_Roda1_BRF   ! To Marker
force.disabled (                    $F_tau22                      ) = 0                       ! Disabled
force.par (               1 ,       $F_tau22                      ) = $M_Isys                 ! [-] Reference Marker for calc.
force.par (               3 ,       $F_tau22                      ) = null                    ! [-] Expression for Fx
force.par (               4 ,       $F_tau22                      ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_tau22                      ) = null                    ! [-] Expression for Fz
force.par (               6 ,       $F_tau22                      ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_tau22                      ) = $X_tau22                ! [-] Expression for Ly
force.par (               8 ,       $F_tau22                      ) = null                    ! [-] Expression for Lz

force.type (                        $F_IF                         ) = 50                      ! Type
force.from (                        $F_IF                         ) = $M_Isys                 ! From Marker
force.to (                          $F_IF                         ) = $M_Boogie_BRF           ! To Marker
force.disabled (                    $F_IF                         ) = 1                       ! Disabled
force.par (               1 ,       $F_IF                         ) = $M_Boogie_BRF           ! [-] Reference Marker for calc.
force.par (               3 ,       $F_IF                         ) = $X_IF                   ! [-] Expression for Fx
force.par (               4 ,       $F_IF                         ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_IF                         ) = null                    ! [-] Expression for Fz
force.par (               6 ,       $F_IF                         ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_IF                         ) = null                    ! [-] Expression for Ly
force.par (               8 ,       $F_IF                         ) = null                    ! [-] Expression for Lz

force.type (                        $F_bot1                       ) = 50                      ! Type
force.from (                        $F_bot1                       ) = $M_chao_PontaBotinha1_contact ! From Marker
force.to (                          $F_bot1                       ) = $M_Boogie_PontaBotinha1 ! To Marker
force.par (               1 ,       $F_bot1                       ) = $M_Boogie_PontaBotinha1 ! [-] Reference Marker for calc.
force.par (               3 ,       $F_bot1                       ) = $X_IF_Bot1              ! [-] Expression for Fx
force.par (               4 ,       $F_bot1                       ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_bot1                       ) = $X_Fz_bot1              ! [-] Expression for Fz
force.par (               6 ,       $F_bot1                       ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_bot1                       ) = null                    ! [-] Expression for Ly
force.par (               8 ,       $F_bot1                       ) = null                    ! [-] Expression for Lz

force.type (                        $F_bot2                       ) = 50                      ! Type
force.from (                        $F_bot2                       ) = $M_chao_PontaBotinha2_contact ! From Marker
force.to (                          $F_bot2                       ) = $M_Boogie_PontaBotinha2 ! To Marker
force.par (               1 ,       $F_bot2                       ) = $M_Boogie_PontaBotinha2 ! [-] Reference Marker for calc.
force.par (               3 ,       $F_bot2                       ) = $X_IF_Bot2              ! [-] Expression for Fx
force.par (               4 ,       $F_bot2                       ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_bot2                       ) = $X_Fz_bot2              ! [-] Expression for Fz
force.par (               6 ,       $F_bot2                       ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_bot2                       ) = null                    ! [-] Expression for Ly
force.par (               8 ,       $F_bot2                       ) = null                    ! [-] Expression for Lz

force.type (                        $F_bot3                       ) = 50                      ! Type
force.from (                        $F_bot3                       ) = $M_chao_PontaBotinha3_contact ! From Marker
force.to (                          $F_bot3                       ) = $M_Boogie_PontaBotinha3 ! To Marker
force.par (               1 ,       $F_bot3                       ) = $M_Boogie_PontaBotinha3 ! [-] Reference Marker for calc.
force.par (               3 ,       $F_bot3                       ) = $X_IF_Bot3              ! [-] Expression for Fx
force.par (               4 ,       $F_bot3                       ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_bot3                       ) = $X_Fz_bot3              ! [-] Expression for Fz
force.par (               6 ,       $F_bot3                       ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_bot3                       ) = null                    ! [-] Expression for Ly
force.par (               8 ,       $F_bot3                       ) = null                    ! [-] Expression for Lz

force.type (                        $F_bot4                       ) = 50                      ! Type
force.from (                        $F_bot4                       ) = $M_chao_PontaBotinha4_contact ! From Marker
force.to (                          $F_bot4                       ) = $M_Boogie_PontaBotinha4 ! To Marker
force.par (               1 ,       $F_bot4                       ) = $M_Boogie_PontaBotinha4 ! [-] Reference Marker for calc.
force.par (               3 ,       $F_bot4                       ) = $X_IF_Bot4              ! [-] Expression for Fx
force.par (               4 ,       $F_bot4                       ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_bot4                       ) = $X_Fz_bot4              ! [-] Expression for Fz
force.par (               6 ,       $F_bot4                       ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_bot4                       ) = null                    ! [-] Expression for Ly
force.par (               8 ,       $F_bot4                       ) = null                    ! [-] Expression for Lz

force.type (                        $F_bot5                       ) = 50                      ! Type
force.from (                        $F_bot5                       ) = $M_chao_PontaBotinha5_contact ! From Marker
force.to (                          $F_bot5                       ) = $M_Boogie_PontaBotinha5 ! To Marker
force.par (               1 ,       $F_bot5                       ) = $M_Boogie_PontaBotinha5 ! [-] Reference Marker for calc.
force.par (               3 ,       $F_bot5                       ) = $X_IF_Bot5              ! [-] Expression for Fx
force.par (               4 ,       $F_bot5                       ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_bot5                       ) = $X_Fz_bot5              ! [-] Expression for Fz
force.par (               6 ,       $F_bot5                       ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_bot5                       ) = null                    ! [-] Expression for Ly
force.par (               8 ,       $F_bot5                       ) = null                    ! [-] Expression for Lz

force.type (                        $F_bot6                       ) = 50                      ! Type
force.from (                        $F_bot6                       ) = $M_chao_PontaBotinha6_contact ! From Marker
force.to (                          $F_bot6                       ) = $M_Boogie_PontaBotinha6 ! To Marker
force.par (               1 ,       $F_bot6                       ) = $M_Boogie_PontaBotinha6 ! [-] Reference Marker for calc.
force.par (               3 ,       $F_bot6                       ) = $X_IF_Bot6              ! [-] Expression for Fx
force.par (               4 ,       $F_bot6                       ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_bot6                       ) = $X_Fz_bot6              ! [-] Expression for Fz
force.par (               6 ,       $F_bot6                       ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_bot6                       ) = null                    ! [-] Expression for Ly
force.par (               8 ,       $F_bot6                       ) = null                    ! [-] Expression for Lz

!**********************************************************************
! Connection Elements
!**********************************************************************
connect.type (                      $CTN_ParCima1                 ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParCima1                 ) = 2.70526034059125620E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParCima1                 ) = -2.77187289896935005E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParCima1                 ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParCima1                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParCima1                 ) = 2.70526034059125675E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParCima1                 ) = -3.32151567292068671E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParCima1                 ) = 2.70526034059125620E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParCima1                 ) = -2.77187289896935005E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParCima1                 ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParCima1                 ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParCima1                 ) = $S_LinhaSemente1.$S_BarraCima.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParCima1                 ) = $M_Boogie_ParalelogramoCima1 ! [-] To Marker
connect.par (             3 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParCima1                 ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParCima1                 ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParCima1           ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParCima1           ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParCima1           ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParCima1           ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParCima1                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParCima1           ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParCima1     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParCima1     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParCima1     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParCima1     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParCima1     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParCima1           ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParCima1     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParCima1     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParCima1     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParCima1     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParCima1     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParCima1                 ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParCima1                 ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParCima1                 ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParCima1                 ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParCima1                 ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParCima1                 ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParCima1                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParCima1           ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParCima1           ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParCima1           ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParCima1           ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParCima1           ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParCima2                 ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParCima2                 ) = 2.70526034059125453E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParCima2                 ) = -2.28330154434593972E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParCima2                 ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParCima2                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParCima2                 ) = 2.70526034059123233E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParCima2                 ) = -3.13830141493690804E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParCima2                 ) = 2.70526034059125453E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParCima2                 ) = -2.28330154434593972E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParCima2                 ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParCima2                 ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParCima2                 ) = $S_LinhaSemente2.$S_BarraCima.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParCima2                 ) = $M_Boogie_ParalelogramoCima2 ! [-] To Marker
connect.par (             3 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParCima2                 ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParCima2                 ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParCima2           ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParCima2           ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParCima2           ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParCima2           ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParCima2                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParCima2           ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParCima2     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParCima2     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParCima2     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParCima2     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParCima2     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParCima2           ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParCima2     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParCima2     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParCima2     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParCima2     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParCima2     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParCima2                 ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParCima2                 ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParCima2                 ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParCima2                 ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParCima2                 ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParCima2                 ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParCima2                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParCima2           ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParCima2           ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParCima2           ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParCima2           ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParCima2           ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParCima3                 ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParCima3                 ) = 2.70526034059125731E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParCima3                 ) = -3.01615857628105473E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParCima3                 ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParCima3                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParCima3                 ) = 2.70526034059126841E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParCima3                 ) = -1.85580160905045541E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParCima3                 ) = 2.70526034059125731E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParCima3                 ) = -3.01615857628105473E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParCima3                 ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParCima3                 ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParCima3                 ) = $S_LinhaSemente3.$S_BarraCima.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParCima3                 ) = $M_Boogie_ParalelogramoCima3 ! [-] To Marker
connect.par (             3 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParCima3                 ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParCima3                 ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParCima3           ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParCima3           ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParCima3           ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParCima3           ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParCima3                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParCima3           ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParCima3     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParCima3     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParCima3     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParCima3     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParCima3     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParCima3           ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParCima3     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParCima3     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParCima3     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParCima3     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParCima3     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParCima3                 ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParCima3                 ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParCima3                 ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParCima3                 ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParCima3                 ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParCima3                 ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParCima3                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParCima3           ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParCima3           ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParCima3           ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParCima3           ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParCima3           ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParCima4                 ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParCima4                 ) = 2.70526034059125398E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParCima4                 ) = -3.50472993090446538E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParCima4                 ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParCima4                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParCima4                 ) = 2.70526034059125009E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParCima4                 ) = -2.34437296367386573E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParCima4                 ) = 2.70526034059125398E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParCima4                 ) = -3.50472993090446538E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParCima4                 ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParCima4                 ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParCima4                 ) = $S_LinhaSemente4.$S_BarraCima.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParCima4                 ) = $M_Boogie_ParalelogramoCima4 ! [-] To Marker
connect.par (             3 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParCima4                 ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParCima4                 ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParCima4           ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParCima4           ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParCima4           ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParCima4           ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParCima4                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParCima4           ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParCima4     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParCima4     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParCima4     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParCima4     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParCima4     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParCima4           ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParCima4     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParCima4     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParCima4     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParCima4     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParCima4     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParCima4                 ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParCima4                 ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParCima4                 ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParCima4                 ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParCima4                 ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParCima4                 ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParCima4                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParCima4           ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParCima4           ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParCima4           ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParCima4           ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParCima4           ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParCima5                 ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParCima5                 ) = 2.70526034059125509E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParCima5                 ) = -1.48937309308289742E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParCima5                 ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParCima5                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParCima5                 ) = 2.70526034059123732E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParCima5                 ) = -1.91687302837838174E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParCima5                 ) = 2.70526034059125509E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParCima5                 ) = -1.48937309308289742E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParCima5                 ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParCima5                 ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParCima5                 ) = $S_LinhaSemente5.$S_BarraCima.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParCima5                 ) = $M_Boogie_ParalelogramoCima5 ! [-] To Marker
connect.par (             3 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParCima5                 ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParCima5                 ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParCima5           ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParCima5           ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParCima5           ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParCima5           ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParCima5                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParCima5           ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParCima5     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParCima5     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParCima5     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParCima5     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParCima5     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParCima5           ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParCima5     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParCima5     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParCima5     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParCima5     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParCima5     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParCima5                 ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParCima5                 ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParCima5                 ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParCima5                 ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParCima5                 ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParCima5                 ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParCima5                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParCima5           ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParCima5           ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParCima5           ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParCima5           ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParCima5           ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParCima6                 ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParCima6                 ) = 2.70526034059124121E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParCima6                 ) = -2.51438491870436894E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParCima6                 ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParCima6                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParCima6                 ) = 2.70526034059127118E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParCima6                 ) = -1.41509937080169594E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParCima6                 ) = 2.70526034059124121E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParCima6                 ) = -2.51438491870436894E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParCima6                 ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParCima6                 ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParCima6                 ) = $S_LinhaSemente6.$S_BarraCima.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParCima6                 ) = $M_Boogie_ParalelogramoCima6 ! [-] To Marker
connect.par (             3 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParCima6                 ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParCima6                 ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParCima6           ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParCima6           ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParCima6           ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParCima6           ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParCima6                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParCima6           ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParCima6     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParCima6     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParCima6     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParCima6     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParCima6     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParCima6           ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParCima6     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParCima6     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParCima6     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParCima6     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParCima6     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParCima6                 ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParCima6                 ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParCima6                 ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParCima6                 ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParCima6                 ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParCima6                 ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParCima6                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParCima6           ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParCima6           ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParCima6           ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParCima6           ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParCima6           ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParBaixo1                ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParBaixo1                ) = 2.70526034059125620E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParBaixo1                ) = -2.52415530809330966E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParBaixo1                ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParBaixo1                ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParBaixo1                ) = 2.70526034059124731E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParBaixo1                ) = -3.73009478338895395E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParBaixo1                ) = 2.70526034059125620E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParBaixo1                ) = -2.52415530809330966E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParBaixo1                ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParBaixo1                ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParBaixo1                ) = $S_LinhaSemente1.$S_BarraBaixo.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParBaixo1                ) = $M_Boogie_ParalelogramoBaixo1 ! [-] To Marker
connect.par (             3 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParBaixo1                ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParBaixo1                ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParBaixo1          ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParBaixo1          ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParBaixo1          ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParBaixo1          ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParBaixo1                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParBaixo1          ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParBaixo1    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParBaixo1    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParBaixo1    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParBaixo1    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParBaixo1    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParBaixo1          ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParBaixo1    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParBaixo1    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParBaixo1    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParBaixo1    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParBaixo1    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParBaixo1                ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParBaixo1                ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParBaixo1                ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParBaixo1                ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParBaixo1                ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParBaixo1                ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParBaixo1                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParBaixo1          ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParBaixo1          ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParBaixo1          ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParBaixo1          ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParBaixo1          ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParBaixo2                ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParBaixo2                ) = 2.70526034059125786E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParBaixo2                ) = -1.78422579122246382E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParBaixo2                ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParBaixo2                ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParBaixo2                ) = 2.70526034059123566E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParBaixo2                ) = -3.61627966844620905E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParBaixo2                ) = 2.70526034059125786E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParBaixo2                ) = -1.78422579122246382E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParBaixo2                ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParBaixo2                ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParBaixo2                ) = $S_LinhaSemente2.$S_BarraBaixo.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParBaixo2                ) = $M_Boogie_ParalelogramoBaixo2 ! [-] To Marker
connect.par (             3 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParBaixo2                ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParBaixo2                ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParBaixo2          ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParBaixo2          ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParBaixo2          ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParBaixo2          ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParBaixo2                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParBaixo2          ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParBaixo2    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParBaixo2    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParBaixo2    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParBaixo2    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParBaixo2    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParBaixo2          ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParBaixo2    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParBaixo2    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParBaixo2    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParBaixo2    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParBaixo2    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParBaixo2                ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParBaixo2                ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParBaixo2                ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParBaixo2                ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParBaixo2                ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParBaixo2                ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParBaixo2                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParBaixo2          ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParBaixo2          ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParBaixo2          ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParBaixo2          ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParBaixo2          ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParBaixo3                ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParBaixo3                ) = 2.70526034059126230E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParBaixo3                ) = -2.49925569076609837E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParBaixo3                ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParBaixo3                ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParBaixo3                ) = 2.70526034059128118E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParBaixo3                ) = -1.94359960409158048E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParBaixo3                ) = 2.70526034059126230E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParBaixo3                ) = -2.49925569076609837E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParBaixo3                ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParBaixo3                ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParBaixo3                ) = $S_LinhaSemente3.$S_BarraBaixo.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParBaixo3                ) = $M_Boogie_ParalelogramoBaixo3 ! [-] To Marker
connect.par (             3 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParBaixo3                ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParBaixo3                ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParBaixo3          ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParBaixo3          ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParBaixo3          ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParBaixo3          ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParBaixo3                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParBaixo3          ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParBaixo3    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParBaixo3    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParBaixo3    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParBaixo3    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParBaixo3    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParBaixo3          ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParBaixo3    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParBaixo3    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParBaixo3    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParBaixo3    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParBaixo3    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParBaixo3                ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParBaixo3                ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParBaixo3                ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParBaixo3                ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParBaixo3                ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParBaixo3                ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParBaixo3                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParBaixo3          ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParBaixo3          ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParBaixo3          ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParBaixo3          ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParBaixo3          ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParBaixo4                ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParBaixo4                ) = 2.70526034059125231E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParBaixo4                ) = -4.49042882113621639E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParBaixo4                ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParBaixo4                ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParBaixo4                ) = 2.70526034059125398E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParBaixo4                ) = -2.17392290785376823E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParBaixo4                ) = 2.70526034059125231E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParBaixo4                ) = -4.49042882113621639E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParBaixo4                ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParBaixo4                ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParBaixo4                ) = $S_LinhaSemente4.$S_BarraBaixo.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParBaixo4                ) = $M_Boogie_ParalelogramoBaixo4 ! [-] To Marker
connect.par (             3 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParBaixo4                ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParBaixo4                ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParBaixo4          ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParBaixo4          ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParBaixo4          ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParBaixo4          ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParBaixo4                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParBaixo4          ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParBaixo4    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParBaixo4    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParBaixo4    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParBaixo4    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParBaixo4    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParBaixo4          ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParBaixo4    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParBaixo4    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParBaixo4    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParBaixo4    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParBaixo4    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParBaixo4                ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParBaixo4                ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParBaixo4                ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParBaixo4                ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParBaixo4                ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParBaixo4                ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParBaixo4                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParBaixo4          ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParBaixo4          ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParBaixo4          ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParBaixo4          ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParBaixo4          ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParBaixo5                ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParBaixo5                ) = 2.70526034059125564E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParBaixo5                ) = -7.45317818354392904E-71 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParBaixo5                ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParBaixo5                ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParBaixo5                ) = 2.70526034059123177E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParBaixo5                ) = -1.72686741547868349E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParBaixo5                ) = 2.70526034059125564E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParBaixo5                ) = -7.45317818354392904E-71 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParBaixo5                ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParBaixo5                ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParBaixo5                ) = $S_LinhaSemente5.$S_BarraBaixo.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParBaixo5                ) = $M_Boogie_ParalelogramoBaixo5 ! [-] To Marker
connect.par (             3 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParBaixo5                ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParBaixo5                ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParBaixo5          ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParBaixo5          ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParBaixo5          ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParBaixo5          ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParBaixo5                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParBaixo5          ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParBaixo5    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParBaixo5    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParBaixo5    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParBaixo5    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParBaixo5    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParBaixo5          ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParBaixo5    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParBaixo5    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParBaixo5    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParBaixo5    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParBaixo5    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParBaixo5                ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParBaixo5                ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParBaixo5                ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParBaixo5                ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParBaixo5                ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParBaixo5                ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParBaixo5                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParBaixo5          ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParBaixo5          ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParBaixo5          ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParBaixo5          ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParBaixo5          ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParBaixo6                ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParBaixo6                ) = 2.70526034059124121E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParBaixo6                ) = -3.77081416070550206E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParBaixo6                ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParBaixo6                ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParBaixo6                ) = 2.70526034059127451E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParBaixo6                ) = -1.52314195803121713E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParBaixo6                ) = 2.70526034059124121E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParBaixo6                ) = -3.77081416070550206E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParBaixo6                ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParBaixo6                ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParBaixo6                ) = $S_LinhaSemente6.$S_BarraBaixo.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParBaixo6                ) = $M_Boogie_ParalelogramoBaixo6 ! [-] To Marker
connect.par (             3 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParBaixo6                ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParBaixo6                ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParBaixo6          ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParBaixo6          ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParBaixo6          ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParBaixo6          ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParBaixo6                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParBaixo6          ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParBaixo6    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParBaixo6    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParBaixo6    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParBaixo6    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParBaixo6    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParBaixo6          ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParBaixo6    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParBaixo6    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParBaixo6    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParBaixo6    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParBaixo6    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParBaixo6                ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParBaixo6                ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParBaixo6                ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParBaixo6                ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParBaixo6                ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParBaixo6                ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParBaixo6                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParBaixo6          ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParBaixo6          ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParBaixo6          ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParBaixo6          ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParBaixo6          ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

!**********************************************************************
! Expressions
!**********************************************************************
express.str (                       $X_PD                         ) = '2*$_lambda*($_vd - VX($M_Boogie_BRF)) + ($_lambda^2)*($_vd*TIME - DX($M_Boogie_BRF))' ! Definition

express.str (                       $X_tau11                      ) = '-0.5*(1-$_beta)*$_m*(0.25)*$X_PD' ! Definition

express.str (                       $X_tau12                      ) = '-0.5*(1-$_beta)*$_m*(0.25)*$X_PD' ! Definition

express.str (                       $X_tau21                      ) = '-0.5*$_beta*$_m*(0.4395)*$X_PD' ! Definition

express.str (                       $X_tau22                      ) = '-0.5*$_beta*$_m*(0.4395)*$X_PD' ! Definition

express.str (                       $X_IF                         ) = '-$_IF*tanh(-1000*VX($M_Boogie_BRF,$M_Isys,$M_Boogie_BRF))' ! Definition

express.str (                       $X_DistBotinhaPonta1          ) = 'DZ($M_Boogie_PontaBotinha1,$M_chao_PontaBotinha1_contact,$M_chao_PontaBotinha1_contact)' ! Definition

express.str (                       $X_DistBotinhaPonta2          ) = 'DZ($M_Boogie_PontaBotinha2,$M_chao_PontaBotinha2_contact,$M_chao_PontaBotinha2_contact)' ! Definition

express.str (                       $X_DistBotinhaPonta3          ) = 'DZ($M_Boogie_PontaBotinha3,$M_chao_PontaBotinha3_contact,$M_chao_PontaBotinha3_contact)' ! Definition

express.str (                       $X_DistBotinhaPonta4          ) = 'DZ($M_Boogie_PontaBotinha4,$M_chao_PontaBotinha4_contact,$M_chao_PontaBotinha4_contact)' ! Definition

express.str (                       $X_DistBotinhaPonta5          ) = 'DZ($M_Boogie_PontaBotinha5,$M_chao_PontaBotinha5_contact,$M_chao_PontaBotinha5_contact)' ! Definition

express.str (                       $X_DistBotinhaPonta6          ) = 'DZ($M_Boogie_PontaBotinha6,$M_chao_PontaBotinha6_contact,$M_chao_PontaBotinha6_contact)' ! Definition

express.str (                       $dX_DistBotinhaPonta1         ) = 'VZ($M_Boogie_PontaBotinha1,$M_chao_PontaBotinha1_contact,$M_chao_PontaBotinha1_contact)' ! Definition

express.str (                       $dX_DistBotinhaPonta2         ) = 'VZ($M_Boogie_PontaBotinha2,$M_chao_PontaBotinha2_contact,$M_chao_PontaBotinha2_contact)' ! Definition

express.str (                       $dX_DistBotinhaPonta3         ) = 'VZ($M_Boogie_PontaBotinha3,$M_chao_PontaBotinha3_contact,$M_chao_PontaBotinha3_contact)' ! Definition

express.str (                       $dX_DistBotinhaPonta4         ) = 'VZ($M_Boogie_PontaBotinha4,$M_chao_PontaBotinha4_contact,$M_chao_PontaBotinha4_contact)' ! Definition

express.str (                       $dX_DistBotinhaPonta5         ) = 'VZ($M_Boogie_PontaBotinha5,$M_chao_PontaBotinha5_contact,$M_chao_PontaBotinha5_contact)' ! Definition

express.str (                       $dX_DistBotinhaPonta6         ) = 'VZ($M_Boogie_PontaBotinha6,$M_chao_PontaBotinha6_contact,$M_chao_PontaBotinha6_contact)' ! Definition

express.str (                       $X_delta1                     ) = 'IF($X_DistBotinhaPonta1 < 0)\n{\n-$X_DistBotinhaPonta1\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_delta2                     ) = 'IF($X_DistBotinhaPonta2 < 0)\n{\n-$X_DistBotinhaPonta2\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_delta3                     ) = 'IF($X_DistBotinhaPonta3 < 0)\n{\n-$X_DistBotinhaPonta3\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_delta4                     ) = 'IF($X_DistBotinhaPonta4 < 0)\n{\n-$X_DistBotinhaPonta4\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_delta5                     ) = 'IF($X_DistBotinhaPonta5 < 0)\n{\n-$X_DistBotinhaPonta5\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_delta6                     ) = 'IF($X_DistBotinhaPonta6 < 0)\n{\n-$X_DistBotinhaPonta6\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $dX_delta1                    ) = 'IF($X_DistBotinhaPonta1 < 0)\n{\n-$dX_DistBotinhaPonta1\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $dX_delta2                    ) = 'IF($X_DistBotinhaPonta2 < 0)\n{\n-$dX_DistBotinhaPonta2\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $dX_delta3                    ) = 'IF($X_DistBotinhaPonta3 < 0)\n{\n-$dX_DistBotinhaPonta3\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $dX_delta4                    ) = 'IF($X_DistBotinhaPonta4 < 0)\n{\n-$dX_DistBotinhaPonta4\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $dX_delta5                    ) = 'IF($X_DistBotinhaPonta5 < 0)\n{\n-$dX_DistBotinhaPonta5\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $dX_delta6                    ) = 'IF($X_DistBotinhaPonta6 < 0)\n{\n-$dX_DistBotinhaPonta6\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_Fz_bot1                    ) = 'IF($X_delta1>0)\n{\n-($_ksolo*$X_delta1 + $_csolo*$dX_delta1)*$_A_bot + $_FzDownBot*tanh(100*VX($M_Boogie_BRF,$M_Isys,$M_chao_PontaBotinha1_contact))\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_Fz_bot2                    ) = 'IF($X_delta2>0)\n{\n-($_ksolo*$X_delta2 + $_csolo*$dX_delta2)*$_A_bot + $_FzDownBot*tanh(100*VX($M_Boogie_BRF,$M_Isys,$M_chao_PontaBotinha2_contact))\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_Fz_bot3                    ) = 'IF($X_delta3>0)\n{\n-($_ksolo*$X_delta3 + $_csolo*$dX_delta3)*$_A_bot + $_FzDownBot*tanh(100*VX($M_Boogie_BRF,$M_Isys,$M_chao_PontaBotinha3_contact))\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_Fz_bot4                    ) = 'IF($X_delta4>0)\n{\n-($_ksolo*$X_delta4 + $_csolo*$dX_delta4)*$_A_bot + $_FzDownBot*tanh(100*VX($M_Boogie_BRF,$M_Isys,$M_chao_PontaBotinha4_contact))\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_Fz_bot5                    ) = 'IF($X_delta5>0)\n{\n-($_ksolo*$X_delta5 + $_csolo*$dX_delta5)*$_A_bot + $_FzDownBot*tanh(100*VX($M_Boogie_BRF,$M_Isys,$M_chao_PontaBotinha5_contact))\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_Fz_bot6                    ) = 'IF($X_delta6>0)\n{\n-($_ksolo*$X_delta6 + $_csolo*$dX_delta6)*$_A_bot + $_FzDownBot*tanh(100*VX($M_Boogie_BRF,$M_Isys,$M_chao_PontaBotinha6_contact))\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_IF_Bot                     ) = '$X_IF/12'              ! Definition

express.str (                       $X_IF_Bot1                    ) = 'IF($X_delta1>0)\n{\n$X_IF_Bot\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_IF_Bot2                    ) = 'IF($X_delta2>0)\n{\n$X_IF_Bot\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_IF_Bot3                    ) = 'IF($X_delta3>0)\n{\n$X_IF_Bot\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_IF_Bot4                    ) = 'IF($X_delta4>0)\n{\n$X_IF_Bot\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_IF_Bot5                    ) = 'IF($X_delta5>0)\n{\n$X_IF_Bot\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_IF_Bot6                    ) = 'IF($X_delta6>0)\n{\n$X_IF_Bot\n}\nELSE\n{\n0\n}' ! Definition


! Overwritten substructure values
view.fclip.value (                  $S_esteira1.$V_WorkingView    ) = 3.50148491561412811E-02 ! Front clipping plane value
view.bclip.value (                  $S_esteira1.$V_WorkingView    ) = 3.50148468017578125E+01 ! Back clipping plane value

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact11 ) = 1.03767863517852987E-08 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact11 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact12 ) = 3.44507676901491795E-05 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact12 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact13 ) = -9.25697464412873567E-09 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact13 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact21 ) = 1.72309364096646624E-05 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact21 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact22 ) = 9.63579878165588831E-09 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact22 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact23 ) = -1.72309365964788699E-05 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact23 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact31 ) = 0.00000000000000000E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact31 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact32 ) = 1.76499917654729753E-09 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact32 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact33 ) = 3.76991118446307354E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact33 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact41 ) = -9.62994019030319660E-09 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact41 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact42 ) = 2.02796561053283437E-04 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact42 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact43 ) = -1.96339825501296176E-09 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact43 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact51 ) = 8.17171923582580789E-09 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact51 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact52 ) = 2.74007391299651204E-05 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact52 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact53 ) = -2.44921701422266197E-09 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact53 ) = 1.57079632679489656E+00 ! Algebraic states

joint.from (                        $S_esteira1.$J_Base           ) = $M_Boogie_esteira1      ! From Marker
joint.type (                        $S_esteira1.$J_Base           ) = 0                       ! Type
joint.par (               1 ,       $S_esteira1.$J_Base           ) = 0.00000000000000000E+00 ! [rad] Rotation about alpha
joint.par (               2 ,       $S_esteira1.$J_Base           ) = 0.00000000000000000E+00 ! [rad] Rotation about beta
joint.par (               3 ,       $S_esteira1.$J_Base           ) = 0.00000000000000000E+00 ! [rad] Rotation about gamma
joint.par (               4 ,       $S_esteira1.$J_Base           ) = 0.00000000000000000E+00 ! [m] Translation in x
joint.par (               5 ,       $S_esteira1.$J_Base           ) = 0.00000000000000000E+00 ! [m] Translation in y
joint.par (               6 ,       $S_esteira1.$J_Base           ) = 0.00000000000000000E+00 ! [m] Translation in z
joint.par (               7 ,       $S_esteira1.$J_Base           ) = 0.00000000000000000E+00 ! [-] Rotation sequence


joint.st.pos (            1 ,       $S_esteira1.$J_Roda1          ) = 8.57839560693404631E-27 ! Position
joint.st.vel (            1 ,       $S_esteira1.$J_Roda1          ) = 2.11319821815994095E-71 ! Velocity


joint.st.pos (            1 ,       $S_esteira1.$J_Roda2          ) = 2.57351868208021375E-26 ! Position
joint.st.vel (            1 ,       $S_esteira1.$J_Roda2          ) = 6.33959465447982405E-71 ! Velocity


joint.st.pos (            1 ,       $S_esteira1.$J_Roda3          ) = 2.57351868208021375E-26 ! Position
joint.st.vel (            1 ,       $S_esteira1.$J_Roda3          ) = 6.33959465447982405E-71 ! Velocity


joint.st.pos (            1 ,       $S_esteira1.$J_Roda4          ) = 8.57839560693404631E-27 ! Position
joint.st.vel (            1 ,       $S_esteira1.$J_Roda4          ) = 2.11319821815994417E-71 ! Velocity


joint.from (                        $S_esteira1.$J_connector      ) = $M_Isys_1               ! From Marker


marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact11 ) = 2.00000000000000000E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact11 ) = 1.76664787891031606E-09 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact11 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact12 ) = 2.00000000000000000E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact12 ) = -9.68187184119924937E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact12 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact13 ) = 2.00000000000000000E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact13 ) = 9.68245820791855671E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact13 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact21 ) = 1.73076534494715850E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact21 ) = 2.93356692255592618E-06 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact21 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact22 ) = 1.73076534494715850E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact22 ) = -9.68245820146906716E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact22 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact23 ) = 1.73076534494715850E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact23 ) = 9.68216500882395081E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact23 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact31 ) = 2.26923465505284128E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact31 ) = 0.00000000000000000E+00 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact31 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact32 ) = 2.26923465505284128E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact32 ) = -9.68245833546944046E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact32 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact33 ) = 2.26923465505284128E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact33 ) = 9.68245839196206631E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact33 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact41 ) = 1.54691007703066807E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact41 ) = -1.63949746178515030E-09 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact41 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact42 ) = 1.54691007703066807E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact42 ) = -9.67900575426468429E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact42 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact43 ) = 1.54691007703066807E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact43 ) = 9.68245833209167850E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact43 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact51 ) = 2.45308992296933193E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact51 ) = 1.39123510921875539E-09 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact51 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact52 ) = 2.45308992296933193E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact52 ) = -9.68199186793392286E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact52 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact53 ) = 2.45308992296933193E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact53 ) = 9.68245832382061827E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact53 ) = $P_chao                 ! [-] Contact geometry Primitive

prim.transparency (                 $S_esteira1.$P_chao           ) = 1.00000000000000000E+00 ! Transparency


view.fclip.value (                  $S_esteira2.$V_WorkingView    ) = 3.50148491561412811E-02 ! Front clipping plane value
view.bclip.value (                  $S_esteira2.$V_WorkingView    ) = 3.50148468017578125E+01 ! Back clipping plane value

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact11 ) = 0.00000000000000000E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact11 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact12 ) = 5.44388267674659936E-09 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact12 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact13 ) = -2.73951886554693637E-05 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact13 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact21 ) = 8.23794596298291820E-09 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact21 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact22 ) = -6.45713245286909867E-09 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact22 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact23 ) = -4.83791932032634472E-09 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact23 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact31 ) = 2.74007391423470717E-05 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact31 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact32 ) = 9.16386704260876238E-09 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact32 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact33 ) = 4.84201349921166936E-09 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact33 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact41 ) = -2.73951886039290250E-05 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact41 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact42 ) = 8.14860342883000880E-09 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact42 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact43 ) = -1.91673326470304570E-09 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact43 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact51 ) = 1.25663706124543388E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact51 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact52 ) = 2.74007391867044491E-05 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact52 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact53 ) = -2.44912187262344278E-09 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact53 ) = 1.57079632679489656E+00 ! Algebraic states

joint.from (                        $S_esteira2.$J_Base           ) = $M_Boogie_esteira2      ! From Marker
joint.type (                        $S_esteira2.$J_Base           ) = 0                       ! Type
joint.par (               1 ,       $S_esteira2.$J_Base           ) = 0.00000000000000000E+00 ! [rad] Rotation about alpha
joint.par (               2 ,       $S_esteira2.$J_Base           ) = 0.00000000000000000E+00 ! [rad] Rotation about beta
joint.par (               3 ,       $S_esteira2.$J_Base           ) = 0.00000000000000000E+00 ! [rad] Rotation about gamma
joint.par (               4 ,       $S_esteira2.$J_Base           ) = 0.00000000000000000E+00 ! [m] Translation in x
joint.par (               5 ,       $S_esteira2.$J_Base           ) = 0.00000000000000000E+00 ! [m] Translation in y
joint.par (               6 ,       $S_esteira2.$J_Base           ) = 0.00000000000000000E+00 ! [m] Translation in z
joint.par (               7 ,       $S_esteira2.$J_Base           ) = 0.00000000000000000E+00 ! [-] Rotation sequence


joint.st.pos (            1 ,       $S_esteira2.$J_Roda1          ) = -2.01661973956581404E-26 ! Position
joint.st.vel (            1 ,       $S_esteira2.$J_Roda1          ) = -8.81593831030293860E-59 ! Velocity


joint.st.pos (            1 ,       $S_esteira2.$J_Roda2          ) = -6.04985921869744184E-26 ! Position
joint.st.vel (            1 ,       $S_esteira2.$J_Roda2          ) = -2.64478149309088193E-58 ! Velocity


joint.st.pos (            1 ,       $S_esteira2.$J_Roda3          ) = -6.04985921869744184E-26 ! Position
joint.st.vel (            1 ,       $S_esteira2.$J_Roda3          ) = -2.64478149309088158E-58 ! Velocity


joint.st.pos (            1 ,       $S_esteira2.$J_Roda4          ) = -2.01661973956581404E-26 ! Position
joint.st.vel (            1 ,       $S_esteira2.$J_Roda4          ) = -8.81593831030294568E-59 ! Velocity


joint.from (                        $S_esteira2.$J_connector      ) = $M_Isys_2               ! From Marker


marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact11 ) = 2.00000000000000000E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact11 ) = 0.00000000000000000E+00 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact11 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact12 ) = 2.00000000000000000E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact12 ) = -9.68245827283643751E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact12 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact13 ) = 2.00000000000000000E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact13 ) = 9.68199196243182958E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact13 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact21 ) = 1.73076534494715850E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact21 ) = 1.40251026750012775E-09 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact21 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact22 ) = 1.73076534494715850E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact22 ) = -9.68245847545121802E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact22 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact23 ) = 1.73076534494715850E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact23 ) = 9.68245828315297402E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact23 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact31 ) = 2.26923465505284128E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact31 ) = 4.66497583438895543E-06 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact31 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact32 ) = 2.26923465505284128E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact32 ) = -9.68245820950369984E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact32 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact33 ) = 2.26923465505284128E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact33 ) = 9.68245844795382060E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact33 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact41 ) = 1.54691007703066807E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact41 ) = -4.66403085510582952E-06 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact41 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact42 ) = 1.54691007703066807E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact42 ) = -9.68245822678857615E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact42 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact43 ) = 1.54691007703066807E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact43 ) = 9.68245833288615965E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact43 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact51 ) = 2.45308992296933193E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact51 ) = -3.24298192810127248E-10 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact51 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact52 ) = 2.45308992296933193E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact52 ) = -9.68199186793283761E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact52 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact53 ) = 2.45308992296933193E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact53 ) = 9.68245832382223504E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact53 ) = $P_chao                 ! [-] Contact geometry Primitive

prim.transparency (                 $S_esteira2.$P_chao           ) = 1.00000000000000000E+00 ! Transparency


marker.pos (              2 ,       $S_rocker1.$M_Rocker_2roda    ) = 1.10000000000000001E-01 ! Position

joint.from (                        $S_rocker1.$J_Rocker          ) = $M_Boogie_rocker1       ! From Marker

prim.pos (                2 ,       $S_rocker1.$P_Rocker_CAD      ) = -5.99999999999999978E-01 ! Position
prim.par (               15 ,       $S_rocker1.$P_Rocker_CAD      ) = 1.00000000000000000E+00 ! [-] Mirror in z direction


marker.pos (              2 ,       $S_rocker2.$M_Rocker_2roda    ) = -1.10000000000000001E-01 ! Position

joint.from (                        $S_rocker2.$J_Rocker          ) = $M_Boogie_rocker2       ! From Marker

prim.pos (                2 ,       $S_rocker2.$P_Rocker_CAD      ) = 5.99999999999999978E-01 ! Position
prim.par (               15 ,       $S_rocker2.$P_Rocker_CAD      ) = 0.00000000000000000E+00 ! [-] Mirror in z direction


marker.st.alg (           1 ,       $S_roda1.$M_Base_contact1     ) = -1.25663706066578449E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_roda1.$M_Base_contact1     ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_roda1.$M_Base_contact2     ) = -9.42483715880111461E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_roda1.$M_Base_contact2     ) = -1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_roda1.$M_Base_contact3     ) = -6.91150076586173867E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_roda1.$M_Base_contact3     ) = 1.57079632679489656E+00 ! Algebraic states

joint.from (                        $S_roda1.$J_Base              ) = $S_rocker1.$M_Rocker_2roda ! From Marker
joint.type (                        $S_roda1.$J_Base              ) = 2                       ! Type


joint.type (                        $S_roda1.$J_Roda1             ) = 2                       ! Type


joint.from (                        $S_roda1.$J_connector         ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_roda1.$M_chao_contact1     ) = 4.30499999999999972E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_roda1.$M_chao_contact1     ) = -8.84999998457809078E-01 ! Algebraic states
marker.par (              3 ,       $S_roda1.$M_chao_contact1     ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_roda1.$M_chao_contact2     ) = 3.93052124025520477E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_roda1.$M_chao_contact2     ) = -8.84988145594200026E-01 ! Algebraic states
marker.par (              3 ,       $S_roda1.$M_chao_contact2     ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_roda1.$M_chao_contact3     ) = 4.67947875974479466E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_roda1.$M_chao_contact3     ) = -8.84993848248304515E-01 ! Algebraic states
marker.par (              3 ,       $S_roda1.$M_chao_contact3     ) = $P_chao                 ! [-] Contact geometry Primitive

prim.transparency (                 $S_roda1.$P_chao              ) = 1.00000000000000000E+00 ! Transparency


marker.st.alg (           1 ,       $S_roda2.$M_Base_contact1     ) = 2.72508564829759401E-05 ! Algebraic states
marker.st.alg (           2 ,       $S_roda2.$M_Base_contact1     ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_roda2.$M_Base_contact2     ) = -1.25663156352421321E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_roda2.$M_Base_contact2     ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_roda2.$M_Base_contact3     ) = 4.39823366415176835E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_roda2.$M_Base_contact3     ) = 1.41371669411540690E+01 ! Algebraic states

joint.from (                        $S_roda2.$J_Base              ) = $S_rocker2.$M_Rocker_2roda ! From Marker
joint.type (                        $S_roda2.$J_Base              ) = 2                       ! Type


joint.type (                        $S_roda2.$J_Roda1             ) = 2                       ! Type

prim.par (               15 ,       $S_roda2.$P_Roda1_aro         ) = 1.00000000000000000E+00 ! [-] Mirror in z direction


joint.from (                        $S_roda2.$J_connector         ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_roda2.$M_chao_contact1     ) = 4.30499999999999972E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_roda2.$M_chao_contact1     ) = 8.85005456984005456E-01 ! Algebraic states
marker.par (              3 ,       $S_roda2.$M_chao_contact1     ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_roda2.$M_chao_contact2     ) = 3.93052124025520477E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_roda2.$M_chao_contact2     ) = 8.85011009568142382E-01 ! Algebraic states
marker.par (              3 ,       $S_roda2.$M_chao_contact2     ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_roda2.$M_chao_contact3     ) = 4.67947875974479466E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_roda2.$M_chao_contact3     ) = 8.85007908124912923E-01 ! Algebraic states
marker.par (              3 ,       $S_roda2.$M_chao_contact3     ) = $P_chao                 ! [-] Contact geometry Primitive

prim.transparency (                 $S_roda2.$P_chao              ) = 1.00000000000000000E+00 ! Transparency


joint.st.pos (            1 ,       $S_LinhaSemente1.$J_Estrutura ) = -2.24856711783845811E-17 ! Position
joint.st.pos (            2 ,       $S_LinhaSemente1.$J_Estrutura ) = -1.60365318980323951E-16 ! Position
joint.st.pos (            3 ,       $S_LinhaSemente1.$J_Estrutura ) = 1.46159784322422212E-18 ! Position
joint.st.pos (            4 ,       $S_LinhaSemente1.$J_Estrutura ) = 3.60638905120292785E-01 ! Position
joint.st.pos (            5 ,       $S_LinhaSemente1.$J_Estrutura ) = -2.50000000000000000E-01 ! Position
joint.st.pos (            6 ,       $S_LinhaSemente1.$J_Estrutura ) = 5.28390889286347587E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente1.$J_Estrutura ) = -6.15902892873646410E-72 ! Velocity
joint.st.vel (            2 ,       $S_LinhaSemente1.$J_Estrutura ) = 2.44285677311705204E-71 ! Velocity
joint.st.vel (            3 ,       $S_LinhaSemente1.$J_Estrutura ) = 1.12103754167720422E-73 ! Velocity
joint.st.vel (            4 ,       $S_LinhaSemente1.$J_Estrutura ) = 7.12445416791283828E-56 ! Velocity
joint.st.vel (            5 ,       $S_LinhaSemente1.$J_Estrutura ) = -1.35814774982431003E-71 ! Velocity
joint.st.vel (            6 ,       $S_LinhaSemente1.$J_Estrutura ) = 1.26025262604688165E-70 ! Velocity


prim.transparency (                 $S_LinhaSemente1.$P_chao      ) = 1.00000000000000000E+00 ! Transparency


joint.from (                        $S_LinhaSemente1.$J_connector ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_BarraCima.$M_Body1_contact) = -5.16244773342849683E-01 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente1.$S_BarraCima.$J_Body1) = -2.70526034059125509E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente1.$S_BarraCima.$J_Body1) = 2.52758722165764473E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_BarraBaixo.$M_Body1_contact) = 3.97756818462262896E+00 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente1.$S_BarraBaixo.$J_Body1) = -2.70526034059125509E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente1.$S_BarraBaixo.$J_Body1) = 2.27986963078160434E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_Base_contact1) = -2.19911506845870335E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_Base_contact1) = 4.71238898038468967E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_Base_contact2) = -3.76990879618006076E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_Base_contact2) = 7.85398163397448368E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_Base_contact3) = 1.87797218937615119E-05 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_Base_contact3) = 1.57079632679489678E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_chao_contact1) = 1.85638905120292824E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_chao_contact1) = -3.89999665880995494E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_chao_contact1) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_chao_contact2) = 3.65290462913072864E-02 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_chao_contact2) = -3.89996217423317026E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_chao_contact2) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_chao_contact3) = 3.34748763949278438E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_chao_contact3) = -3.89997025463150127E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_chao_contact3) = $P_chao ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_Base_contact1) = -1.25663755826866410E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_Base_contact1) = 1.57079632679489678E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_Base_contact2) = -1.25663422699148644E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_Base_contact2) = 1.57079632679489678E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_Base_contact3) = 3.34404482314441267E-05 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_Base_contact3) = 1.57079632679489678E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_chao_contact1) = 1.85638905120292824E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_chao_contact1) = -1.10000786937805808E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_chao_contact1) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_chao_contact2) = 3.65290462913072725E-02 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_chao_contact2) = -1.09995510498264976E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_chao_contact2) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_chao_contact3) = 3.34748763949278438E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_chao_contact3) = -1.09994703337674360E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_chao_contact3) = $P_chao ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscosV.$M_Base_contact1) = -1.88495586804791948E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscosV.$M_Base_contact1) = 1.57079632679489678E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscosV.$M_Base_contact2) = -1.88495684506065011E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscosV.$M_Base_contact2) = 1.57079632679489678E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscosV.$M_Base_contact3) = 3.33349755653011053E-05 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscosV.$M_Base_contact3) = 1.57079632679489678E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscosV.$M_chao_contact1) = -2.54361094879707206E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscosV.$M_chao_contact1) = -2.50000321115530610E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente1.$S_DiscosV.$M_chao_contact1) = $P_chao   ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscosV.$M_chao_contact2) = -3.79613376296055072E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscosV.$M_chao_contact2) = -2.50001458269336563E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente1.$S_DiscosV.$M_chao_contact2) = $P_chao   ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscosV.$M_chao_contact3) = -1.29108813463359368E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscosV.$M_chao_contact3) = -2.49996120112555315E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente1.$S_DiscosV.$M_chao_contact3) = $P_chao   ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoD1.$M_Base_contact1) = -6.28318633416198491E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoD1.$M_Base_contact1) = 1.57079632679489678E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoD1.$M_Base_contact2) = -6.28319286791578691E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoD1.$M_Base_contact2) = 1.57079632679489678E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoD1.$M_Base_contact3) = 1.77582993025713120E-05 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoD1.$M_Base_contact3) = 1.57079632679489678E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoD1.$M_chao_contact1) = 4.46638905120292917E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoD1.$M_chao_contact1) = -2.85000130828200970E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoD1.$M_chao_contact2) = 2.83896144912657244E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoD1.$M_chao_contact2) = -2.85000963168908217E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoD1.$M_chao_contact3) = 6.09381665327928590E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoD1.$M_chao_contact3) = -2.84997737754460634E-01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoD2.$M_Base_contact1) = -6.28318531260904667E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoD2.$M_Base_contact1) = 1.57079632679489678E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoD2.$M_Base_contact2) = -6.28319452772949116E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoD2.$M_Base_contact2) = 1.57079632679489678E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoD2.$M_Base_contact3) = 2.50081718248799385E-05 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoD2.$M_Base_contact3) = 1.57079632679489678E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoD2.$M_chao_contact1) = 4.21638905120292895E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoD2.$M_chao_contact1) = -2.15000000691663695E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoD2.$M_chao_contact2) = 2.58896144912657222E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoD2.$M_chao_contact2) = -2.15001174614051993E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoD2.$M_chao_contact3) = 5.84381665327928568E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoD2.$M_chao_contact3) = -2.14996814186754398E-01 ! Algebraic states


joint.st.pos (            1 ,       $S_LinhaSemente2.$J_Estrutura ) = 1.83964055558253118E-17 ! Position
joint.st.pos (            2 ,       $S_LinhaSemente2.$J_Estrutura ) = 8.24037331703758080E-17 ! Position
joint.st.pos (            3 ,       $S_LinhaSemente2.$J_Estrutura ) = -1.57652095033409529E-18 ! Position
joint.st.pos (            4 ,       $S_LinhaSemente2.$J_Estrutura ) = 3.60638905120292674E-01 ! Position
joint.st.pos (            5 ,       $S_LinhaSemente2.$J_Estrutura ) = 2.50000000000000000E-01 ! Position
joint.st.pos (            6 ,       $S_LinhaSemente2.$J_Estrutura ) = 5.28390889286347698E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente2.$J_Estrutura ) = 4.04958908073333163E-72 ! Velocity
joint.st.vel (            2 ,       $S_LinhaSemente2.$J_Estrutura ) = -2.44285677311705123E-71 ! Velocity
joint.st.vel (            3 ,       $S_LinhaSemente2.$J_Estrutura ) = -9.62078134170101358E-73 ! Velocity
joint.st.vel (            4 ,       $S_LinhaSemente2.$J_Estrutura ) = 7.12445416791283647E-56 ! Velocity
joint.st.vel (            5 ,       $S_LinhaSemente2.$J_Estrutura ) = 1.27221471266651757E-71 ! Velocity
joint.st.vel (            6 ,       $S_LinhaSemente2.$J_Estrutura ) = 4.99342088523703731E-71 ! Velocity


prim.transparency (                 $S_LinhaSemente2.$P_chao      ) = 1.00000000000000000E+00 ! Transparency


joint.from (                        $S_LinhaSemente2.$J_connector ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_BarraCima.$M_Body1_contact) = -5.16244773342849683E-01 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente2.$S_BarraCima.$J_Body1) = -2.70526034059125509E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente2.$S_BarraCima.$J_Body1) = 2.52758722165764473E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_BarraBaixo.$M_Body1_contact) = 3.97756818462262896E+00 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente2.$S_BarraBaixo.$J_Body1) = -2.70526034059125842E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente2.$S_BarraBaixo.$J_Body1) = 2.02851146853416883E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_Base_contact1) = 4.30773396517656119E-06 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_Base_contact1) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_Base_contact2) = -2.86275545936359710E-05 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_Base_contact2) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_Base_contact3) = -2.53801015704995198E-05 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_Base_contact3) = 1.57079632679489656E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_chao_contact1) = 1.85638905120292574E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_chao_contact1) = 1.10000682305813544E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_chao_contact1) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_chao_contact2) = 3.65290462913070227E-02 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_chao_contact2) = 1.09995465656174768E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_chao_contact2) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_chao_contact3) = 3.34748763949278105E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_chao_contact3) = 1.09995980023145534E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_chao_contact3) = $P_chao ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_Base_contact1) = 9.42477073865152981E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_Base_contact1) = 4.71238898038468967E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_Base_contact2) = 2.51327064171231100E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_Base_contact2) = 7.85398163397448279E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_Base_contact3) = -2.82112153252039103E-05 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_Base_contact3) = 1.57079632679489656E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_chao_contact1) = 1.85638905120292574E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_chao_contact1) = 3.90001143917668602E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_chao_contact1) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_chao_contact2) = 3.65290462913070227E-02 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_chao_contact2) = 3.89994486160483100E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_chao_contact2) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_chao_contact3) = 3.34748763949278105E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_chao_contact3) = 3.89995531600521583E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_chao_contact3) = $P_chao ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscosV.$M_Base_contact1) = 6.28319531599695047E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscosV.$M_Base_contact1) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscosV.$M_Base_contact2) = 6.28318183767722171E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscosV.$M_Base_contact2) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscosV.$M_Base_contact3) = -1.40722991556568947E-05 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscosV.$M_Base_contact3) = 1.57079632679489656E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscosV.$M_chao_contact1) = -2.54361094879707483E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscosV.$M_chao_contact1) = 2.50001164935153508E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente2.$S_DiscosV.$M_chao_contact1) = $P_chao   ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscosV.$M_chao_contact2) = -3.79613376296055349E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscosV.$M_chao_contact2) = 2.49999596181534389E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente2.$S_DiscosV.$M_chao_contact2) = $P_chao   ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscosV.$M_chao_contact3) = -1.29108813463359617E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscosV.$M_chao_contact3) = 2.49998362112587441E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente2.$S_DiscosV.$M_chao_contact3) = $P_chao   ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoD1.$M_Base_contact1) = -6.28318527430730267E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoD1.$M_Base_contact1) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoD1.$M_Base_contact2) = -6.28318260374532844E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoD1.$M_Base_contact2) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoD1.$M_Base_contact3) = -1.08581558054326392E-05 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoD1.$M_Base_contact3) = 1.57079632679489656E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoD1.$M_chao_contact1) = 4.46638905120292640E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoD1.$M_chao_contact1) = 2.15000004187629490E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoD1.$M_chao_contact2) = 2.83896144912656967E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoD1.$M_chao_contact2) = 2.15000344392894310E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoD1.$M_chao_contact3) = 6.09381665327928257E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoD1.$M_chao_contact3) = 2.14998616769876166E-01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoD2.$M_Base_contact1) = -6.28318527358561063E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoD2.$M_Base_contact1) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoD2.$M_Base_contact2) = -6.28318481309198251E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoD2.$M_Base_contact2) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoD2.$M_Base_contact3) = -1.08026430649015142E-05 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoD2.$M_Base_contact3) = 1.57079632679489656E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoD2.$M_chao_contact1) = 4.21638905120292617E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoD2.$M_chao_contact1) = 2.85000004279566566E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoD2.$M_chao_contact2) = 2.58896144912656945E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoD2.$M_chao_contact2) = 2.85000062942259214E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoD2.$M_chao_contact3) = 5.84381665327928346E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoD2.$M_chao_contact3) = 2.84998623841693610E-01 ! Algebraic states


joint.st.pos (            1 ,       $S_LinhaSemente3.$J_Estrutura ) = 7.59249557018462976E-18 ! Position
joint.st.pos (            2 ,       $S_LinhaSemente3.$J_Estrutura ) = -2.52972498670465358E-16 ! Position
joint.st.pos (            3 ,       $S_LinhaSemente3.$J_Estrutura ) = 4.26987824907421754E-20 ! Position
joint.st.pos (            4 ,       $S_LinhaSemente3.$J_Estrutura ) = 3.60638905120292674E-01 ! Position
joint.st.pos (            5 ,       $S_LinhaSemente3.$J_Estrutura ) = -7.49999999999999889E-01 ! Position
joint.st.pos (            6 ,       $S_LinhaSemente3.$J_Estrutura ) = 5.28390889286347254E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente3.$J_Estrutura ) = 6.68141596501443779E-72 ! Velocity
joint.st.vel (            2 ,       $S_LinhaSemente3.$J_Estrutura ) = 4.88571354623410246E-71 ! Velocity
joint.st.vel (            3 ,       $S_LinhaSemente3.$J_Estrutura ) = 2.91650755769595322E-72 ! Velocity
joint.st.vel (            4 ,       $S_LinhaSemente3.$J_Estrutura ) = 7.12445416791283828E-56 ! Velocity
joint.st.vel (            5 ,       $S_LinhaSemente3.$J_Estrutura ) = 5.07694914604072040E-71 ! Velocity
joint.st.vel (            6 ,       $S_LinhaSemente3.$J_Estrutura ) = 1.40496252642752595E-70 ! Velocity


prim.transparency (                 $S_LinhaSemente3.$P_chao      ) = 1.00000000000000000E+00 ! Transparency


joint.from (                        $S_LinhaSemente3.$J_connector ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_BarraCima.$M_Body1_contact) = -5.16244773342849683E-01 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente3.$S_BarraCima.$J_Body1) = -2.70526034059125509E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente3.$S_BarraCima.$J_Body1) = 2.52758722165764473E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_BarraBaixo.$M_Body1_contact) = 3.97756818462262896E+00 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente3.$S_BarraBaixo.$J_Body1) = -2.70526034059126008E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente3.$S_BarraBaixo.$J_Body1) = 2.01068433614268805E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_Base_contact1) = -4.71238905310455749E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_Base_contact1) = 1.72787595947438639E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_Base_contact2) = -6.91150223915104363E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_Base_contact2) = 2.67035375555132433E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_Base_contact3) = 9.73894034368418602E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_Base_contact3) = -3.92699081698724157E+01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_chao_contact1) = 1.85638905120292685E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_chao_contact1) = -8.89999884818355236E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_chao_contact1) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_chao_contact2) = 3.65290462913071545E-02 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_chao_contact2) = -8.89997467731200365E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_chao_contact2) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_chao_contact3) = 3.34748763949278272E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_chao_contact3) = -8.90004937924392170E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_chao_contact3) = $P_chao ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_Base_contact1) = -3.45575199722315318E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_Base_contact1) = 1.09955742875642759E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_Base_contact2) = -5.02654626951525429E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_Base_contact2) = 1.41371669411540690E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_Base_contact3) = 2.01061939400022055E+02 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_Base_contact3) = -3.61283155162826191E+01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_chao_contact1) = 1.85638905120292713E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_chao_contact1) = -6.09999876020511977E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_chao_contact1) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_chao_contact2) = 3.65290462913071337E-02 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_chao_contact2) = -6.09996869834240396E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_chao_contact2) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_chao_contact3) = 3.34748763949278216E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_chao_contact3) = -6.09998484155586995E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_chao_contact3) = $P_chao ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscosV.$M_Base_contact1) = -3.76991110326015431E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscosV.$M_Base_contact1) = 7.85398163397448368E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscosV.$M_Base_contact2) = -2.82743362415763073E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscosV.$M_Base_contact2) = 1.09955742875642759E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscosV.$M_Base_contact3) = 6.28318552978189757E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscosV.$M_Base_contact3) = -2.98451302091030364E+01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscosV.$M_chao_contact1) = -2.54361094879707317E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscosV.$M_chao_contact1) = -7.49999905667980249E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente3.$S_DiscosV.$M_chao_contact1) = $P_chao   ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscosV.$M_chao_contact2) = -3.79613376296055183E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscosV.$M_chao_contact2) = -7.49999725402679895E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente3.$S_DiscosV.$M_chao_contact2) = $P_chao   ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscosV.$M_chao_contact3) = -1.29108813463359479E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscosV.$M_chao_contact3) = -7.49999740911190815E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente3.$S_DiscosV.$M_chao_contact3) = $P_chao   ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoD1.$M_Base_contact1) = -6.28318447447749939E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoD1.$M_Base_contact1) = 1.57079632679489678E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoD1.$M_Base_contact2) = -6.28321319087352759E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoD1.$M_Base_contact2) = 1.57079632679489678E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoD1.$M_Base_contact3) = 3.15307825808366319E-06 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoD1.$M_Base_contact3) = 1.57079632679489678E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoD1.$M_chao_contact1) = 4.46638905120292751E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoD1.$M_chao_contact1) = -7.84999893921340619E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoD1.$M_chao_contact2) = 2.83896144912657078E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoD1.$M_chao_contact2) = -7.85003552128564541E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoD1.$M_chao_contact3) = 6.09381665327928479E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoD1.$M_chao_contact3) = -7.84999598326556747E-01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoD2.$M_Base_contact1) = -6.28318448002102947E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoD2.$M_Base_contact1) = 1.57079632679489678E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoD2.$M_Base_contact2) = -6.28320418682072823E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoD2.$M_Base_contact2) = 1.57079632679489678E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoD2.$M_Base_contact3) = 3.13643485844265579E-06 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoD2.$M_Base_contact3) = 1.57079632679489678E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoD2.$M_chao_contact1) = 4.21638905120292729E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoD2.$M_chao_contact1) = -7.14999894627535770E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoD2.$M_chao_contact2) = 2.58896144912657056E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoD2.$M_chao_contact2) = -7.15002405094273152E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoD2.$M_chao_contact3) = 5.84381665327928457E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoD2.$M_chao_contact3) = -7.14999600446774131E-01 ! Algebraic states


joint.st.pos (            1 ,       $S_LinhaSemente4.$J_Estrutura ) = 1.41185788497128617E-17 ! Position
joint.st.pos (            2 ,       $S_LinhaSemente4.$J_Estrutura ) = 1.20138015361154109E-16 ! Position
joint.st.pos (            3 ,       $S_LinhaSemente4.$J_Estrutura ) = -2.02834314873524245E-18 ! Position
joint.st.pos (            4 ,       $S_LinhaSemente4.$J_Estrutura ) = 3.60638905120292785E-01 ! Position
joint.st.pos (            5 ,       $S_LinhaSemente4.$J_Estrutura ) = 7.50000000000000000E-01 ! Position
joint.st.pos (            6 ,       $S_LinhaSemente4.$J_Estrutura ) = 5.28390889286347920E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente4.$J_Estrutura ) = 2.69878704703813282E-73 ! Velocity
joint.st.vel (            2 ,       $S_LinhaSemente4.$J_Estrutura ) = 9.77142709246820815E-71 ! Velocity
joint.st.vel (            3 ,       $S_LinhaSemente4.$J_Estrutura ) = 6.14218977303972592E-73 ! Velocity
joint.st.vel (            4 ,       $S_LinhaSemente4.$J_Estrutura ) = 7.12445416791283103E-56 ! Velocity
joint.st.vel (            5 ,       $S_LinhaSemente4.$J_Estrutura ) = 1.01464696356480952E-72 ! Velocity
joint.st.vel (            6 ,       $S_LinhaSemente4.$J_Estrutura ) = 2.16894757250907299E-70 ! Velocity


prim.transparency (                 $S_LinhaSemente4.$P_chao      ) = 1.00000000000000000E+00 ! Transparency


joint.from (                        $S_LinhaSemente4.$J_connector ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_BarraCima.$M_Body1_contact) = -5.16244773342849683E-01 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente4.$S_BarraCima.$J_Body1) = -2.70526034059125509E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente4.$S_BarraCima.$J_Body1) = 2.52758722165764473E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_BarraBaixo.$M_Body1_contact) = 3.97756818462262896E+00 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente4.$S_BarraBaixo.$J_Body1) = -2.70526034059125342E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente4.$S_BarraBaixo.$J_Body1) = 3.51328611188939574E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_Base_contact1) = 2.19911496631488355E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_Base_contact1) = 1.09955742875642759E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_Base_contact2) = 3.76990660678551421E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_Base_contact2) = 1.41371669411540690E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_Base_contact3) = 2.04203533158297972E+02 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_Base_contact3) = 3.61283155162826191E+01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_chao_contact1) = 1.85638905120292713E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_chao_contact1) = 6.09999827667500050E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_chao_contact1) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_chao_contact2) = 3.65290462913071337E-02 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_chao_contact2) = 6.09992749621842356E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_chao_contact2) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_chao_contact3) = 3.34748763949278216E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_chao_contact3) = 6.09998309183371057E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_chao_contact3) = $P_chao ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_Base_contact1) = 3.45575202830518435E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_Base_contact1) = 1.72787595947438639E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_Base_contact2) = 5.65486873326085941E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_Base_contact2) = 2.67035375555132433E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_Base_contact3) = 1.00530984610541338E+02 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_Base_contact3) = 3.92699081698724157E+01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_chao_contact1) = 1.85638905120292685E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_chao_contact1) = 8.89999826789406923E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_chao_contact1) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_chao_contact2) = 3.65290462913071545E-02 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_chao_contact2) = 8.90003099391702190E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_chao_contact2) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_chao_contact3) = 3.34748763949278272E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_chao_contact3) = 8.90003119614361626E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_chao_contact3) = $P_chao ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscosV.$M_Base_contact1) = 2.51327400740846443E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscosV.$M_Base_contact1) = 7.85398163397448279E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscosV.$M_Base_contact2) = 1.57079564732739989E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscosV.$M_Base_contact2) = 1.09955742875642759E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscosV.$M_Base_contact3) = 6.28318581678036523E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscosV.$M_Base_contact3) = 3.29867228626928295E+01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscosV.$M_chao_contact1) = -2.54361094879707372E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscosV.$M_chao_contact1) = 7.49999865611156724E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente4.$S_DiscosV.$M_chao_contact1) = $P_chao   ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscosV.$M_chao_contact2) = -3.79613376296055238E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscosV.$M_chao_contact2) = 7.50000790838261877E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente4.$S_DiscosV.$M_chao_contact2) = $P_chao   ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscosV.$M_chao_contact3) = -1.29108813463359506E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscosV.$M_chao_contact3) = 7.50000593128878235E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente4.$S_DiscosV.$M_chao_contact3) = $P_chao   ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoD1.$M_Base_contact1) = -6.28318646739402542E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoD1.$M_Base_contact1) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoD1.$M_Base_contact2) = -6.28319395040381856E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoD1.$M_Base_contact2) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoD1.$M_Base_contact3) = -4.30218512579308903E-06 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoD1.$M_Base_contact3) = 1.57079632679489656E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoD1.$M_chao_contact1) = 4.46638905120292751E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoD1.$M_chao_contact1) = 7.14999852199250774E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoD1.$M_chao_contact2) = 2.83896144912657078E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoD1.$M_chao_contact2) = 7.14998898931978988E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoD1.$M_chao_contact3) = 6.09381665327928479E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoD1.$M_chao_contact3) = 7.14999451940810937E-01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoD2.$M_Base_contact1) = -6.28318645628840411E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoD2.$M_Base_contact1) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoD2.$M_Base_contact2) = -6.28319284015945367E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoD2.$M_Base_contact2) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoD2.$M_Base_contact3) = -4.26332980742547538E-06 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoD2.$M_Base_contact3) = 1.57079632679489656E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoD2.$M_chao_contact1) = 4.21638905120292729E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoD2.$M_chao_contact1) = 7.84999853614005816E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoD2.$M_chao_contact2) = 2.58896144912657056E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoD2.$M_chao_contact2) = 7.84999040366995859E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoD2.$M_chao_contact3) = 5.84381665327928457E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoD2.$M_chao_contact3) = 7.84999456890624447E-01 ! Algebraic states


joint.st.pos (            1 ,       $S_LinhaSemente5.$J_Estrutura ) = -6.47670402742848101E-18 ! Position
joint.st.pos (            2 ,       $S_LinhaSemente5.$J_Estrutura ) = -4.07857902991779074E-17 ! Position
joint.st.pos (            3 ,       $S_LinhaSemente5.$J_Estrutura ) = -8.41393184513193271E-19 ! Position
joint.st.pos (            4 ,       $S_LinhaSemente5.$J_Estrutura ) = 3.60638905120292785E-01 ! Position
joint.st.pos (            5 ,       $S_LinhaSemente5.$J_Estrutura ) = -1.25000000000000000E+00 ! Position
joint.st.pos (            6 ,       $S_LinhaSemente5.$J_Estrutura ) = 5.28390889286347698E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente5.$J_Estrutura ) = -2.55306355665555240E-72 ! Velocity
joint.st.vel (            2 ,       $S_LinhaSemente5.$J_Estrutura ) = -1.03821412857474731E-70 ! Velocity
joint.st.vel (            3 ,       $S_LinhaSemente5.$J_Estrutura ) = -6.36038040390894197E-72 ! Velocity
joint.st.vel (            4 ,       $S_LinhaSemente5.$J_Estrutura ) = 7.12445416791284099E-56 ! Velocity
joint.st.vel (            5 ,       $S_LinhaSemente5.$J_Estrutura ) = 3.82503456034979870E-72 ! Velocity
joint.st.vel (            6 ,       $S_LinhaSemente5.$J_Estrutura ) = -9.48522334665268923E-72 ! Velocity


prim.transparency (                 $S_LinhaSemente5.$P_chao      ) = 1.00000000000000000E+00 ! Transparency


joint.from (                        $S_LinhaSemente5.$J_connector ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_BarraCima.$M_Body1_contact) = -5.16244773342849683E-01 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente5.$S_BarraCima.$J_Body1) = -2.70526034059125509E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente5.$S_BarraCima.$J_Body1) = 2.52758722165764473E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_BarraBaixo.$M_Body1_contact) = 3.97756818462262896E+00 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente5.$S_BarraBaixo.$J_Body1) = -2.70526034059125564E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente5.$S_BarraBaixo.$J_Body1) = 1.78353194692914021E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_Base_contact1) = -7.22566310300303769E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_Base_contact1) = 4.24115008234622053E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_Base_contact2) = -1.03672542191630058E+02 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_Base_contact2) = 6.75442420521805502E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_Base_contact3) = 6.91150567701120906E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_Base_contact3) = -3.61283155162826191E+01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_chao_contact1) = 1.85638905120292741E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_chao_contact1) = -1.39000000040149940E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_chao_contact1) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_chao_contact2) = 3.65290462913071615E-02 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_chao_contact2) = -1.39000243555027270E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_chao_contact2) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_chao_contact3) = 3.34748763949278272E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_chao_contact3) = -1.38999708701151570E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_chao_contact3) = $P_chao ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_Base_contact1) = -5.96902604157415908E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_Base_contact1) = 2.35619449019234501E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_Base_contact2) = -8.48229835055920631E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_Base_contact2) = 4.24115008234622053E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_Base_contact3) = 6.91150568200737609E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_Base_contact3) = -3.61283155162826191E+01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_chao_contact1) = 1.85638905120292741E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_chao_contact1) = -1.11000000039035163E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_chao_contact1) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_chao_contact2) = 3.65290462913071684E-02 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_chao_contact2) = -1.11000287342176307E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_chao_contact2) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_chao_contact3) = 3.34748763949278272E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_chao_contact3) = -1.10999707909803869E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_chao_contact3) = $P_chao ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscosV.$M_Base_contact1) = -5.65486677671446714E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscosV.$M_Base_contact1) = 3.29867228626928295E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscosV.$M_Base_contact2) = -4.39822969503625032E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscosV.$M_Base_contact2) = 2.67035375555132433E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscosV.$M_Base_contact3) = 4.39822969114827274E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscosV.$M_Base_contact3) = -2.98451302091030364E+01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscosV.$M_chao_contact1) = -2.54361094879707317E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscosV.$M_chao_contact1) = -1.25000000029428215E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente5.$S_DiscosV.$M_chao_contact1) = $P_chao   ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscosV.$M_chao_contact2) = -3.79613376296055183E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscosV.$M_chao_contact2) = -1.24999997673408902E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente5.$S_DiscosV.$M_chao_contact2) = $P_chao   ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscosV.$M_chao_contact3) = -1.29108813463359451E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscosV.$M_chao_contact3) = -1.25000002779116204E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente5.$S_DiscosV.$M_chao_contact3) = $P_chao   ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoD1.$M_Base_contact1) = -6.28318531335442021E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoD1.$M_Base_contact1) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoD1.$M_Base_contact2) = -6.28320105594196487E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoD1.$M_Base_contact2) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoD1.$M_Base_contact3) = 2.85831460739753039E-05 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoD1.$M_Base_contact3) = 1.57079632679489656E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoD1.$M_chao_contact1) = 4.46638905120292806E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoD1.$M_chao_contact1) = -1.28500000078661736E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoD1.$M_chao_contact2) = 2.83896144912657133E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoD1.$M_chao_contact2) = -1.28500200624884342E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoD1.$M_chao_contact3) = 6.09381665327928479E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoD1.$M_chao_contact3) = -1.28499635876760698E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoD2.$M_Base_contact1) = -6.28318530917960771E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoD2.$M_Base_contact1) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoD2.$M_Base_contact2) = -6.28320425898803148E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoD2.$M_Base_contact2) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoD2.$M_Base_contact3) = 2.85831460876440915E-05 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoD2.$M_Base_contact3) = 1.57079632679489656E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoD2.$M_chao_contact1) = 4.21638905120292784E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoD2.$M_chao_contact1) = -1.21500000025478450E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoD2.$M_chao_contact2) = 2.58896144912657111E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoD2.$M_chao_contact2) = -1.21500241428773048E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoD2.$M_chao_contact3) = 5.84381665327928457E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoD2.$M_chao_contact3) = -1.21499635876760514E+00 ! Algebraic states


joint.st.pos (            1 ,       $S_LinhaSemente6.$J_Estrutura ) = 1.58697647940472381E-18 ! Position
joint.st.pos (            2 ,       $S_LinhaSemente6.$J_Estrutura ) = 9.82316498441303931E-16 ! Position
joint.st.pos (            3 ,       $S_LinhaSemente6.$J_Estrutura ) = -8.17277485896551067E-19 ! Position
joint.st.pos (            4 ,       $S_LinhaSemente6.$J_Estrutura ) = 3.60638905120292286E-01 ! Position
joint.st.pos (            5 ,       $S_LinhaSemente6.$J_Estrutura ) = 1.25000000000000000E+00 ! Position
joint.st.pos (            6 ,       $S_LinhaSemente6.$J_Estrutura ) = 5.28390889286348808E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente6.$J_Estrutura ) = 5.76888599304775814E-72 ! Velocity
joint.st.vel (            2 ,       $S_LinhaSemente6.$J_Estrutura ) = 7.93928451263041661E-71 ! Velocity
joint.st.vel (            3 ,       $S_LinhaSemente6.$J_Estrutura ) = 6.18565866689990472E-72 ! Velocity
joint.st.vel (            4 ,       $S_LinhaSemente6.$J_Estrutura ) = 7.12445416791283466E-56 ! Velocity
joint.st.vel (            5 ,       $S_LinhaSemente6.$J_Estrutura ) = -1.01428991648950270E-71 ! Velocity
joint.st.vel (            6 ,       $S_LinhaSemente6.$J_Estrutura ) = 2.00533712572575530E-70 ! Velocity


prim.transparency (                 $S_LinhaSemente6.$P_chao      ) = 1.00000000000000000E+00 ! Transparency


joint.from (                        $S_LinhaSemente6.$J_connector ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_BarraCima.$M_Body1_contact) = -5.16244773342849683E-01 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente6.$S_BarraCima.$J_Body1) = -2.70526034059125065E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente6.$S_BarraCima.$J_Body1) = 1.72045646744132728E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_BarraBaixo.$M_Body1_contact) = 3.97756818462262896E+00 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente6.$S_BarraBaixo.$J_Body1) = -2.70526034059125065E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente6.$S_BarraBaixo.$J_Body1) = 2.97688570944246008E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_Base_contact1) = 4.71238898429113675E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_Base_contact1) = 2.35619449019234466E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_Base_contact2) = 7.22566546029747911E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_Base_contact2) = 4.24115008234622053E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_Base_contact3) = 6.59734715606864768E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_Base_contact3) = 3.61283155162826191E+01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_chao_contact1) = 1.85638905120291881E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_chao_contact1) = 1.10999999381254355E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_chao_contact1) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_chao_contact2) = 3.65290462913063288E-02 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_chao_contact2) = 1.10999626666187434E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_chao_contact2) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_chao_contact3) = 3.34748763949277439E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_chao_contact3) = 1.10999590792373048E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_chao_contact3) = $P_chao ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_Base_contact1) = 5.96902604570739683E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_Base_contact1) = 4.24115008234622053E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_Base_contact2) = 9.11062068052061989E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_Base_contact2) = 6.75442420521805502E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_Base_contact3) = 5.02655036297263607E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_Base_contact3) = 3.92699081698724157E+01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_chao_contact1) = 1.85638905120291881E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_chao_contact1) = 1.38999999384367912E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_chao_contact1) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_chao_contact2) = 3.65290462913063149E-02 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_chao_contact2) = 1.38999685576627074E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_chao_contact2) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_chao_contact3) = 3.34748763949277495E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_chao_contact3) = 1.39000335349778648E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_chao_contact3) = $P_chao ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscosV.$M_Base_contact1) = 4.39822971053185086E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscosV.$M_Base_contact1) = 3.29867228626928295E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscosV.$M_Base_contact2) = 3.14159253423735407E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscosV.$M_Base_contact2) = 2.67035375555132433E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscosV.$M_Base_contact3) = 4.08407043800965681E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscosV.$M_Base_contact3) = 2.98451302091030364E+01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscosV.$M_chao_contact1) = -2.54361094879708205E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscosV.$M_chao_contact1) = 1.24999999476955703E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente6.$S_DiscosV.$M_chao_contact1) = $P_chao   ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscosV.$M_chao_contact2) = -3.79613376296056071E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscosV.$M_chao_contact2) = 1.24999986108463457E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente6.$S_DiscosV.$M_chao_contact2) = $P_chao   ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscosV.$M_chao_contact3) = -1.29108813463360339E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscosV.$M_chao_contact3) = 1.25000001356777268E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente6.$S_DiscosV.$M_chao_contact3) = $P_chao   ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoD1.$M_Base_contact1) = -6.28318534609887003E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoD1.$M_Base_contact1) = 1.57079632679489567E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoD1.$M_Base_contact2) = -6.28319589332473694E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoD1.$M_Base_contact2) = 1.57079632679489567E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoD1.$M_Base_contact3) = 2.21437491636127013E-05 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoD1.$M_Base_contact3) = 1.57079632679489567E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoD1.$M_chao_contact1) = 4.46638905120291918E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoD1.$M_chao_contact1) = 1.21499999504203804E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoD1.$M_chao_contact2) = 2.83896144912656245E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoD1.$M_chao_contact2) = 1.21499865142155539E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoD1.$M_chao_contact3) = 6.09381665327927591E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoD1.$M_chao_contact3) = 1.21500282091189615E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoD2.$M_Base_contact1) = -6.28318535174986259E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoD2.$M_Base_contact1) = 1.57079632679489567E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoD2.$M_Base_contact2) = -6.28319327315477594E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoD2.$M_Base_contact2) = 1.57079632679489567E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoD2.$M_Base_contact3) = 2.21437492647703632E-05 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoD2.$M_Base_contact3) = 1.57079632679489567E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoD2.$M_chao_contact1) = 4.21638905120291896E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoD2.$M_chao_contact1) = 1.28499999432215262E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoD2.$M_chao_contact2) = 2.58896144912656223E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoD2.$M_chao_contact2) = 1.28499898520733646E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoD2.$M_chao_contact3) = 5.84381665327927569E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoD2.$M_chao_contact3) = 1.28500282091190909E+00 ! Algebraic states


subvar.str (                        $S_disco5.$_b                 ) = '0.01'                  ! Definition

subvar.str (                        $S_disco5.$_d                 ) = '0.511'                 ! Definition

subvar.str (                        $S_disco5.$_A                 ) = '0.001'                 ! Definition

joint.from (                        $S_disco5.$J_Base             ) = $M_Boogie_Disco5        ! From Marker
joint.type (                        $S_disco5.$J_Base             ) = 2                       ! Type


prim.pos (                2 ,       $S_disco5.$P_Roda1_pneu       ) = 4.49999999999999983E-02 ! Position
prim.ang (                3 ,       $S_disco5.$P_Roda1_pneu       ) = { 90 deg }              ! Angles
prim.mp.dens.solid (                $S_disco5.$P_Roda1_pneu       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $S_disco5.$P_Roda1_pneu       ) = './pecas_stl/disco_de_corte_stl/discos.stl' ! [-] CAD file name

prim.type (                         $S_disco5.$P_Roda1_aro        ) = 2                       ! Type
prim.ang (                1 ,       $S_disco5.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Angles
prim.ang (                2 ,       $S_disco5.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            2 ,       $S_disco5.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            2 ,       $S_disco5.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            2 ,       $S_disco5.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            2 ,       $S_disco5.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $S_disco5.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! Transparency
prim.par (                2 ,       $S_disco5.$P_Roda1_aro        ) = $S_disco5.$_b           ! [m] Height
prim.par (                3 ,       $S_disco5.$P_Roda1_aro        ) = $S_disco5.$_d           ! [m] Outer diameter
prim.par (                4 ,       $S_disco5.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [m] Inner diameter
prim.par (                5 ,       $S_disco5.$P_Roda1_aro        ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $S_disco5.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $S_disco5.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $S_disco5.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $S_disco5.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [rad] Start angle
prim.par (               10 ,       $S_disco5.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [rad] Delta angle
prim.par (               11 ,       $S_disco5.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [-] Close geometry with


joint.from (                        $S_disco5.$J_connector        ) = $M_Isys                 ! From Marker


marker.par (              3 ,       $S_disco5.$M_chao_contact1    ) = $P_chao                 ! [-] Contact geometry Primitive

marker.par (              3 ,       $S_disco5.$M_chao_contact2    ) = $P_chao                 ! [-] Contact geometry Primitive

marker.par (              3 ,       $S_disco5.$M_chao_contact3    ) = $P_chao                 ! [-] Contact geometry Primitive

prim.transparency (                 $S_disco5.$P_chao             ) = 1.00000000000000000E+00 ! Transparency


subvar.str (                        $S_disco3.$_b                 ) = '0.01'                  ! Definition

subvar.str (                        $S_disco3.$_d                 ) = '0.511'                 ! Definition

subvar.str (                        $S_disco3.$_A                 ) = '0.001'                 ! Definition

joint.from (                        $S_disco3.$J_Base             ) = $M_Boogie_Disco3        ! From Marker
joint.type (                        $S_disco3.$J_Base             ) = 2                       ! Type


prim.pos (                2 ,       $S_disco3.$P_Roda1_pneu       ) = 4.49999999999999983E-02 ! Position
prim.ang (                3 ,       $S_disco3.$P_Roda1_pneu       ) = { 90 deg }              ! Angles
prim.mp.dens.solid (                $S_disco3.$P_Roda1_pneu       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $S_disco3.$P_Roda1_pneu       ) = './pecas_stl/disco_de_corte_stl/discos.stl' ! [-] CAD file name

prim.type (                         $S_disco3.$P_Roda1_aro        ) = 2                       ! Type
prim.ang (                1 ,       $S_disco3.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Angles
prim.ang (                2 ,       $S_disco3.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            2 ,       $S_disco3.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            2 ,       $S_disco3.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            2 ,       $S_disco3.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            2 ,       $S_disco3.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $S_disco3.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! Transparency
prim.par (                2 ,       $S_disco3.$P_Roda1_aro        ) = $S_disco3.$_b           ! [m] Height
prim.par (                3 ,       $S_disco3.$P_Roda1_aro        ) = $S_disco3.$_d           ! [m] Outer diameter
prim.par (                4 ,       $S_disco3.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [m] Inner diameter
prim.par (                5 ,       $S_disco3.$P_Roda1_aro        ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $S_disco3.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $S_disco3.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $S_disco3.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $S_disco3.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [rad] Start angle


joint.from (                        $S_disco3.$J_connector        ) = $M_Isys                 ! From Marker


marker.par (              3 ,       $S_disco3.$M_chao_contact1    ) = $P_chao                 ! [-] Contact geometry Primitive

marker.par (              3 ,       $S_disco3.$M_chao_contact2    ) = $P_chao                 ! [-] Contact geometry Primitive

marker.par (              3 ,       $S_disco3.$M_chao_contact3    ) = $P_chao                 ! [-] Contact geometry Primitive

prim.transparency (                 $S_disco3.$P_chao             ) = 1.00000000000000000E+00 ! Transparency


subvar.str (                        $S_disco1.$_b                 ) = '0.01'                  ! Definition

subvar.str (                        $S_disco1.$_d                 ) = '0.511'                 ! Definition

subvar.str (                        $S_disco1.$_A                 ) = '0.001'                 ! Definition

joint.from (                        $S_disco1.$J_Base             ) = $M_Boogie_Disco1        ! From Marker
joint.type (                        $S_disco1.$J_Base             ) = 2                       ! Type


prim.pos (                2 ,       $S_disco1.$P_Roda1_pneu       ) = 4.49999999999999983E-02 ! Position
prim.ang (                3 ,       $S_disco1.$P_Roda1_pneu       ) = { 90 deg }              ! Angles
prim.mp.dens.solid (                $S_disco1.$P_Roda1_pneu       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $S_disco1.$P_Roda1_pneu       ) = './pecas_stl/disco_de_corte_stl/discos.stl' ! [-] CAD file name

prim.type (                         $S_disco1.$P_Roda1_aro        ) = 2                       ! Type
prim.ang (                1 ,       $S_disco1.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Angles
prim.ang (                2 ,       $S_disco1.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            2 ,       $S_disco1.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            2 ,       $S_disco1.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            2 ,       $S_disco1.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            2 ,       $S_disco1.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $S_disco1.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! Transparency
prim.par (                2 ,       $S_disco1.$P_Roda1_aro        ) = $S_disco1.$_b           ! [m] Height
prim.par (                3 ,       $S_disco1.$P_Roda1_aro        ) = $S_disco1.$_d           ! [m] Outer diameter
prim.par (                4 ,       $S_disco1.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [m] Inner diameter
prim.par (                5 ,       $S_disco1.$P_Roda1_aro        ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $S_disco1.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $S_disco1.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $S_disco1.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $S_disco1.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [rad] Start angle


joint.from (                        $S_disco1.$J_connector        ) = $M_Isys                 ! From Marker


marker.par (              3 ,       $S_disco1.$M_chao_contact1    ) = $P_chao                 ! [-] Contact geometry Primitive

marker.par (              3 ,       $S_disco1.$M_chao_contact2    ) = $P_chao                 ! [-] Contact geometry Primitive

marker.par (              3 ,       $S_disco1.$M_chao_contact3    ) = $P_chao                 ! [-] Contact geometry Primitive

prim.transparency (                 $S_disco1.$P_chao             ) = 1.00000000000000000E+00 ! Transparency


subvar.str (                        $S_disco2.$_b                 ) = '0.01'                  ! Definition

subvar.str (                        $S_disco2.$_d                 ) = '0.511'                 ! Definition

subvar.str (                        $S_disco2.$_A                 ) = '0.001'                 ! Definition

joint.from (                        $S_disco2.$J_Base             ) = $M_Boogie_Disco2        ! From Marker
joint.type (                        $S_disco2.$J_Base             ) = 2                       ! Type


prim.pos (                2 ,       $S_disco2.$P_Roda1_pneu       ) = 4.49999999999999983E-02 ! Position
prim.ang (                3 ,       $S_disco2.$P_Roda1_pneu       ) = { 90 deg }              ! Angles
prim.mp.dens.solid (                $S_disco2.$P_Roda1_pneu       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $S_disco2.$P_Roda1_pneu       ) = './pecas_stl/disco_de_corte_stl/discos.stl' ! [-] CAD file name

prim.type (                         $S_disco2.$P_Roda1_aro        ) = 2                       ! Type
prim.ang (                1 ,       $S_disco2.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Angles
prim.ang (                2 ,       $S_disco2.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            2 ,       $S_disco2.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            2 ,       $S_disco2.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            2 ,       $S_disco2.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            2 ,       $S_disco2.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $S_disco2.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! Transparency
prim.par (                2 ,       $S_disco2.$P_Roda1_aro        ) = $S_disco2.$_b           ! [m] Height
prim.par (                3 ,       $S_disco2.$P_Roda1_aro        ) = $S_disco2.$_d           ! [m] Outer diameter
prim.par (                4 ,       $S_disco2.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [m] Inner diameter
prim.par (                5 ,       $S_disco2.$P_Roda1_aro        ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $S_disco2.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $S_disco2.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $S_disco2.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $S_disco2.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [rad] Start angle


joint.from (                        $S_disco2.$J_connector        ) = $M_Isys                 ! From Marker


marker.par (              3 ,       $S_disco2.$M_chao_contact1    ) = $P_chao                 ! [-] Contact geometry Primitive

marker.par (              3 ,       $S_disco2.$M_chao_contact2    ) = $P_chao                 ! [-] Contact geometry Primitive

marker.par (              3 ,       $S_disco2.$M_chao_contact3    ) = $P_chao                 ! [-] Contact geometry Primitive

prim.transparency (                 $S_disco2.$P_chao             ) = 1.00000000000000000E+00 ! Transparency


subvar.str (                        $S_disco4.$_b                 ) = '0.01'                  ! Definition

subvar.str (                        $S_disco4.$_d                 ) = '0.511'                 ! Definition

subvar.str (                        $S_disco4.$_A                 ) = '0.001'                 ! Definition

joint.from (                        $S_disco4.$J_Base             ) = $M_Boogie_Disco4        ! From Marker
joint.type (                        $S_disco4.$J_Base             ) = 2                       ! Type


prim.pos (                2 ,       $S_disco4.$P_Roda1_pneu       ) = 4.49999999999999983E-02 ! Position
prim.ang (                3 ,       $S_disco4.$P_Roda1_pneu       ) = { 90 deg }              ! Angles
prim.mp.dens.solid (                $S_disco4.$P_Roda1_pneu       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $S_disco4.$P_Roda1_pneu       ) = './pecas_stl/disco_de_corte_stl/discos.stl' ! [-] CAD file name

prim.type (                         $S_disco4.$P_Roda1_aro        ) = 2                       ! Type
prim.ang (                1 ,       $S_disco4.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Angles
prim.ang (                2 ,       $S_disco4.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            2 ,       $S_disco4.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            2 ,       $S_disco4.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            2 ,       $S_disco4.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            2 ,       $S_disco4.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $S_disco4.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! Transparency
prim.par (                2 ,       $S_disco4.$P_Roda1_aro        ) = $S_disco4.$_b           ! [m] Height
prim.par (                3 ,       $S_disco4.$P_Roda1_aro        ) = $S_disco4.$_d           ! [m] Outer diameter
prim.par (                4 ,       $S_disco4.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [m] Inner diameter
prim.par (                5 ,       $S_disco4.$P_Roda1_aro        ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $S_disco4.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $S_disco4.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $S_disco4.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $S_disco4.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [rad] Start angle


joint.from (                        $S_disco4.$J_connector        ) = $M_Isys                 ! From Marker


marker.par (              3 ,       $S_disco4.$M_chao_contact1    ) = $P_chao                 ! [-] Contact geometry Primitive

marker.par (              3 ,       $S_disco4.$M_chao_contact2    ) = $P_chao                 ! [-] Contact geometry Primitive

marker.par (              3 ,       $S_disco4.$M_chao_contact3    ) = $P_chao                 ! [-] Contact geometry Primitive

prim.transparency (                 $S_disco4.$P_chao             ) = 1.00000000000000000E+00 ! Transparency


subvar.str (                        $S_disco6.$_b                 ) = '0.01'                  ! Definition

subvar.str (                        $S_disco6.$_d                 ) = '0.511'                 ! Definition

subvar.str (                        $S_disco6.$_A                 ) = '0.001'                 ! Definition

joint.from (                        $S_disco6.$J_Base             ) = $M_Boogie_Disco6        ! From Marker
joint.type (                        $S_disco6.$J_Base             ) = 2                       ! Type


prim.pos (                2 ,       $S_disco6.$P_Roda1_pneu       ) = 4.49999999999999983E-02 ! Position
prim.ang (                3 ,       $S_disco6.$P_Roda1_pneu       ) = { 90 deg }              ! Angles
prim.mp.dens.solid (                $S_disco6.$P_Roda1_pneu       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $S_disco6.$P_Roda1_pneu       ) = './pecas_stl/disco_de_corte_stl/discos.stl' ! [-] CAD file name

prim.type (                         $S_disco6.$P_Roda1_aro        ) = 2                       ! Type
prim.ang (                1 ,       $S_disco6.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Angles
prim.ang (                2 ,       $S_disco6.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            2 ,       $S_disco6.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            2 ,       $S_disco6.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            2 ,       $S_disco6.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            2 ,       $S_disco6.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $S_disco6.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! Transparency
prim.par (                2 ,       $S_disco6.$P_Roda1_aro        ) = $S_disco6.$_b           ! [m] Height
prim.par (                3 ,       $S_disco6.$P_Roda1_aro        ) = $S_disco6.$_d           ! [m] Outer diameter
prim.par (                4 ,       $S_disco6.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [m] Inner diameter
prim.par (                5 ,       $S_disco6.$P_Roda1_aro        ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $S_disco6.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $S_disco6.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $S_disco6.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $S_disco6.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [rad] Start angle


joint.from (                        $S_disco6.$J_connector        ) = $M_Isys                 ! From Marker


marker.par (              3 ,       $S_disco6.$M_chao_contact1    ) = $P_chao                 ! [-] Contact geometry Primitive

marker.par (              3 ,       $S_disco6.$M_chao_contact2    ) = $P_chao                 ! [-] Contact geometry Primitive

marker.par (              3 ,       $S_disco6.$M_chao_contact3    ) = $P_chao                 ! [-] Contact geometry Primitive

prim.transparency (                 $S_disco6.$P_chao             ) = 1.00000000000000000E+00 ! Transparency


model.data.redundancy                                               = 'eJxjYBgFxAJGEsVJNYsc88mxm9rmMJLJZsQjTi3zsZmDz15qm2NglmRoaZaUYmiQnGhgaGyYYppimmaUaGFuZJ6WYmaRBgCwvAjegAMAAAAAAAA=' ! Constraint redundancy data
model.data.dependency                                               = 'eJxjZEAFLEDMSABjA/jUEitGyCx0vbjUIpuDbi4pfFLVsRFwOykY2S5sfHxhR4kfBkodsWHHQKQaBjz8kRp2o+kOExAKOwYC8vjCDl0/OptafhisYUdKWDKgyaPzR1q6Gw073OoMzJIMLc2SUgwNkhMNDI0NU0xTTNOMEi3MjczTUsws0gDtcwnV1AgAAAAAAAA=' ! Solver state dependency data
