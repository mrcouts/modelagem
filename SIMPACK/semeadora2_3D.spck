!file.version=3.7! Removing this line will make the file unreadable

!**********************************************************************
! Simpack Version Information
!**********************************************************************
version.number = 20220002
version.desc   = ''
version.build  = 122

!**********************************************************************
!  Global parameters
!**********************************************************************
searchpath (              1                                       ) = '.'
gravity (                 1                                       ) = 0.00000000000000000E+00 ! Gravity
gravity (                 2                                       ) = 0.00000000000000000E+00 ! Gravity
gravity (                 3                                       ) = -9.81000000000000050E+00 ! Gravity
vehicle.startvel                                                    = 0.00000000000000000E+00 ! Vehicle initial velocity
vehicle.applystartvel                                               = 0                       ! Apply vehicle initial velocity at solver start
glob.compat.flxnodeori                                              = 0                       ! Flexbody Node Orientation Method
glob.compat.afcf                                                    = 0                       ! References Frame for Joint and Force Element Forces and Torques
rw.cont.meth                                                        = 2                       ! MISCPAR_RW_CONTACT_METHOD
rw.linear                                                           = 0                       ! MISCPAR_RW_PROFILE_LINEARIZATION_METHOD
time                                                                = 0.00000000000000000E+00 ! Time
slv.active                                                          = $SLV_SolverSettings     ! Active SolverSettings element
track.active                                                        = null                    ! Active Track element
prop3d.bg.base.color.r                                              = 2.15000000000000000E+02 ! Background color (red component)
prop3d.bg.base.color.g                                              = 2.15000000000000000E+02 ! Background color (green component)
prop3d.bg.base.color.b                                              = 2.15000000000000000E+02 ! Background color (blue component)
prop3d.bg.base.color.t                                              = 0.00000000000000000E+00 ! Background color (transparency component)
prop3d.bg.grad.color.r                                              = 2.55000000000000000E+02 ! Gradient color (red component)
prop3d.bg.grad.color.g                                              = 2.55000000000000000E+02 ! Gradient color (green component)
prop3d.bg.grad.color.b                                              = 2.55000000000000000E+02 ! Gradient color (blue component)
prop3d.bg.grad.color.t                                              = 0.00000000000000000E+00 ! Gradient color (transparency component)
prop3d.bg.gradient                                                  = 1                       ! 0 = constant, 1 = gradient
prop3d.marker.size                                                  = 0.00000000000000000E+00 ! length of Marker axes, if value is zero, use "auto"
prop3d.marker.auto                                                  = 1                       ! 0 = user defined, 1 = auto size determination
prop3d.marker.color.r                                               = 0.00000000000000000E+00 ! Marker color (red component)
prop3d.marker.color.g                                               = 0.00000000000000000E+00 ! Marker color (green component)
prop3d.marker.color.b                                               = 0.00000000000000000E+00 ! Marker color (blue component)
prop3d.marker.color.t                                               = 0.00000000000000000E+00 ! Marker color (transparency component)
prop3d.display                                                      = 1                       ! 1 = shaded,  2 = wireframe, 3 = hidden line
prop3d.bbox                                                         = 0                       ! 0 = exclude all refsys objects, 1 = include all refsys objects
prop2d.joint.visible                                                = 1                       ! Joints visible
prop2d.force.visible                                                = 1                       ! Forces visible
prop2d.constr.visible                                               = 1                       ! Constraints visible
prop2d.sensor.visible                                               = 0                       ! Sensors visible
prop2d.grid.visible                                                 = 0                       ! Show grid
prop2d.grid.hor.start                                               = 0.00000000000000000E+00 ! Horizontal offset
prop2d.grid.hor.step                                                = 1.00000000000000000E+01 ! Horizontal step
prop2d.grid.vert.start                                              = 0.00000000000000000E+00 ! Vertical offset
prop2d.grid.vert.step                                               = 1.00000000000000000E+01 ! Vertical step
prop2d.line.width                                                   = 0                       ! Line width
prop2d.proj.dir                                                     = 2                       ! Projection direction


!**********************************************************************
! Substructures
!**********************************************************************
substr.file (                       $S_esteira1                   ) = 'esteira_3D.spck'       ! Filename
substr.id (                         $S_esteira1                   ) = '1'                     ! Substructure Id

substr.file (                       $S_esteira2                   ) = 'esteira_3D.spck'       ! Filename
substr.id (                         $S_esteira2                   ) = '2'                     ! Substructure Id

substr.file (                       $S_rocker1                    ) = 'Rocker.spck'           ! Filename
substr.id (                         $S_rocker1                    ) = '1'                     ! Substructure Id

substr.file (                       $S_rocker2                    ) = 'Rocker.spck'           ! Filename
substr.id (                         $S_rocker2                    ) = '2'                     ! Substructure Id

substr.file (                       $S_roda1                      ) = 'RODA_3D.spck'          ! Filename
substr.id (                         $S_roda1                      ) = '1'                     ! Substructure Id

substr.file (                       $S_roda2                      ) = 'RODA_3D.spck'          ! Filename
substr.id (                         $S_roda2                      ) = '2'                     ! Substructure Id

substr.file (                       $S_LinhaSemente1              ) = './LinhaDeSemente_3D.spck' ! Filename
substr.id (                         $S_LinhaSemente1              ) = '1'                     ! Substructure Id

substr.file (                       $S_LinhaSemente2              ) = './LinhaDeSemente_3D.spck' ! Filename
substr.id (                         $S_LinhaSemente2              ) = '2'                     ! Substructure Id

substr.file (                       $S_LinhaSemente3              ) = './LinhaDeSemente_3D.spck' ! Filename
substr.id (                         $S_LinhaSemente3              ) = '3'                     ! Substructure Id

substr.file (                       $S_LinhaSemente4              ) = './LinhaDeSemente_3D.spck' ! Filename
substr.id (                         $S_LinhaSemente4              ) = '4'                     ! Substructure Id

substr.file (                       $S_LinhaSemente5              ) = './LinhaDeSemente_3D.spck' ! Filename
substr.id (                         $S_LinhaSemente5              ) = '5'                     ! Substructure Id

substr.file (                       $S_LinhaSemente6              ) = './LinhaDeSemente_3D.spck' ! Filename
substr.id (                         $S_LinhaSemente6              ) = '6'                     ! Substructure Id

substr.file (                       $S_disco1                     ) = './RODA_simples_3D.spck' ! Filename
substr.id (                         $S_disco1                     ) = '8'                     ! Substructure Id

substr.file (                       $S_disco2                     ) = './RODA_simples_3D.spck' ! Filename
substr.id (                         $S_disco2                     ) = '9'                     ! Substructure Id

substr.file (                       $S_disco3                     ) = './RODA_simples_3D.spck' ! Filename
substr.id (                         $S_disco3                     ) = '7'                     ! Substructure Id

substr.file (                       $S_disco4                     ) = './RODA_simples_3D.spck' ! Filename
substr.id (                         $S_disco4                     ) = '10'                    ! Substructure Id

substr.file (                       $S_disco5                     ) = './RODA_simples_3D.spck' ! Filename
substr.id (                         $S_disco5                     ) = '6'                     ! Substructure Id

substr.file (                       $S_disco6                     ) = './RODA_simples_3D.spck' ! Filename
substr.id (                         $S_disco6                     ) = '11'                    ! Substructure Id

!**********************************************************************
! Views
!**********************************************************************
view.type (                         $V_WorkingView                ) = 0                       ! Projection type
view.pos (                1 ,       $V_WorkingView                ) = 2.20226560410810634E+00 ! Position
view.pos (                2 ,       $V_WorkingView                ) = -7.08247870777267963E+00 ! Position
view.pos (                3 ,       $V_WorkingView                ) = 4.09680861092056148E+00 ! Position
view.orient (             1 ,       $V_WorkingView                ) = -5.52826344966888428E-01 ! Orientation
view.orient (             2 ,       $V_WorkingView                ) = 2.89488043636083603E-02 ! Orientation
view.orient (             3 ,       $V_WorkingView                ) = 3.78384292125701904E-02 ! Orientation
view.orient (             4 ,       $V_WorkingView                ) = -8.31933438777923584E-01 ! Orientation
view.angle (                        $V_WorkingView                ) = 7.85398185253143311E-01 ! Lens angle
view.fclip.auto (                   $V_WorkingView                ) = 1                       ! Front clipping plane auto
view.bclip.auto (                   $V_WorkingView                ) = 1                       ! Back clipping plane auto
view.fclip.value (                  $V_WorkingView                ) = 9.99999977648258209E-03 ! Front clipping plane value
view.bclip.value (                  $V_WorkingView                ) = 2.84698963165283203E+01 ! Back clipping plane value
view.rotcenter.type (               $V_WorkingView                ) = 0                       ! Rotation center type
view.rotcenter.adjust (             $V_WorkingView                ) = 1                       ! Adjust rotation center
view.motion.active (                $V_WorkingView                ) = 0                       ! Camera is moved

view.type (                         $V_Ortho                      ) = 0                       ! Projection type
view.pos (                1 ,       $V_Ortho                      ) = 6.85247761197388172E-01 ! Position
view.pos (                2 ,       $V_Ortho                      ) = -7.19467787537723780E-01 ! Position
view.pos (                3 ,       $V_Ortho                      ) = 3.52404586199554615E-01 ! Position
view.orient (             1 ,       $V_Ortho                      ) = 5.24405717849731445E-01 ! Orientation
view.orient (             2 ,       $V_Ortho                      ) = 2.11789414286613464E-01 ! Orientation
view.orient (             3 ,       $V_Ortho                      ) = 2.88275688886642456E-01 ! Orientation
view.orient (             4 ,       $V_Ortho                      ) = 7.72684276103973389E-01 ! Orientation
view.angle (                        $V_Ortho                      ) = 7.85398185253143311E-01 ! Lens angle
view.fclip.auto (                   $V_Ortho                      ) = 1                       ! Front clipping plane auto
view.bclip.auto (                   $V_Ortho                      ) = 1                       ! Back clipping plane auto
view.rotcenter.type (               $V_Ortho                      ) = 0                       ! Rotation center type
view.rotcenter.adjust (             $V_Ortho                      ) = 1                       ! Adjust rotation center
view.motion.active (                $V_Ortho                      ) = 0                       ! Camera is moved

view.type (                         $V_Front                      ) = 1                       ! Projection type
view.pos (                1 ,       $V_Front                      ) = 0.00000000000000000E+00 ! Position
view.pos (                2 ,       $V_Front                      ) = -5.99845290184020996E-01 ! Position
view.pos (                3 ,       $V_Front                      ) = 2.98023294931226701E-08 ! Position
view.orient (             1 ,       $V_Front                      ) = 7.07106769084930420E-01 ! Orientation
view.orient (             2 ,       $V_Front                      ) = 0.00000000000000000E+00 ! Orientation
view.orient (             3 ,       $V_Front                      ) = 0.00000000000000000E+00 ! Orientation
view.orient (             4 ,       $V_Front                      ) = 7.07106769084930420E-01 ! Orientation
view.height (                       $V_Front                      ) = 8.00000000000000044E-01 ! View height
view.fclip.auto (                   $V_Front                      ) = 1                       ! Front clipping plane auto
view.bclip.auto (                   $V_Front                      ) = 1                       ! Back clipping plane auto
view.rotcenter.type (               $V_Front                      ) = 0                       ! Rotation center type
view.rotcenter.adjust (             $V_Front                      ) = 1                       ! Adjust rotation center
view.motion.active (                $V_Front                      ) = 0                       ! Camera is moved

view.type (                         $V_Top                        ) = 1                       ! Projection type
view.pos (                1 ,       $V_Top                        ) = 0.00000000000000000E+00 ! Position
view.pos (                2 ,       $V_Top                        ) = -7.49893719330430031E-04 ! Position
view.pos (                3 ,       $V_Top                        ) = 5.99095582962036133E-01 ! Position
view.orient (             1 ,       $V_Top                        ) = 2.51447520582814832E-08 ! Orientation
view.orient (             2 ,       $V_Top                        ) = 0.00000000000000000E+00 ! Orientation
view.orient (             3 ,       $V_Top                        ) = 0.00000000000000000E+00 ! Orientation
view.orient (             4 ,       $V_Top                        ) = 1.00000000000000000E+00 ! Orientation
view.height (                       $V_Top                        ) = 8.00000000000000044E-01 ! View height
view.fclip.auto (                   $V_Top                        ) = 1                       ! Front clipping plane auto
view.bclip.auto (                   $V_Top                        ) = 1                       ! Back clipping plane auto
view.rotcenter.type (               $V_Top                        ) = 0                       ! Rotation center type
view.rotcenter.adjust (             $V_Top                        ) = 1                       ! Adjust rotation center
view.motion.active (                $V_Top                        ) = 0                       ! Camera is moved

!**********************************************************************
! Solver Settings
!**********************************************************************
slv.kin.task (                      $SLV_SolverSettings           ) = 3                       ! KIN_INTPAR_TASK
slv.kin.tout.n (                    $SLV_SolverSettings           ) = 201                     ! KIN_INTPAR_NUM_STEPS
slv.kin.tol (                       $SLV_SolverSettings           ) = 9.99999999999999955E-07 ! Kinematics tolerance
slv.integ.fix.driftstab (           $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_INTPAR_FIXINT_CONSTAB
slv.integ.fix.jac.update (          $SLV_SolverSettings           ) = 3                       ! TIME_INTEG_PAR_FIXINT_JACOBIAN_EVAL
slv.integ.fix.part.type (           $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_INTPAR_FIXINT_JAC_PART_TYPE
slv.integ.fix.order (               $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_PAR_FIXINT_METHOD_ORDER
slv.integ.fix.posup (               $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_PAR_FIXINT_POS_COORD_UPDATE
slv.integ.sodasrt.formalism (       $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_PAR_FORMALISM
slv.integ.type (                    $SLV_SolverSettings           ) = 1                       ! Integrator type
slv.integ.jac.struc (               $SLV_SolverSettings           ) = 3                       ! SOLVER_TIME_INTEG_PAR_JACOBIAN_STRUC
slv.integ.jac.incr.type (           $SLV_SolverSettings           ) = 2                       ! Jacobian increment type
slv.integ.linalg.slv (              $SLV_SolverSettings           ) = 1                       ! 1 = dense ; 2 = sparse (UMFPACK) ; 3 = sparse (PARDISO)
slv.integ.lsode.meth (              $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_PAR_LSODE_INTEG_METHOD
slv.integ.lsode.jac.struc (         $SLV_SolverSettings           ) = 3                       ! SOLVER_TIME_INTEG_PAR_LSODE_JACOBIAN_STRUC
slv.integ.lsode.maxord (            $SLV_SolverSettings           ) = 5                       ! TIME_INTEG_INTPAR_LSODE_MAX_ORDER
slv.integ.maxrhs (                  $SLV_SolverSettings           ) = -1                      ! TIME_INTEG_INTPAR_MAX_RHS
slv.integ.maxstp (                  $SLV_SolverSettings           ) = -1                      ! TIME_INTEG_INTPAR_MAX_TIME_STEPS
slv.integ.newton.maxit (            $SLV_SolverSettings           ) = 7                       ! TIME_INTEG_INTPAR_NEWTON_ITERS
slv.integ.tout.n (                  $SLV_SolverSettings           ) = 101                     ! TIME_INTEG_INTPAR_OUTPUT_NUM_POINTS
slv.integ.sodasrt2.iestsc (         $SLV_SolverSettings           ) = 2                       ! TIME_INTEG_PAR_SODASRT20_ERROR_EST_SCALE_METHOD
slv.integ.sodasrt.maxord (          $SLV_SolverSettings           ) = 5                       ! TIME_INTEG_INTPAR_SODASRT_MAX_ORDER
slv.integ.sodasrt1.errnorm (        $SLV_SolverSettings           ) = 3                       ! TIME_INTEG_PAR_SODASRT_NORM_TYPE
slv.integ.tout.mode (               $SLV_SolverSettings           ) = 0                       ! TIME_INTEG_INTPAR_TOUT_MODE
slv.integ.meetop (                  $SLV_SolverSettings           ) = 0                       ! TIME_INTEG_BOOLPAR_EVAL_MOTION_EQ_AT_COMM_POINTS
slv.integ.driftstab (               $SLV_SolverSettings           ) = 2                       ! TIME_INTEG_BOOLPAR_ACCEPT_DRIFT
slv.integ.root (                    $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_BOOLPAR_DETECT_IMPLICIT_DISCONTINUITIES
slv.integ.jac.part (                $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_BOOLPAR_PARTITIONED_EVAL_JACOBIAN
slv.integ.addrhscall (              $SLV_SolverSettings           ) = 0                       ! TIME_INTEG_BOOLPAR_EXTRA_EVAL_AFTER_SUCCESSFUL_STEP
slv.integ.linalg.red2nd (           $SLV_SolverSettings           ) = 1                       ! Linear equations second order reduction
slv.integ.fix.oneleg (              $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_BOOLPAR_FIXINT_IMPLICIT_ONE_LEG_OLC
slv.integ.fix.conforce (            $SLV_SolverSettings           ) = 0                       ! TIME_INTEG_BOOLPAR_FIXINT_CONFORCE
slv.integ.fix.clss (                $SLV_SolverSettings           ) = 2                       ! TIME_INTEG_BOOLPAR_FIXINT_METHOD_CLASS
slv.integ.sodasrt1.scal.lam (       $SLV_SolverSettings           ) = 9.99999999999999955E-08 ! TIME_INTEG_SCALARPAR_SCALE_CONSTRAINT_FORCES
slv.integ.sodasrt1.scal.acc (       $SLV_SolverSettings           ) = 1.00000000000000000E+00 ! TIME_INTEG_SCALARPAR_SCALE_ACCELERATIONS
slv.integ.newton.eps (              $SLV_SolverSettings           ) = 3.33000000000000018E-01 ! TIME_INTEG_SCALARPAR_NEWTON_ERROR_BOUND
slv.integ.fix.utcpar (              $SLV_SolverSettings           ) = 1.00000000000000000E+00 ! TIME_INTEG_SCALARPAR_FIXINT_EULER_UTC
slv.integ.fix.olcpar (              $SLV_SolverSettings           ) = 5.00000000000000000E-01 ! TIME_INTEG_SCALARPAR_FIXINT_ONE_LEG_OLC
slv.integ.sodasrt2.estfac (         $SLV_SolverSettings           ) = 9.99999999999999955E-07 ! TIME_INTEG_SCALARPAR_SODASRT20_ERROR_EST_SCALE_FACTOR
slv.integ.tout.freq (               $SLV_SolverSettings           ) = { 200 Hz }              ! TIME_INTEG_PAR_OUTPUT_FREQ
slv.integ.tend.time (               $SLV_SolverSettings           ) = { 9 s }                 ! TIME_INTEG_TIMEPAR_END_TIME
slv.integ.atol.gen (                $SLV_SolverSettings           ) = 1.00000000000000008E-05 ! TIME_INTEG_PARSTATE_DEFAULT
slv.integ.atol.vel (                $SLV_SolverSettings           ) = 1.00000000000000005E-04 ! TIME_INTEG_PARSTATE_VEL
slv.integ.rtol.gen (                $SLV_SolverSettings           ) = 9.99999999999999955E-08 ! TIME_INTEG_PARSTATE_DEFAULT
slv.integ.rtol.vel (                $SLV_SolverSettings           ) = 1.00000000000000008E-05 ! TIME_INTEG_PARSTATE_VEL
slv.meas.geo (                      $SLV_SolverSettings           ) = 1                       ! Animation data to result file
slv.meas.sensor.pos (               $SLV_SolverSettings           ) = 1                       ! Sensor position to result file
slv.meas.sensor.vel (               $SLV_SolverSettings           ) = 1                       ! Sensor velocity to result file
slv.meas.sensor.acc (               $SLV_SolverSettings           ) = 1                       ! Sensor acceleration to result file
slv.meas.force.af (                 $SLV_SolverSettings           ) = 1                       ! applied forces to result file
slv.meas.force.ov (                 $SLV_SolverSettings           ) = 1                       ! Force output values to result file
slv.meas.force.st.dyn (             $SLV_SolverSettings           ) = 1                       ! Force dynamic states to result file
slv.meas.force.st.alg (             $SLV_SolverSettings           ) = 1                       ! Force algebraic states to result file
slv.meas.joint.st.pos (             $SLV_SolverSettings           ) = 1                       ! Joint position to result file
slv.meas.joint.st.vel (             $SLV_SolverSettings           ) = 1                       ! Joint velocity to result file
slv.meas.joint.st.acc (             $SLV_SolverSettings           ) = 1                       ! Joint acceleration to result file
slv.meas.joint.cf (                 $SLV_SolverSettings           ) = 1                       ! Joint constraining forces to result file
slv.meas.body.pos (                 $SLV_SolverSettings           ) = 1                       ! Body position to result file
slv.meas.body.vel (                 $SLV_SolverSettings           ) = 1                       ! Body velocity to result file
slv.meas.body.acc (                 $SLV_SolverSettings           ) = 1                       ! Body acceleration to result file
slv.meas.body.flx.st.pos (          $SLV_SolverSettings           ) = 1                       ! Body elastic state position to result file
slv.meas.body.flx.st.vel (          $SLV_SolverSettings           ) = 1                       ! Body elastic state velocity to result file
slv.meas.body.flx.st.acc (          $SLV_SolverSettings           ) = 1                       ! Body elastic state acceleration to result file
slv.meas.marker.st.alg (            $SLV_SolverSettings           ) = 1                       ! Marker algebraic state to result file
slv.meas.constr.cf (                $SLV_SolverSettings           ) = 1                       ! Constraint constrained state to result file
slv.meas.yout (                     $SLV_SolverSettings           ) = 1                       ! y-Outputs to result file
slv.meas.result (                   $SLV_SolverSettings           ) = 1                       ! Result elements to result file
slv.meas.subvar (                   $SLV_SolverSettings           ) = 1                       ! MEAS_BOOLPAR_SUBVAR
slv.assmbl.task (                   $SLV_SolverSettings           ) = 3                       ! ASSMBL_PAR_SOLVER_MODE
slv.output.path.type (              $SLV_SolverSettings           ) = 1                       ! OUTPUT_PATH_PAR_TYPE
slv.output.file.desc (              $SLV_SolverSettings           ) = ''                      ! Description written to the output file if supported
slv.compat.solver (                 $SLV_SolverSettings           ) = 0                       ! 0 = no (new solver); 1 = yes (classic solver)
slv.txt (                           $SLV_SolverSettings           ) = ''                      ! Comment

!**********************************************************************
! SubVars
!**********************************************************************
subvar.str (                        $_H                           ) = '$S_rocker1.$_H + (0.4395) - (0.25)' ! Definition
subvar.dflt (                       $_H                           ) = ''                      ! Default value

subvar.str (                        $_L                           ) = '1.5'                   ! Definition
subvar.dflt (                       $_L                           ) = ''                      ! Default value

subvar.str (                        $_W                           ) = '1.75'                  ! Definition
subvar.dflt (                       $_W                           ) = ''                      ! Default value

subvar.str (                        $_mboogie                     ) = '2826'                  ! Definition
subvar.dflt (                       $_mboogie                     ) = ''                      ! Default value

subvar.str (                        $_m                           ) = '$_mboogie + (1072.8499999999999) + (1072.8499999999999) + $S_rocker1.$_m + $S_rocker2.$_m + (75.349999999999994) + (75.349999999999994)' ! Definition
subvar.dflt (                       $_m                           ) = ''                      ! Default value

subvar.str (                        $_vd                          ) = '2'                     ! Definition
subvar.dflt (                       $_vd                          ) = ''                      ! Default value

subvar.str (                        $_lambda                      ) = '1'                     ! Definition
subvar.dflt (                       $_lambda                      ) = ''                      ! Default value

subvar.str (                        $_beta                        ) = '0.2'                   ! Definition
subvar.dflt (                       $_beta                        ) = ''                      ! Default value

subvar.str (                        $_deltaW                      ) = '0.47'                  ! Definition
subvar.dflt (                       $_deltaW                      ) = ''                      ! Default value

subvar.str (                        $_DistLinhas                  ) = '0.5'                   ! Definition
subvar.dflt (                       $_DistLinhas                  ) = ''                      ! Default value

subvar.str (                        $_DistXBogiePar               ) = '0.73'                  ! Definition
subvar.dflt (                       $_DistXBogiePar               ) = ''                      ! Default value

subvar.str (                        $_DistZBogiePar               ) = '0.45 + 0.072303391 +0.07 -0.004 -0.4 -0.1 -0.06' ! Definition
subvar.dflt (                       $_DistZBogiePar               ) = ''                      ! Default value

subvar.str (                        $_DistPar                     ) = '0.3'                   ! Definition
subvar.dflt (                       $_DistPar                     ) = ''                      ! Default value

subvar.str (                        $_EstrutZ                     ) = '-0.19'                 ! Definition
subvar.dflt (                       $_EstrutZ                     ) = ''                      ! Default value

subvar.str (                        $_fix_botinhaZ                ) = '-0.24 + 0.03 + $_EstrutZ' ! Definition
subvar.dflt (                       $_fix_botinhaZ                ) = ''                      ! Default value

subvar.str (                        $_fix_botinhaX                ) = '1.03'                  ! Definition
subvar.dflt (                       $_fix_botinhaX                ) = ''                      ! Default value

subvar.str (                        $_rarb                        ) = '0.05'                  ! Definition
subvar.dflt (                       $_rarb                        ) = ''                      ! Default value

subvar.str (                        $_ksolo                       ) = '5*10^6'                ! Definition
subvar.dflt (                       $_ksolo                       ) = ''                      ! Default value

subvar.str (                        $_csolo                       ) = '10^6'                  ! Definition
subvar.dflt (                       $_csolo                       ) = ''                      ! Default value

subvar.str (                        $_A_bot                       ) = '5e-4'                  ! Definition
subvar.dflt (                       $_A_bot                       ) = ''                      ! Default value

subvar.str (                        $_IF                          ) = '1.5*20400/2'           ! Definition
subvar.dflt (                       $_IF                          ) = ''                      ! Default value

subvar.str (                        $_FzDownBot                   ) = '100*5'                 ! Definition
subvar.dflt (                       $_FzDownBot                   ) = ''                      ! Default value

subvar.str (                        $_z                           ) = '0'                     ! Definition
subvar.dflt (                       $_z                           ) = ''                      ! Default value

!**********************************************************************
! Reference systems
!**********************************************************************
refsys.type (                       $R_Isys                       ) = 1                       ! Type
refsys.attr.2d.pos.x (              $R_Isys                       ) = -9.00000000000000000E+01
refsys.attr.2d.pos.y (              $R_Isys                       ) = -1.00000000000000000E+01
refsys.attr.2d.width (              $R_Isys                       ) = 2.40000000000000000E+02
refsys.attr.2d.height (             $R_Isys                       ) = 2.20000000000000000E+02

marker.type (                       $M_Isys                       ) = 1                       ! Type
marker.parent (                     $M_Isys                       ) = $R_Isys                 ! Reference system

marker.type (                       $M_Isys_1                     ) = 2                       ! Type
marker.parent (                     $M_Isys_1                     ) = $R_Isys                 ! Reference system
marker.pos (              2 ,       $M_Isys_1                     ) = -1.00000000000000000E+00 ! Position

marker.type (                       $M_Isys_2                     ) = 2                       ! Type
marker.parent (                     $M_Isys_2                     ) = $R_Isys                 ! Reference system
marker.pos (              2 ,       $M_Isys_2                     ) = 1.00000000000000000E+00 ! Position

prim.type (                         $P_Isys                       ) = 30                      ! Type
prim.ref (                          $P_Isys                       ) = $M_Isys                 ! Reference Marker
prim.color.r (            1 ,       $P_Isys                       ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Isys                       ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Isys                       ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Isys                       ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.par (                3 ,       $P_Isys                       ) = 1.00000000000000006E-01 ! [m] Length


!**********************************************************************
! Bodies
!**********************************************************************
body.m (                            $B_chao                       ) = 1.00000000000000000E+00 ! Mass of the Body
body.mp (                           $B_chao                       ) = 0                       ! 0=manual; 1=auto (based on geometry); 2=mass manual, CG & Inertia auto
body.I.tens (             1 ,   1 , $B_chao                       ) = 1.00000000000000000E+00 ! Moments of inertia
body.I.tens (             2 ,   2 , $B_chao                       ) = 1.00000000000000000E+00 ! Moments of inertia
body.I.tens (             3 ,   3 , $B_chao                       ) = 1.00000000000000000E+00 ! Moments of inertia
body.I.kind (                       $B_chao                       ) = -1                      ! Kind of I-tensor specification: -1=wrt CG; 0=wrt BRF; 1=wrt Marker
body.attr.2d.pos.x (                $B_chao                       ) = -3.00000000000000000E+01
body.attr.2d.pos.y (                $B_chao                       ) = 3.00000000000000000E+01
body.attr.2d.width (                $B_chao                       ) = 1.10000000000000000E+02
body.attr.2d.height (               $B_chao                       ) = 8.00000000000000000E+01

marker.type (                       $M_chao_BRF                   ) = 1                       ! Type
marker.parent (                     $M_chao_BRF                   ) = $B_chao                 ! Body
marker.flx.type (                   $M_chao_BRF                   ) = 4                       ! Flexible type

marker.type (                       $M_chao_PontaBotinha1_contact ) = -87                     ! Type
marker.parent (                     $M_chao_PontaBotinha1_contact ) = $B_chao                 ! Body
marker.st.alg (           1 ,       $M_chao_PontaBotinha1_contact ) = -5.93000000000000060E+00 ! Algebraic states
marker.st.alg (           2 ,       $M_chao_PontaBotinha1_contact ) = -2.49999999969325870E-01 ! Algebraic states
marker.par (              1 ,       $M_chao_PontaBotinha1_contact ) = 1.00000000000000000E+00 ! [-] Marker type
marker.par (              2 ,       $M_chao_PontaBotinha1_contact ) = $M_Boogie_PontaBotinha1_contact ! [-] Parent Marker
marker.par (              3 ,       $M_chao_PontaBotinha1_contact ) = $P_chao                 ! [-] Contact geometry Primitive

marker.type (                       $M_chao_PontaBotinha2_contact ) = -87                     ! Type
marker.parent (                     $M_chao_PontaBotinha2_contact ) = $B_chao                 ! Body
marker.st.alg (           1 ,       $M_chao_PontaBotinha2_contact ) = -5.93000000000000060E+00 ! Algebraic states
marker.st.alg (           2 ,       $M_chao_PontaBotinha2_contact ) = 2.50000000098810904E-01 ! Algebraic states
marker.par (              1 ,       $M_chao_PontaBotinha2_contact ) = 1.00000000000000000E+00 ! [-] Marker type
marker.par (              2 ,       $M_chao_PontaBotinha2_contact ) = $M_Boogie_PontaBotinha2_contact ! [-] Parent Marker
marker.par (              3 ,       $M_chao_PontaBotinha2_contact ) = $P_chao                 ! [-] Contact geometry Primitive

marker.type (                       $M_chao_PontaBotinha3_contact ) = -87                     ! Type
marker.parent (                     $M_chao_PontaBotinha3_contact ) = $B_chao                 ! Body
marker.st.alg (           1 ,       $M_chao_PontaBotinha3_contact ) = -5.93000000000000060E+00 ! Algebraic states
marker.st.alg (           2 ,       $M_chao_PontaBotinha3_contact ) = -7.49999999965306419E-01 ! Algebraic states
marker.par (              1 ,       $M_chao_PontaBotinha3_contact ) = 1.00000000000000000E+00 ! [-] Marker type
marker.par (              2 ,       $M_chao_PontaBotinha3_contact ) = $M_Boogie_PontaBotinha3_contact ! [-] Parent Marker
marker.par (              3 ,       $M_chao_PontaBotinha3_contact ) = $P_chao                 ! [-] Contact geometry Primitive

marker.type (                       $M_chao_PontaBotinha4_contact ) = -87                     ! Type
marker.parent (                     $M_chao_PontaBotinha4_contact ) = $B_chao                 ! Body
marker.st.alg (           1 ,       $M_chao_PontaBotinha4_contact ) = -5.93000000000000060E+00 ! Algebraic states
marker.st.alg (           2 ,       $M_chao_PontaBotinha4_contact ) = 7.50000000132972966E-01 ! Algebraic states
marker.par (              1 ,       $M_chao_PontaBotinha4_contact ) = 1.00000000000000000E+00 ! [-] Marker type
marker.par (              2 ,       $M_chao_PontaBotinha4_contact ) = $M_Boogie_PontaBotinha4_contact ! [-] Parent Marker
marker.par (              3 ,       $M_chao_PontaBotinha4_contact ) = $P_chao                 ! [-] Contact geometry Primitive

marker.type (                       $M_chao_PontaBotinha5_contact ) = -87                     ! Type
marker.parent (                     $M_chao_PontaBotinha5_contact ) = $B_chao                 ! Body
marker.st.alg (           1 ,       $M_chao_PontaBotinha5_contact ) = -5.93000000000000060E+00 ! Algebraic states
marker.st.alg (           2 ,       $M_chao_PontaBotinha5_contact ) = -1.24999999997122790E+00 ! Algebraic states
marker.par (              1 ,       $M_chao_PontaBotinha5_contact ) = 1.00000000000000000E+00 ! [-] Marker type
marker.par (              2 ,       $M_chao_PontaBotinha5_contact ) = $M_Boogie_PontaBotinha5_contact ! [-] Parent Marker
marker.par (              3 ,       $M_chao_PontaBotinha5_contact ) = $P_chao                 ! [-] Contact geometry Primitive

marker.type (                       $M_chao_PontaBotinha6_contact ) = -87                     ! Type
marker.parent (                     $M_chao_PontaBotinha6_contact ) = $B_chao                 ! Body
marker.st.alg (           1 ,       $M_chao_PontaBotinha6_contact ) = -5.93000000000000060E+00 ! Algebraic states
marker.st.alg (           2 ,       $M_chao_PontaBotinha6_contact ) = 1.25000000003099232E+00 ! Algebraic states
marker.par (              1 ,       $M_chao_PontaBotinha6_contact ) = 1.00000000000000000E+00 ! [-] Marker type
marker.par (              2 ,       $M_chao_PontaBotinha6_contact ) = $M_Boogie_PontaBotinha6_contact ! [-] Parent Marker
marker.par (              3 ,       $M_chao_PontaBotinha6_contact ) = $P_chao                 ! [-] Contact geometry Primitive

marker.type (                       $M_chao_BRF_movido            ) = 2                       ! Type
marker.parent (                     $M_chao_BRF_movido            ) = $B_chao                 ! Body
marker.pos (              1 ,       $M_chao_BRF_movido            ) = 8.00000000000000000E+00 ! Position

joint.from (                        $J_chao                       ) = $M_Isys                 ! From Marker
joint.to (                          $J_chao                       ) = $M_chao_BRF             ! To Marker
joint.type (                        $J_chao                       ) = 1                       ! Type
joint.st.pos (            1 ,       $J_chao                       ) = 0.00000000000000000E+00 ! Position
joint.st.vel (            1 ,       $J_chao                       ) = 0.00000000000000000E+00 ! Velocity
joint.attr.2d.pos.x (     1 ,       $J_chao                       ) = 20
joint.attr.2d.pos.y (     1 ,       $J_chao                       ) = 170
joint.attr.2d.ori (       1 ,       $J_chao                       ) = 270
joint.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $J_chao      ) = 20, 20
joint.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $J_chao      ) = 210, 187
joint.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $J_chao        ) = 20, 20
joint.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $J_chao        ) = 110, 153

prim.type (                         $P_chao                       ) = 43                      ! Type
prim.ref (                          $P_chao                       ) = $M_chao_BRF_movido      ! Reference Marker
prim.ang (                1 ,       $P_chao                       ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_chao                       ) = 0.00000000000000000E+00 ! Angles
prim.ang (                3 ,       $P_chao                       ) = 0.00000000000000000E+00 ! Angles
prim.vtx (                1 ,   1 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,   2 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,   3 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,   4 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,   5 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,   6 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,   7 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,   8 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,   9 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,  10 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,  11 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,  12 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,  13 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,  14 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,  15 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,  16 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,  17 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,  18 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,  19 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,  20 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,  21 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,  22 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  23 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  24 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  25 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  26 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  27 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  28 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  29 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  30 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  31 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  32 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  33 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  34 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  35 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  36 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  37 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  38 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  39 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  40 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  41 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  42 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  43 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  44 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  45 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  46 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  47 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  48 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  49 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  50 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  51 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  52 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  53 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  54 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  55 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  56 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  57 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  58 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  59 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  60 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  61 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  62 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  63 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  64 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  65 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  66 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  67 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  68 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  69 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  70 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  71 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  72 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  73 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  74 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  75 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  76 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  77 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  78 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  79 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  80 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  81 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  82 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  83 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  84 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  85 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  86 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  87 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  88 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  89 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  90 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  91 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  92 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  93 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  94 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  95 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  96 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  97 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  98 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  99 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 100 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 101 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 102 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 103 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 104 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 105 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 106 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 107 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 108 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 109 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 110 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 111 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 112 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 113 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 114 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 115 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 116 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 117 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 118 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 119 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 120 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 121 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 122 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 123 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 124 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 125 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 126 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 127 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 128 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 129 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 130 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 131 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 132 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 133 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 134 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 135 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 136 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 137 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 138 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 139 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 140 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 141 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 142 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 143 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 144 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 145 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 146 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 147 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 148 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 149 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 150 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 151 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 152 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 153 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 154 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 155 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 156 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 157 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 158 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 159 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 160 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 161 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 162 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 163 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 164 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 165 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 166 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 167 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 168 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 169 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 170 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 171 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 172 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 173 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 174 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 175 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 176 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 177 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 178 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 179 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 180 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 181 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 182 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 183 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 184 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 185 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 186 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 187 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 188 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 189 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 190 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 191 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 192 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 193 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 194 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 195 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 196 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 197 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 198 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 199 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 200 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 201 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 202 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 203 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 204 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 205 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 206 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 207 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 208 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 209 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 210 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 211 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 212 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 213 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 214 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 215 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 216 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 217 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 218 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 219 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 220 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 221 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 222 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 223 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 224 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 225 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 226 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 227 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 228 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 229 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 230 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 231 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 232 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 233 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 234 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 235 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 236 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 237 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 238 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 239 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 240 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 241 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 242 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 243 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 244 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 245 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 246 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 247 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 248 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 249 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 250 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 251 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 252 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 253 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 254 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 255 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 256 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 257 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 258 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 259 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 260 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 261 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 262 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 263 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 264 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 265 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 266 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 267 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 268 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 269 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 270 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 271 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 272 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 273 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 274 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 275 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 276 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 277 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 278 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 279 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 280 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 281 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 282 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 283 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 284 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 285 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 286 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 287 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 288 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 289 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 290 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 291 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 292 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 293 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 294 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 295 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 296 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 297 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 298 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 299 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 300 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 301 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 302 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 303 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 304 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 305 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 306 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 307 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 308 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 309 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 310 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 311 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 312 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 313 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 314 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 315 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 316 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 317 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 318 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 319 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 320 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 321 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 322 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 323 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 324 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 325 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 326 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 327 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 328 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 329 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 330 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 331 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 332 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 333 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 334 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 335 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 336 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 337 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 338 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 339 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 340 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 341 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 342 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 343 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 344 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 345 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 346 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 347 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 348 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 349 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 350 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 351 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 352 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 353 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 354 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 355 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 356 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 357 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 358 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 359 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 360 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 361 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 362 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 363 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 364 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 365 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 366 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 367 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 368 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 369 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 370 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 371 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 372 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 373 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 374 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 375 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 376 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 377 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 378 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 379 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 380 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 381 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 382 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 383 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 384 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 385 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 386 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 387 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 388 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 389 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 390 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 391 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 392 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 393 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 394 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 395 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 396 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 397 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 398 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 399 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 400 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 401 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 402 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 403 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 404 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 405 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 406 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 407 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 408 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 409 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 410 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 411 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 412 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 413 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 414 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 415 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 416 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 417 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 418 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 419 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 420 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 , 421 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 , 422 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 , 423 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 , 424 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 , 425 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 , 426 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 , 427 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 , 428 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 , 429 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 , 430 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 , 431 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 , 432 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 , 433 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 , 434 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 , 435 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 , 436 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 , 437 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 , 438 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 , 439 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 , 440 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 , 441 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                2 ,   1 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                2 ,   2 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,   3 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,   4 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,   5 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,   6 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,   7 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,   8 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,   9 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  10 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  11 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  12 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  13 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  14 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  15 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  16 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  17 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  18 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  19 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  20 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  21 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                2 ,  22 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                2 ,  23 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  24 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  25 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  26 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  27 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  28 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  29 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  30 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  31 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  32 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  33 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  34 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  35 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  36 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  37 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  38 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  39 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  40 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  41 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  42 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                2 ,  43 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                2 ,  44 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  45 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  46 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  47 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  48 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  49 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  50 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  51 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  52 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  53 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  54 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  55 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  56 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  57 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  58 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  59 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  60 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  61 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  62 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  63 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                2 ,  64 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                2 ,  65 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  66 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  67 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  68 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  69 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  70 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  71 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  72 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  73 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  74 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  75 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  76 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  77 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  78 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  79 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  80 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  81 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  82 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  83 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  84 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                2 ,  85 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                2 ,  86 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  87 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  88 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  89 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  90 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  91 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  92 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  93 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  94 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  95 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  96 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  97 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  98 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  99 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 100 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 101 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 102 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 103 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 104 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 105 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 106 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 107 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 108 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 109 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 110 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 111 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 112 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 113 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 114 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 115 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 116 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 117 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 118 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 119 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 120 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 121 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 122 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 123 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 124 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 125 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 126 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 127 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 128 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 129 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 130 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 131 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 132 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 133 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 134 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 135 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 136 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 137 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 138 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 139 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 140 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 141 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 142 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 143 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 144 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 145 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 146 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 147 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 148 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 149 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 150 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 151 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 152 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 153 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 154 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 155 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 156 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 157 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 158 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 159 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 160 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 161 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 162 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 163 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 164 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 165 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 166 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 167 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 168 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 169 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 170 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 171 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 172 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 173 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 174 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 175 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 176 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 177 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 178 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 179 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 180 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 181 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 182 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 183 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 184 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 185 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 186 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 187 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 188 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 189 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 190 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 191 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 192 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 193 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 194 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 195 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 196 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 197 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 198 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 199 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 200 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 201 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 202 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 203 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 204 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 205 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 206 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 207 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 208 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 209 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 210 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 211 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 212 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 213 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 214 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 215 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 216 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 217 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 218 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 219 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 220 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 221 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 222 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 223 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 224 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 225 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 226 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 227 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 228 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 229 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 230 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 231 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 232 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 233 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 234 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 235 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 236 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 237 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 238 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 239 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 240 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 241 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 242 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 243 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 244 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 245 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 246 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 247 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 248 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 249 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 250 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 251 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 252 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 253 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 254 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 255 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 256 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 257 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 258 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 259 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 260 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 261 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 262 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 263 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 264 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 265 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 266 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 267 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 268 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 269 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 270 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 271 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 272 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 273 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 274 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 275 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 276 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 277 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 278 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 279 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 280 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 281 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 282 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 283 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 284 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 285 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 286 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 287 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 288 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 289 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 290 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 291 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 292 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 293 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 294 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 295 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 296 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 297 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 298 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 299 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 300 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 301 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 302 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 303 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 304 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 305 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 306 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 307 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 308 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 309 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 310 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 311 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 312 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 313 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 314 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 315 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 316 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 317 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 318 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 319 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 320 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 321 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 322 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 323 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 324 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 325 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 326 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 327 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 328 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 329 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 330 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 331 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 332 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 333 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 334 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 335 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 336 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 337 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 338 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 339 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 340 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 341 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 342 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 343 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 344 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 345 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 346 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 347 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 348 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 349 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 350 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 351 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 352 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 353 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 354 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 355 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 356 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 357 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 358 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 359 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 360 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 361 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 362 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 363 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 364 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 365 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 366 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 367 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 368 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 369 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 370 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 371 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 372 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 373 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 374 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 375 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 376 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 377 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 378 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 379 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 380 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 381 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 382 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 383 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 384 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 385 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 386 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 387 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 388 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 389 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 390 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 391 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 392 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 393 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 394 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 395 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 396 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 397 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 398 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 399 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 400 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 401 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 402 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 403 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 404 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 405 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 406 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 407 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 408 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 409 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 410 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 411 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 412 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 413 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 414 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 415 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 416 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 417 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 418 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 419 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 420 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 421 , $P_chao                       ) = -1.00000000000000000E+01 ! Vertices
prim.vtx (                2 , 422 , $P_chao                       ) = -9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 423 , $P_chao                       ) = -8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 424 , $P_chao                       ) = -7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 425 , $P_chao                       ) = -6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 426 , $P_chao                       ) = -5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 427 , $P_chao                       ) = -4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 428 , $P_chao                       ) = -3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 429 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 430 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 431 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 432 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 433 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 434 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 435 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 436 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 437 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 438 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 439 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 440 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                2 , 441 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                3 ,   1 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,   2 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,   3 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,   4 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,   5 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,   6 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,   7 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,   8 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,   9 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  10 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  11 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  12 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  13 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  14 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  15 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  16 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  17 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  18 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  19 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  20 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  21 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  22 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  23 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  24 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  25 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  26 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  27 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  28 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  29 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  30 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  31 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  32 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  33 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  34 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  35 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  36 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  37 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  38 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  39 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  40 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  41 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  42 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  43 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  44 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  45 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  46 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  47 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  48 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  49 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  50 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  51 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  52 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  53 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  54 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  55 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  56 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  57 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  58 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  59 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  60 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  61 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  62 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  63 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  64 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  65 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  66 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  67 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  68 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  69 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  70 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  71 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  72 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  73 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  74 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  75 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  76 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  77 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  78 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  79 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  80 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  81 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  82 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  83 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  84 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  85 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  86 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  87 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  88 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  89 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  90 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  91 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  92 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  93 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  94 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  95 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  96 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  97 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  98 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 ,  99 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 100 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 101 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 102 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 103 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 104 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 105 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 106 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 107 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 108 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 109 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 110 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 111 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 112 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 113 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 114 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 115 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 116 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 117 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 118 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 119 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 120 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 121 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 122 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 123 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 124 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 125 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 126 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 127 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 128 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 129 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 130 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 131 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 132 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 133 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 134 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 135 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 136 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 137 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 138 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 139 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 140 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 141 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 142 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 143 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 144 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 145 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 146 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 147 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 148 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 149 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 150 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 151 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 152 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 153 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 154 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 155 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 156 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 157 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 158 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 159 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 160 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 161 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 162 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 163 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 164 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 165 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 166 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 167 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 168 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 169 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 170 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 171 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 172 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 173 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 174 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 175 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 176 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 177 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 178 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 179 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 180 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 181 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 182 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 183 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 184 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 185 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 186 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 187 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 188 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 189 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 190 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 191 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 192 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 193 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 194 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 195 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 196 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 197 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 198 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 199 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 200 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 201 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 202 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 203 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 204 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 205 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 206 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 207 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 208 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 209 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 210 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 211 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 212 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 213 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 214 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 215 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 216 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 217 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 218 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 219 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 220 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 221 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 222 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 223 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 224 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 225 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 226 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 227 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 228 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 229 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 230 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 231 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 232 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 233 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 234 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 235 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 236 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 237 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 238 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 239 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 240 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 241 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 242 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 243 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 244 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 245 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 246 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 247 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 248 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 249 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 250 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 251 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 252 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 253 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 254 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 255 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 256 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 257 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 258 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 259 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 260 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 261 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 262 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 263 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 264 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 265 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 266 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 267 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 268 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 269 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 270 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 271 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 272 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 273 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 274 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 275 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 276 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 277 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 278 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 279 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 280 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 281 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 282 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 283 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 284 , $P_chao                       ) = { 0.09*$_z }            ! Vertices
prim.vtx (                3 , 285 , $P_chao                       ) = { 0.389*$_z }           ! Vertices
prim.vtx (                3 , 286 , $P_chao                       ) = { 0.5*$_z }             ! Vertices
prim.vtx (                3 , 287 , $P_chao                       ) = { 0.389*$_z }           ! Vertices
prim.vtx (                3 , 288 , $P_chao                       ) = { 0.09*$_z }            ! Vertices
prim.vtx (                3 , 289 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 290 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 291 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 292 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 293 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 294 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 295 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 296 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 297 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 298 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 299 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 300 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 301 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 302 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 303 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 304 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 305 , $P_chao                       ) = { 0.389*$_z }           ! Vertices
prim.vtx (                3 , 306 , $P_chao                       ) = { 0.738*$_z }           ! Vertices
prim.vtx (                3 , 307 , $P_chao                       ) = { 0.866*$_z }           ! Vertices
prim.vtx (                3 , 308 , $P_chao                       ) = { 0.738*$_z }           ! Vertices
prim.vtx (                3 , 309 , $P_chao                       ) = { 0.389*$_z }           ! Vertices
prim.vtx (                3 , 310 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 311 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 312 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 313 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 314 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 315 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 316 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 317 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 318 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 319 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 320 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 321 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 322 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 323 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 324 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 325 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 326 , $P_chao                       ) = { 0.5*$_z }             ! Vertices
prim.vtx (                3 , 327 , $P_chao                       ) = { 0.866*$_z }           ! Vertices
prim.vtx (                3 , 328 , $P_chao                       ) = $_z                     ! Vertices
prim.vtx (                3 , 329 , $P_chao                       ) = { 0.866*$_z }           ! Vertices
prim.vtx (                3 , 330 , $P_chao                       ) = { 0.5*$_z }             ! Vertices
prim.vtx (                3 , 331 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 332 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 333 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 334 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 335 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 336 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 337 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 338 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 339 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 340 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 341 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 342 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 343 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 344 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 345 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 346 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 347 , $P_chao                       ) = { 0.389*$_z }           ! Vertices
prim.vtx (                3 , 348 , $P_chao                       ) = { 0.738*$_z }           ! Vertices
prim.vtx (                3 , 349 , $P_chao                       ) = { 0.866*$_z }           ! Vertices
prim.vtx (                3 , 350 , $P_chao                       ) = { 0.738*$_z }           ! Vertices
prim.vtx (                3 , 351 , $P_chao                       ) = { 0.389*$_z }           ! Vertices
prim.vtx (                3 , 352 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 353 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 354 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 355 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 356 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 357 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 358 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 359 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 360 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 361 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 362 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 363 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 364 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 365 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 366 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 367 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 368 , $P_chao                       ) = { 0.09*$_z }            ! Vertices
prim.vtx (                3 , 369 , $P_chao                       ) = { 0.389*$_z }           ! Vertices
prim.vtx (                3 , 370 , $P_chao                       ) = { 0.5*$_z }             ! Vertices
prim.vtx (                3 , 371 , $P_chao                       ) = { 0.389*$_z }           ! Vertices
prim.vtx (                3 , 372 , $P_chao                       ) = { 0.09*$_z }            ! Vertices
prim.vtx (                3 , 373 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 374 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 375 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 376 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 377 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 378 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 379 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 380 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 381 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 382 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 383 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 384 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 385 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 386 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 387 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 388 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 389 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 390 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 391 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 392 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 393 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 394 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 395 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 396 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 397 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 398 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 399 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 400 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 401 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 402 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 403 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 404 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 405 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 406 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 407 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 408 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 409 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 410 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 411 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 412 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 413 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 414 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 415 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 416 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 417 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 418 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 419 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 420 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 421 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 422 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 423 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 424 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 425 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 426 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 427 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 428 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 429 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 430 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 431 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 432 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 433 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 434 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 435 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 436 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 437 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 438 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 439 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 440 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                3 , 441 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.color.r (            1 ,       $P_chao                       ) = 1.65000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_chao                       ) = 1.15000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_chao                       ) = 5.70000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_chao                       ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_chao                       ) = 2.50000000000000000E-01 ! Transparency
prim.mp.dens.solid (                $P_chao                       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_chao                       ) = 0.00000000000000000E+00 ! [-] Surface by
prim.par (                7 ,       $P_chao                       ) = 0.00000000000000000E+00 ! [-] Coordinate type
prim.par (                8 ,       $P_chao                       ) = 2.00000000000000000E+00 ! [-] Surface fitting type
prim.par (                9 ,       $P_chao                       ) = 3.00000000000000000E+00 ! [-] Spline degree in 1st dir
prim.par (               10 ,       $P_chao                       ) = 3.00000000000000000E+00 ! [-] Spline degree in 2nd dir
prim.par (               11 ,       $P_chao                       ) = 1.00000000000000006E-01 ! [-] Smoothing value
prim.par (               17 ,       $P_chao                       ) = 2.00000000000000000E+02 ! [-] No. graphic points in 1st dir
prim.par (               18 ,       $P_chao                       ) = 2.00000000000000000E+02 ! [-] No. graphic points in 2nd dir
prim.par (               19 ,       $P_chao                       ) = 0.00000000000000000E+00 ! [m] Graphics start 1st dir
prim.par (               20 ,       $P_chao                       ) = 0.00000000000000000E+00 ! [m] Graphics end 1st dir
prim.par (               21 ,       $P_chao                       ) = 0.00000000000000000E+00 ! [m] Graphics start 2nd dir
prim.par (               22 ,       $P_chao                       ) = 0.00000000000000000E+00 ! [m] Graphics end 2nd dir


body.m (                            $B_Boogie                     ) = 1.00000000000000000E+00 ! Mass of the Body
body.mp (                           $B_Boogie                     ) = 1                       ! 0=manual; 1=auto (based on geometry); 2=mass manual, CG & Inertia auto
body.I.tens (             1 ,   1 , $B_Boogie                     ) = 1.00000000000000000E+00 ! Moments of inertia
body.I.tens (             2 ,   2 , $B_Boogie                     ) = 1.00000000000000000E+00 ! Moments of inertia
body.I.tens (             3 ,   3 , $B_Boogie                     ) = 1.00000000000000000E+00 ! Moments of inertia
body.I.kind (                       $B_Boogie                     ) = -1                      ! Kind of I-tensor specification: -1=wrt CG; 0=wrt BRF; 1=wrt Marker
body.flx.dmp.all (                  $B_Boogie                     ) = 0.00000000000000000E+00 ! Damping input value

marker.type (                       $M_Boogie_BRF                 ) = 1                       ! Type
marker.parent (                     $M_Boogie_BRF                 ) = $B_Boogie               ! Body
marker.flx.type (                   $M_Boogie_BRF                 ) = 4                       ! Flexible type

marker.type (                       $M_Boogie_esteira1            ) = 2                       ! Type
marker.ref (                        $M_Boogie_esteira1            ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_esteira1            ) = $B_Boogie               ! Body
marker.pos (              2 ,       $M_Boogie_esteira1            ) = { -$_W/2  - (0.25)/2 }  ! Position
marker.pos (              3 ,       $M_Boogie_esteira1            ) = { -$_H/2 }              ! Position

marker.type (                       $M_Boogie_esteira2            ) = 2                       ! Type
marker.ref (                        $M_Boogie_esteira2            ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_esteira2            ) = $B_Boogie               ! Body
marker.pos (              2 ,       $M_Boogie_esteira2            ) = { $_W/2 + (0.25)/2 }    ! Position
marker.pos (              3 ,       $M_Boogie_esteira2            ) = { -$_H/2 }              ! Position

marker.type (                       $M_Boogie_rocker1             ) = 2                       ! Type
marker.parent (                     $M_Boogie_rocker1             ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_rocker1             ) = -1.00000000000000006E-01 ! Position
marker.pos (              2 ,       $M_Boogie_rocker1             ) = { -$_W/2 -$_deltaW + $S_rocker1.$_W/2 } ! Position
marker.pos (              3 ,       $M_Boogie_rocker1             ) = { $_H/2 }               ! Position

marker.type (                       $M_Boogie_rocker2             ) = 2                       ! Type
marker.parent (                     $M_Boogie_rocker2             ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_rocker2             ) = -1.00000000000000006E-01 ! Position
marker.pos (              2 ,       $M_Boogie_rocker2             ) = { $_W/2 +$_deltaW - $S_rocker1.$_W/2 } ! Position
marker.pos (              3 ,       $M_Boogie_rocker2             ) = { $_H/2 }               ! Position

marker.type (                       $M_Boogie_ParalelogramoCima1  ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoCima1  ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoCima1  ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoCima1  ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoCima1  ) = { -$_DistLinhas/2 }     ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoCima1  ) = { $_DistZBogiePar + $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoCima2  ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoCima2  ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoCima2  ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoCima2  ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoCima2  ) = { $_DistLinhas/2 }      ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoCima2  ) = { $_DistZBogiePar + $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoCima3  ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoCima3  ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoCima3  ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoCima3  ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoCima3  ) = { -3*$_DistLinhas/2 }   ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoCima3  ) = { $_DistZBogiePar + $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoCima4  ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoCima4  ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoCima4  ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoCima4  ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoCima4  ) = { 3*$_DistLinhas/2 }    ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoCima4  ) = { $_DistZBogiePar + $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoCima5  ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoCima5  ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoCima5  ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoCima5  ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoCima5  ) = { -5*$_DistLinhas/2 }   ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoCima5  ) = { $_DistZBogiePar + $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoCima6  ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoCima6  ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoCima6  ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoCima6  ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoCima6  ) = { 5*$_DistLinhas/2 }    ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoCima6  ) = { $_DistZBogiePar + $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoBaixo1 ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoBaixo1 ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoBaixo1 ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoBaixo1 ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoBaixo1 ) = { -$_DistLinhas/2 }     ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoBaixo1 ) = { $_DistZBogiePar - $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoBaixo2 ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoBaixo2 ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoBaixo2 ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoBaixo2 ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoBaixo2 ) = { $_DistLinhas/2 }      ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoBaixo2 ) = { $_DistZBogiePar - $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoBaixo3 ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoBaixo3 ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoBaixo3 ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoBaixo3 ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoBaixo3 ) = { -3*$_DistLinhas/2 }   ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoBaixo3 ) = { $_DistZBogiePar - $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoBaixo4 ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoBaixo4 ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoBaixo4 ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoBaixo4 ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoBaixo4 ) = { 3*$_DistLinhas/2 }    ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoBaixo4 ) = { $_DistZBogiePar - $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoBaixo5 ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoBaixo5 ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoBaixo5 ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoBaixo5 ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoBaixo5 ) = { -5*$_DistLinhas/2 }   ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoBaixo5 ) = { $_DistZBogiePar - $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoBaixo6 ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoBaixo6 ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoBaixo6 ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoBaixo6 ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoBaixo6 ) = { 5*$_DistLinhas/2 }    ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoBaixo6 ) = { $_DistZBogiePar - $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_PontaBotinha1       ) = 2                       ! Type
marker.parent (                     $M_Boogie_PontaBotinha1       ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_PontaBotinha1       ) = 7.00000000000000067E-02 ! Position
marker.pos (              2 ,       $M_Boogie_PontaBotinha1       ) = { -$_DistLinhas/2 }     ! Position
marker.pos (              3 ,       $M_Boogie_PontaBotinha1       ) = { -$_H/2 -0.39 }        ! Position

marker.type (                       $M_Boogie_PontaBotinha2       ) = 2                       ! Type
marker.parent (                     $M_Boogie_PontaBotinha2       ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_PontaBotinha2       ) = 7.00000000000000067E-02 ! Position
marker.pos (              2 ,       $M_Boogie_PontaBotinha2       ) = { $_DistLinhas/2 }      ! Position
marker.pos (              3 ,       $M_Boogie_PontaBotinha2       ) = { -$_H/2 -0.39 }        ! Position

marker.type (                       $M_Boogie_PontaBotinha3       ) = 2                       ! Type
marker.parent (                     $M_Boogie_PontaBotinha3       ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_PontaBotinha3       ) = 7.00000000000000067E-02 ! Position
marker.pos (              2 ,       $M_Boogie_PontaBotinha3       ) = { -3*$_DistLinhas/2 }   ! Position
marker.pos (              3 ,       $M_Boogie_PontaBotinha3       ) = { -$_H/2 -0.39 }        ! Position

marker.type (                       $M_Boogie_PontaBotinha4       ) = 2                       ! Type
marker.parent (                     $M_Boogie_PontaBotinha4       ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_PontaBotinha4       ) = 7.00000000000000067E-02 ! Position
marker.pos (              2 ,       $M_Boogie_PontaBotinha4       ) = { 3*$_DistLinhas/2 }    ! Position
marker.pos (              3 ,       $M_Boogie_PontaBotinha4       ) = { -$_H/2 -0.39 }        ! Position

marker.type (                       $M_Boogie_PontaBotinha5       ) = 2                       ! Type
marker.parent (                     $M_Boogie_PontaBotinha5       ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_PontaBotinha5       ) = 7.00000000000000067E-02 ! Position
marker.pos (              2 ,       $M_Boogie_PontaBotinha5       ) = { -5*$_DistLinhas/2 }   ! Position
marker.pos (              3 ,       $M_Boogie_PontaBotinha5       ) = { -$_H/2 -0.39 }        ! Position

marker.type (                       $M_Boogie_PontaBotinha6       ) = 2                       ! Type
marker.parent (                     $M_Boogie_PontaBotinha6       ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_PontaBotinha6       ) = 7.00000000000000067E-02 ! Position
marker.pos (              2 ,       $M_Boogie_PontaBotinha6       ) = { 5*$_DistLinhas/2 }    ! Position
marker.pos (              3 ,       $M_Boogie_PontaBotinha6       ) = { -$_H/2 -0.39 }        ! Position

marker.type (                       $M_Boogie_PontaBotinha1_contact) = -87                    ! Type
marker.parent (                     $M_Boogie_PontaBotinha1_contact) = $B_Boogie              ! Body
marker.pos (              1 ,       $M_Boogie_PontaBotinha1_contact) = 7.00000000000000067E-02 ! Position
marker.pos (              2 ,       $M_Boogie_PontaBotinha1_contact) = { -5*$_DistLinhas/2 }  ! Position
marker.pos (              3 ,       $M_Boogie_PontaBotinha1_contact) = { -$_H/2 -0.39 }       ! Position
marker.st.alg (           1 ,       $M_Boogie_PontaBotinha1_contact) = 5.55187931623981264E-10 ! Algebraic states
marker.st.alg (           2 ,       $M_Boogie_PontaBotinha1_contact) = 1.57079632679489656E+00 ! Algebraic states
marker.par (              1 ,       $M_Boogie_PontaBotinha1_contact) = 0.00000000000000000E+00 ! [-] Marker type
marker.par (              3 ,       $M_Boogie_PontaBotinha1_contact) = $P_Boogie_CBotinha1    ! [-] Contact geometry Primitive
marker.par (              4 ,       $M_Boogie_PontaBotinha1_contact) = 1.00000000000000000E+00 ! [-] Normal orientation
marker.par (              6 ,       $M_Boogie_PontaBotinha1_contact) = 1.00000000000000000E+00 ! [-] Contact point determin. method
marker.par (              7 ,       $M_Boogie_PontaBotinha1_contact) = 9.99999999999999955E-08 ! [-] Solver tolerance

marker.type (                       $M_Boogie_PontaBotinha2_contact) = -87                    ! Type
marker.parent (                     $M_Boogie_PontaBotinha2_contact) = $B_Boogie              ! Body
marker.pos (              1 ,       $M_Boogie_PontaBotinha2_contact) = 7.00000000000000067E-02 ! Position
marker.pos (              2 ,       $M_Boogie_PontaBotinha2_contact) = { -5*$_DistLinhas/2 }  ! Position
marker.pos (              3 ,       $M_Boogie_PontaBotinha2_contact) = { -$_H/2 -0.39 }       ! Position
marker.st.alg (           1 ,       $M_Boogie_PontaBotinha2_contact) = 1.78843211917161928E-09 ! Algebraic states
marker.st.alg (           2 ,       $M_Boogie_PontaBotinha2_contact) = 1.57079632679489656E+00 ! Algebraic states
marker.par (              1 ,       $M_Boogie_PontaBotinha2_contact) = 0.00000000000000000E+00 ! [-] Marker type
marker.par (              3 ,       $M_Boogie_PontaBotinha2_contact) = $P_Boogie_CBotinha2    ! [-] Contact geometry Primitive
marker.par (              4 ,       $M_Boogie_PontaBotinha2_contact) = 1.00000000000000000E+00 ! [-] Normal orientation
marker.par (              6 ,       $M_Boogie_PontaBotinha2_contact) = 1.00000000000000000E+00 ! [-] Contact point determin. method
marker.par (              7 ,       $M_Boogie_PontaBotinha2_contact) = 9.99999999999999955E-08 ! [-] Solver tolerance

marker.type (                       $M_Boogie_PontaBotinha3_contact) = -87                    ! Type
marker.parent (                     $M_Boogie_PontaBotinha3_contact) = $B_Boogie              ! Body
marker.pos (              1 ,       $M_Boogie_PontaBotinha3_contact) = 7.00000000000000067E-02 ! Position
marker.pos (              2 ,       $M_Boogie_PontaBotinha3_contact) = { -5*$_DistLinhas/2 }  ! Position
marker.pos (              3 ,       $M_Boogie_PontaBotinha3_contact) = { -$_H/2 -0.39 }       ! Position
marker.st.alg (           1 ,       $M_Boogie_PontaBotinha3_contact) = 3.14159265365258697E+01 ! Algebraic states
marker.st.alg (           2 ,       $M_Boogie_PontaBotinha3_contact) = 1.57079632679489656E+00 ! Algebraic states
marker.par (              1 ,       $M_Boogie_PontaBotinha3_contact) = 0.00000000000000000E+00 ! [-] Marker type
marker.par (              3 ,       $M_Boogie_PontaBotinha3_contact) = $P_Boogie_CBotinha3    ! [-] Contact geometry Primitive
marker.par (              4 ,       $M_Boogie_PontaBotinha3_contact) = 1.00000000000000000E+00 ! [-] Normal orientation
marker.par (              6 ,       $M_Boogie_PontaBotinha3_contact) = 1.00000000000000000E+00 ! [-] Contact point determin. method
marker.par (              7 ,       $M_Boogie_PontaBotinha3_contact) = 9.99999999999999955E-08 ! [-] Solver tolerance

marker.type (                       $M_Boogie_PontaBotinha4_contact) = -87                    ! Type
marker.parent (                     $M_Boogie_PontaBotinha4_contact) = $B_Boogie              ! Body
marker.pos (              1 ,       $M_Boogie_PontaBotinha4_contact) = 7.00000000000000067E-02 ! Position
marker.pos (              2 ,       $M_Boogie_PontaBotinha4_contact) = { -5*$_DistLinhas/2 }  ! Position
marker.pos (              3 ,       $M_Boogie_PontaBotinha4_contact) = { -$_H/2 -0.39 }       ! Position
marker.st.alg (           1 ,       $M_Boogie_PontaBotinha4_contact) = 2.40675088545057841E-09 ! Algebraic states
marker.st.alg (           2 ,       $M_Boogie_PontaBotinha4_contact) = 1.57079632679489656E+00 ! Algebraic states
marker.par (              1 ,       $M_Boogie_PontaBotinha4_contact) = 0.00000000000000000E+00 ! [-] Marker type
marker.par (              3 ,       $M_Boogie_PontaBotinha4_contact) = $P_Boogie_CBotinha4    ! [-] Contact geometry Primitive
marker.par (              4 ,       $M_Boogie_PontaBotinha4_contact) = 1.00000000000000000E+00 ! [-] Normal orientation
marker.par (              6 ,       $M_Boogie_PontaBotinha4_contact) = 1.00000000000000000E+00 ! [-] Contact point determin. method
marker.par (              7 ,       $M_Boogie_PontaBotinha4_contact) = 9.99999999999999955E-08 ! [-] Solver tolerance

marker.type (                       $M_Boogie_PontaBotinha5_contact) = -87                    ! Type
marker.parent (                     $M_Boogie_PontaBotinha5_contact) = $B_Boogie              ! Body
marker.pos (              1 ,       $M_Boogie_PontaBotinha5_contact) = 7.00000000000000067E-02 ! Position
marker.pos (              2 ,       $M_Boogie_PontaBotinha5_contact) = { -5*$_DistLinhas/2 }  ! Position
marker.pos (              3 ,       $M_Boogie_PontaBotinha5_contact) = { -$_H/2 -0.39 }       ! Position
marker.st.alg (           1 ,       $M_Boogie_PontaBotinha5_contact) = 5.20762405029238178E-10 ! Algebraic states
marker.st.alg (           2 ,       $M_Boogie_PontaBotinha5_contact) = 1.57079632679489656E+00 ! Algebraic states
marker.par (              1 ,       $M_Boogie_PontaBotinha5_contact) = 0.00000000000000000E+00 ! [-] Marker type
marker.par (              3 ,       $M_Boogie_PontaBotinha5_contact) = $P_Boogie_CBotinha5    ! [-] Contact geometry Primitive
marker.par (              4 ,       $M_Boogie_PontaBotinha5_contact) = 1.00000000000000000E+00 ! [-] Normal orientation
marker.par (              6 ,       $M_Boogie_PontaBotinha5_contact) = 1.00000000000000000E+00 ! [-] Contact point determin. method
marker.par (              7 ,       $M_Boogie_PontaBotinha5_contact) = 9.99999999999999955E-08 ! [-] Solver tolerance

marker.type (                       $M_Boogie_PontaBotinha6_contact) = -87                    ! Type
marker.parent (                     $M_Boogie_PontaBotinha6_contact) = $B_Boogie              ! Body
marker.pos (              1 ,       $M_Boogie_PontaBotinha6_contact) = 7.00000000000000067E-02 ! Position
marker.pos (              2 ,       $M_Boogie_PontaBotinha6_contact) = { -5*$_DistLinhas/2 }  ! Position
marker.pos (              3 ,       $M_Boogie_PontaBotinha6_contact) = { -$_H/2 -0.39 }       ! Position
marker.st.alg (           1 ,       $M_Boogie_PontaBotinha6_contact) = 5.60947088364664109E-10 ! Algebraic states
marker.st.alg (           2 ,       $M_Boogie_PontaBotinha6_contact) = 1.57079632679489656E+00 ! Algebraic states
marker.par (              1 ,       $M_Boogie_PontaBotinha6_contact) = 0.00000000000000000E+00 ! [-] Marker type
marker.par (              3 ,       $M_Boogie_PontaBotinha6_contact) = $P_Boogie_CBotinha6    ! [-] Contact geometry Primitive
marker.par (              4 ,       $M_Boogie_PontaBotinha6_contact) = 1.00000000000000000E+00 ! [-] Normal orientation
marker.par (              6 ,       $M_Boogie_PontaBotinha6_contact) = 1.00000000000000000E+00 ! [-] Contact point determin. method
marker.par (              7 ,       $M_Boogie_PontaBotinha6_contact) = 9.99999999999999955E-08 ! [-] Solver tolerance

marker.type (                       $M_Boogie_Disco1              ) = 2                       ! Type
marker.parent (                     $M_Boogie_Disco1              ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_Disco1              ) = { $_fix_botinhaX -0.463 } ! Position
marker.pos (              2 ,       $M_Boogie_Disco1              ) = { -$_DistLinhas/2 -0.015 } ! Position
marker.pos (              3 ,       $M_Boogie_Disco1              ) = { $_fix_botinhaZ -0.237 } ! Position

marker.type (                       $M_Boogie_Disco2              ) = 2                       ! Type
marker.parent (                     $M_Boogie_Disco2              ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_Disco2              ) = { $_fix_botinhaX -0.463 } ! Position
marker.pos (              2 ,       $M_Boogie_Disco2              ) = { $_DistLinhas/2 -0.015 } ! Position
marker.pos (              3 ,       $M_Boogie_Disco2              ) = { $_fix_botinhaZ -0.237 } ! Position

marker.type (                       $M_Boogie_Disco3              ) = 2                       ! Type
marker.parent (                     $M_Boogie_Disco3              ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_Disco3              ) = { $_fix_botinhaX -0.463 } ! Position
marker.pos (              2 ,       $M_Boogie_Disco3              ) = { -3*$_DistLinhas/2 -0.015 } ! Position
marker.pos (              3 ,       $M_Boogie_Disco3              ) = { $_fix_botinhaZ -0.237 } ! Position

marker.type (                       $M_Boogie_Disco4              ) = 2                       ! Type
marker.parent (                     $M_Boogie_Disco4              ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_Disco4              ) = { $_fix_botinhaX -0.463 } ! Position
marker.pos (              2 ,       $M_Boogie_Disco4              ) = { 3*$_DistLinhas/2 -0.015 } ! Position
marker.pos (              3 ,       $M_Boogie_Disco4              ) = { $_fix_botinhaZ -0.237 } ! Position

marker.type (                       $M_Boogie_Disco5              ) = 2                       ! Type
marker.parent (                     $M_Boogie_Disco5              ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_Disco5              ) = { $_fix_botinhaX -0.463 } ! Position
marker.pos (              2 ,       $M_Boogie_Disco5              ) = { -5*$_DistLinhas/2 -0.015 } ! Position
marker.pos (              3 ,       $M_Boogie_Disco5              ) = { $_fix_botinhaZ -0.237 } ! Position

marker.type (                       $M_Boogie_Disco6              ) = 2                       ! Type
marker.parent (                     $M_Boogie_Disco6              ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_Disco6              ) = { $_fix_botinhaX -0.463 } ! Position
marker.pos (              2 ,       $M_Boogie_Disco6              ) = { 5*$_DistLinhas/2 -0.015 } ! Position
marker.pos (              3 ,       $M_Boogie_Disco6              ) = { $_fix_botinhaZ -0.237 } ! Position

joint.from (                        $J_Boogie                     ) = $M_Isys                 ! From Marker
joint.to (                          $J_Boogie                     ) = $M_Boogie_BRF           ! To Marker
joint.type (                        $J_Boogie                     ) = 25                      ! Type
joint.st.pos (            1 ,       $J_Boogie                     ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            2 ,       $J_Boogie                     ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            3 ,       $J_Boogie                     ) = 2.00000000000000000E+00 ! Position
joint.st.pos (            4 ,       $J_Boogie                     ) = 1.00000000000000000E+00 ! Position
joint.st.vel (            1 ,       $J_Boogie                     ) = 0.00000000000000000E+00 ! Velocity
joint.st.vel (            2 ,       $J_Boogie                     ) = 0.00000000000000000E+00 ! Velocity
joint.st.vel (            3 ,       $J_Boogie                     ) = 7.12445416791284009E-56 ! Velocity
joint.st.vel (            4 ,       $J_Boogie                     ) = 0.00000000000000000E+00 ! Velocity
joint.st.dep (            1 ,       $J_Boogie                     ) = 0                       ! Dependency state
joint.st.dep (            2 ,       $J_Boogie                     ) = 0                       ! Dependency state
joint.st.dep (            3 ,       $J_Boogie                     ) = 0                       ! Dependency state
joint.st.dep (            4 ,       $J_Boogie                     ) = 0                       ! Dependency state
joint.txt (                         $J_Boogie                     ) = '$_H/2 + $S_esteira1.$_r1' ! Comment
joint.par (               1 ,       $J_Boogie                     ) = 1.00000000000000000E+00 ! [-] Axis of rotation    1
joint.par (               2 ,       $J_Boogie                     ) = 2.00000000000000000E+00 ! [-] Axis of rotation    2
joint.par (               3 ,       $J_Boogie                     ) = 0.00000000000000000E+00 ! [-] Axis of rotation    3
joint.par (               4 ,       $J_Boogie                     ) = 1.00000000000000000E+00 ! [-] Axis of translation 1
joint.par (               5 ,       $J_Boogie                     ) = 3.00000000000000000E+00 ! [-] Axis of translation 2
joint.par (               6 ,       $J_Boogie                     ) = 0.00000000000000000E+00 ! [-] Axis of translation 3
joint.par (               8 ,       $J_Boogie                     ) = 0.00000000000000000E+00 ! [-] Trans-rot sequence

prim.type (                         $P_Boogie                     ) = 1                       ! Type
prim.ref (                          $P_Boogie                     ) = $M_Boogie_BRF           ! Reference Marker
prim.color.r (            1 ,       $P_Boogie                     ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie                     ) = 2.55000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie                     ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie                     ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_Boogie                     ) = 1.00000000000000000E+00 ! Transparency
prim.mp.dens.solid (                $P_Boogie                     ) = 0.00000000000000000E+00 ! Density
prim.par (                2 ,       $P_Boogie                     ) = $_L                     ! [m] Length in X
prim.par (                3 ,       $P_Boogie                     ) = $_W                     ! [m] Length in Y
prim.par (                4 ,       $P_Boogie                     ) = $_H                     ! [m] Length in Z

prim.type (                         $P_Boogie_esteira1D           ) = 39                      ! Type
prim.ref (                          $P_Boogie_esteira1D           ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                2 ,       $P_Boogie_esteira1D           ) = { -$_W/2 - 0.285 +0.07 } ! Position
prim.pos (                3 ,       $P_Boogie_esteira1D           ) = { 0.26 - 0.11 -0.07 + 0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_esteira1D           ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            1 ,       $P_Boogie_esteira1D           ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_esteira1D           ) = 2.55000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_esteira1D           ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_esteira1D           ) = './pecas_stl/chassi_imp.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_esteira1D           ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_esteira1D           ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_esteira2D           ) = 39                      ! Type
prim.ref (                          $P_Boogie_esteira2D           ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                2 ,       $P_Boogie_esteira2D           ) = { $_W/2 +0.285 - 0.07 } ! Position
prim.pos (                3 ,       $P_Boogie_esteira2D           ) = { 0.26 - 0.11 -0.07 +0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_esteira2D           ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            1 ,       $P_Boogie_esteira2D           ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_esteira2D           ) = 2.55000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_esteira2D           ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_esteira2D           ) = './pecas_stl/chassi_imp.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_esteira2D           ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_esteira2D           ) = 1.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_esteira2D           ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_esteira1E           ) = 39                      ! Type
prim.ref (                          $P_Boogie_esteira1E           ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                2 ,       $P_Boogie_esteira1E           ) = { -$_W/2 -0.285 + 0.32 - 0.07 } ! Position
prim.pos (                3 ,       $P_Boogie_esteira1E           ) = { 0.26 - 0.11 -0.07 +0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_esteira1E           ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            1 ,       $P_Boogie_esteira1E           ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_esteira1E           ) = 2.55000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_esteira1E           ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_esteira1E           ) = './pecas_stl/chassi_imp.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_esteira1E           ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_esteira1E           ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_esteira2E           ) = 39                      ! Type
prim.ref (                          $P_Boogie_esteira2E           ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                2 ,       $P_Boogie_esteira2E           ) = { $_W/2 + 0.285 - 0.32 + 0.07 } ! Position
prim.pos (                3 ,       $P_Boogie_esteira2E           ) = { 0.26 - 0.11 -0.07 + 0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_esteira2E           ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            1 ,       $P_Boogie_esteira2E           ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_esteira2E           ) = 2.55000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_esteira2E           ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_esteira2E           ) = './pecas_stl/chassi_imp.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_esteira2E           ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_esteira2E           ) = 1.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_esteira2E           ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_Viga1               ) = 39                      ! Type
prim.ref (                          $P_Boogie_Viga1               ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_Viga1               ) = -5.25000000000000022E-01 ! Position
prim.pos (                2 ,       $P_Boogie_Viga1               ) = 1.14999999999999991E+00 ! Position
prim.pos (                3 ,       $P_Boogie_Viga1               ) = { 0.69 -0.11 -0.06 +0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_Viga1               ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_Viga1               ) = 3.00000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_Viga1               ) = 1.44000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_Viga1               ) = 2.55000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_Viga1               ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_Viga1               ) = './pecas_stl/Viga_Berco.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_Viga1               ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_Viga1               ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_Viga2               ) = 39                      ! Type
prim.ref (                          $P_Boogie_Viga2               ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_Viga2               ) = 5.25000000000000022E-01 ! Position
prim.pos (                2 ,       $P_Boogie_Viga2               ) = 1.14999999999999991E+00 ! Position
prim.pos (                3 ,       $P_Boogie_Viga2               ) = { 0.69 -0.11 -0.06 +0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_Viga2               ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_Viga2               ) = 3.00000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_Viga2               ) = 1.44000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_Viga2               ) = 2.55000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_Viga2               ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_Viga2               ) = './pecas_stl/Viga_Berco.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_Viga2               ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_Viga2               ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_Estrutura           ) = 39                      ! Type
prim.ref (                          $P_Boogie_Estrutura           ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_Estrutura           ) = -5.99999999999999978E-01 ! Position
prim.pos (                2 ,       $P_Boogie_Estrutura           ) = -1.60000000000000009E+00 ! Position
prim.pos (                3 ,       $P_Boogie_Estrutura           ) = $_EstrutZ               ! Position
prim.ang (                1 ,       $P_Boogie_Estrutura           ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_Estrutura           ) = { 180 deg }             ! Angles
prim.ang (                3 ,       $P_Boogie_Estrutura           ) = { 45 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_Estrutura           ) = 9.90000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_Estrutura           ) = 1.84000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_Estrutura           ) = 2.55000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! Transparency
prim.mp.dens.solid (                $P_Boogie_Estrutura           ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_Estrutura           ) = './pecas_stl/estrutura_implementos.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_Estrutura           ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_Estrutura           ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_fix_botinha1        ) = 39                      ! Type
prim.ref (                          $P_Boogie_fix_botinha1        ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_fix_botinha1        ) = $_fix_botinhaX          ! Position
prim.pos (                2 ,       $P_Boogie_fix_botinha1        ) = { -$_DistLinhas/2 -0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_fix_botinha1        ) = $_fix_botinhaZ          ! Position
prim.ang (                1 ,       $P_Boogie_fix_botinha1        ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_fix_botinha1        ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_fix_botinha1        ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_fix_botinha1        ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_fix_botinha1        ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_fix_botinha1        ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_fix_botinha1        ) = './pecas_stl/botinha1_stl/fixacao.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_fix_botinha1        ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_fix_botinha1        ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_fix_botinha2        ) = 39                      ! Type
prim.ref (                          $P_Boogie_fix_botinha2        ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_fix_botinha2        ) = $_fix_botinhaX          ! Position
prim.pos (                2 ,       $P_Boogie_fix_botinha2        ) = { $_DistLinhas/2 -0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_fix_botinha2        ) = $_fix_botinhaZ          ! Position
prim.ang (                1 ,       $P_Boogie_fix_botinha2        ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_fix_botinha2        ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_fix_botinha2        ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_fix_botinha2        ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_fix_botinha2        ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_fix_botinha2        ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_fix_botinha2        ) = './pecas_stl/botinha1_stl/fixacao.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_fix_botinha2        ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_fix_botinha2        ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_fix_botinha3        ) = 39                      ! Type
prim.ref (                          $P_Boogie_fix_botinha3        ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_fix_botinha3        ) = $_fix_botinhaX          ! Position
prim.pos (                2 ,       $P_Boogie_fix_botinha3        ) = { -3*$_DistLinhas/2 -0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_fix_botinha3        ) = $_fix_botinhaZ          ! Position
prim.ang (                1 ,       $P_Boogie_fix_botinha3        ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_fix_botinha3        ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_fix_botinha3        ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_fix_botinha3        ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_fix_botinha3        ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_fix_botinha3        ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_fix_botinha3        ) = './pecas_stl/botinha1_stl/fixacao.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_fix_botinha3        ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_fix_botinha3        ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_fix_botinha4        ) = 39                      ! Type
prim.ref (                          $P_Boogie_fix_botinha4        ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_fix_botinha4        ) = $_fix_botinhaX          ! Position
prim.pos (                2 ,       $P_Boogie_fix_botinha4        ) = { 3*$_DistLinhas/2 -0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_fix_botinha4        ) = $_fix_botinhaZ          ! Position
prim.ang (                1 ,       $P_Boogie_fix_botinha4        ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_fix_botinha4        ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_fix_botinha4        ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_fix_botinha4        ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_fix_botinha4        ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_fix_botinha4        ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_fix_botinha4        ) = './pecas_stl/botinha1_stl/fixacao.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_fix_botinha4        ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_fix_botinha4        ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_fix_botinha5        ) = 39                      ! Type
prim.ref (                          $P_Boogie_fix_botinha5        ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_fix_botinha5        ) = $_fix_botinhaX          ! Position
prim.pos (                2 ,       $P_Boogie_fix_botinha5        ) = { -5*$_DistLinhas/2 -0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_fix_botinha5        ) = $_fix_botinhaZ          ! Position
prim.ang (                1 ,       $P_Boogie_fix_botinha5        ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_fix_botinha5        ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_fix_botinha5        ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_fix_botinha5        ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_fix_botinha5        ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_fix_botinha5        ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_fix_botinha5        ) = './pecas_stl/botinha1_stl/fixacao.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_fix_botinha5        ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_fix_botinha5        ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_fix_botinha6        ) = 39                      ! Type
prim.ref (                          $P_Boogie_fix_botinha6        ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_fix_botinha6        ) = $_fix_botinhaX          ! Position
prim.pos (                2 ,       $P_Boogie_fix_botinha6        ) = { 5*$_DistLinhas/2 -0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_fix_botinha6        ) = $_fix_botinhaZ          ! Position
prim.ang (                1 ,       $P_Boogie_fix_botinha6        ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_fix_botinha6        ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_fix_botinha6        ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_fix_botinha6        ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_fix_botinha6        ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_fix_botinha6        ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_fix_botinha6        ) = './pecas_stl/botinha1_stl/fixacao.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_fix_botinha6        ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_fix_botinha6        ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_botinha1            ) = 39                      ! Type
prim.ref (                          $P_Boogie_botinha1            ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_botinha1            ) = { $_fix_botinhaX +0.035 } ! Position
prim.pos (                2 ,       $P_Boogie_botinha1            ) = { -$_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_botinha1            ) = { $_fix_botinhaZ +0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_botinha1            ) = { 90 deg }              ! Angles
prim.ang (                3 ,       $P_Boogie_botinha1            ) = { 180 deg }             ! Angles
prim.color.r (            1 ,       $P_Boogie_botinha1            ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_botinha1            ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_botinha1            ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_botinha1            ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_botinha1            ) = './pecas_stl/botinha1_stl/botinha.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_botinha1            ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_botinha2            ) = 39                      ! Type
prim.ref (                          $P_Boogie_botinha2            ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_botinha2            ) = { $_fix_botinhaX +0.035 } ! Position
prim.pos (                2 ,       $P_Boogie_botinha2            ) = { $_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_botinha2            ) = { $_fix_botinhaZ +0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_botinha2            ) = { 90 deg }              ! Angles
prim.ang (                3 ,       $P_Boogie_botinha2            ) = { 180 deg }             ! Angles
prim.color.r (            1 ,       $P_Boogie_botinha2            ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_botinha2            ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_botinha2            ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_botinha2            ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_botinha2            ) = './pecas_stl/botinha1_stl/botinha.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_botinha2            ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_botinha3            ) = 39                      ! Type
prim.ref (                          $P_Boogie_botinha3            ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_botinha3            ) = { $_fix_botinhaX +0.035 } ! Position
prim.pos (                2 ,       $P_Boogie_botinha3            ) = { -3*$_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_botinha3            ) = { $_fix_botinhaZ +0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_botinha3            ) = { 90 deg }              ! Angles
prim.ang (                3 ,       $P_Boogie_botinha3            ) = { 180 deg }             ! Angles
prim.color.r (            1 ,       $P_Boogie_botinha3            ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_botinha3            ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_botinha3            ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_botinha3            ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_botinha3            ) = './pecas_stl/botinha1_stl/botinha.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_botinha3            ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_botinha4            ) = 39                      ! Type
prim.ref (                          $P_Boogie_botinha4            ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_botinha4            ) = { $_fix_botinhaX +0.035 } ! Position
prim.pos (                2 ,       $P_Boogie_botinha4            ) = { 3*$_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_botinha4            ) = { $_fix_botinhaZ +0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_botinha4            ) = { 90 deg }              ! Angles
prim.ang (                3 ,       $P_Boogie_botinha4            ) = { 180 deg }             ! Angles
prim.color.r (            1 ,       $P_Boogie_botinha4            ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_botinha4            ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_botinha4            ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_botinha4            ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_botinha4            ) = './pecas_stl/botinha1_stl/botinha.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_botinha4            ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_botinha5            ) = 39                      ! Type
prim.ref (                          $P_Boogie_botinha5            ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_botinha5            ) = { $_fix_botinhaX +0.035 } ! Position
prim.pos (                2 ,       $P_Boogie_botinha5            ) = { -5*$_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_botinha5            ) = { $_fix_botinhaZ +0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_botinha5            ) = { 90 deg }              ! Angles
prim.ang (                3 ,       $P_Boogie_botinha5            ) = { 180 deg }             ! Angles
prim.color.r (            1 ,       $P_Boogie_botinha5            ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_botinha5            ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_botinha5            ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_botinha5            ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_botinha5            ) = './pecas_stl/botinha1_stl/botinha.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_botinha5            ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_botinha6            ) = 39                      ! Type
prim.ref (                          $P_Boogie_botinha6            ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_botinha6            ) = { $_fix_botinhaX +0.035 } ! Position
prim.pos (                2 ,       $P_Boogie_botinha6            ) = { 5*$_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_botinha6            ) = { $_fix_botinhaZ +0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_botinha6            ) = { 90 deg }              ! Angles
prim.ang (                3 ,       $P_Boogie_botinha6            ) = { 180 deg }             ! Angles
prim.color.r (            1 ,       $P_Boogie_botinha6            ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_botinha6            ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_botinha6            ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_botinha6            ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_botinha6            ) = './pecas_stl/botinha1_stl/botinha.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_botinha6            ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_mola_disco5         ) = 39                      ! Type
prim.ref (                          $P_Boogie_mola_disco5         ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_mola_disco5         ) = { $_fix_botinhaX + 0.12 } ! Position
prim.pos (                2 ,       $P_Boogie_mola_disco5         ) = { -5*$_DistLinhas/2 -0.05 } ! Position
prim.pos (                3 ,       $P_Boogie_mola_disco5         ) = { $_fix_botinhaZ - 0.05 } ! Position
prim.ang (                1 ,       $P_Boogie_mola_disco5         ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_mola_disco5         ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_mola_disco5         ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_mola_disco5         ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_mola_disco5         ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_mola_disco5         ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_mola_disco5         ) = './pecas_stl/disco_de_corte_stl/mola.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_mola_disco5         ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_mola_disco5         ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_mola_disco3         ) = 39                      ! Type
prim.ref (                          $P_Boogie_mola_disco3         ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_mola_disco3         ) = { $_fix_botinhaX + 0.12 } ! Position
prim.pos (                2 ,       $P_Boogie_mola_disco3         ) = { -3*$_DistLinhas/2 -0.05 } ! Position
prim.pos (                3 ,       $P_Boogie_mola_disco3         ) = { $_fix_botinhaZ - 0.05 } ! Position
prim.ang (                1 ,       $P_Boogie_mola_disco3         ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_mola_disco3         ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_mola_disco3         ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_mola_disco3         ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_mola_disco3         ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_mola_disco3         ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_mola_disco3         ) = './pecas_stl/disco_de_corte_stl/mola.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_mola_disco3         ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_mola_disco3         ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_mola_disco1         ) = 39                      ! Type
prim.ref (                          $P_Boogie_mola_disco1         ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_mola_disco1         ) = { $_fix_botinhaX + 0.12 } ! Position
prim.pos (                2 ,       $P_Boogie_mola_disco1         ) = { -$_DistLinhas/2 -0.05 } ! Position
prim.pos (                3 ,       $P_Boogie_mola_disco1         ) = { $_fix_botinhaZ - 0.05 } ! Position
prim.ang (                1 ,       $P_Boogie_mola_disco1         ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_mola_disco1         ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_mola_disco1         ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_mola_disco1         ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_mola_disco1         ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_mola_disco1         ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_mola_disco1         ) = './pecas_stl/disco_de_corte_stl/mola.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_mola_disco1         ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_mola_disco1         ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_mola_disco2         ) = 39                      ! Type
prim.ref (                          $P_Boogie_mola_disco2         ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_mola_disco2         ) = { $_fix_botinhaX + 0.12 } ! Position
prim.pos (                2 ,       $P_Boogie_mola_disco2         ) = { $_DistLinhas/2 -0.05 } ! Position
prim.pos (                3 ,       $P_Boogie_mola_disco2         ) = { $_fix_botinhaZ - 0.05 } ! Position
prim.ang (                1 ,       $P_Boogie_mola_disco2         ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_mola_disco2         ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_mola_disco2         ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_mola_disco2         ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_mola_disco2         ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_mola_disco2         ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_mola_disco2         ) = './pecas_stl/disco_de_corte_stl/mola.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_mola_disco2         ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_mola_disco2         ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_mola_disco4         ) = 39                      ! Type
prim.ref (                          $P_Boogie_mola_disco4         ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_mola_disco4         ) = { $_fix_botinhaX + 0.12 } ! Position
prim.pos (                2 ,       $P_Boogie_mola_disco4         ) = { 3*$_DistLinhas/2 -0.05 } ! Position
prim.pos (                3 ,       $P_Boogie_mola_disco4         ) = { $_fix_botinhaZ - 0.05 } ! Position
prim.ang (                1 ,       $P_Boogie_mola_disco4         ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_mola_disco4         ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_mola_disco4         ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_mola_disco4         ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_mola_disco4         ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_mola_disco4         ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_mola_disco4         ) = './pecas_stl/disco_de_corte_stl/mola.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_mola_disco4         ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_mola_disco4         ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_mola_disco6         ) = 39                      ! Type
prim.ref (                          $P_Boogie_mola_disco6         ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_mola_disco6         ) = { $_fix_botinhaX + 0.12 } ! Position
prim.pos (                2 ,       $P_Boogie_mola_disco6         ) = { 5*$_DistLinhas/2 -0.05 } ! Position
prim.pos (                3 ,       $P_Boogie_mola_disco6         ) = { $_fix_botinhaZ - 0.05 } ! Position
prim.ang (                1 ,       $P_Boogie_mola_disco6         ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_mola_disco6         ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_mola_disco6         ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_mola_disco6         ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_mola_disco6         ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_mola_disco6         ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_mola_disco6         ) = './pecas_stl/disco_de_corte_stl/mola.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_mola_disco6         ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_mola_disco6         ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_bracos_disco1       ) = 39                      ! Type
prim.ref (                          $P_Boogie_bracos_disco1       ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_bracos_disco1       ) = { $_fix_botinhaX -0.467 } ! Position
prim.pos (                2 ,       $P_Boogie_bracos_disco1       ) = { -$_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_bracos_disco1       ) = { $_fix_botinhaZ - 0.236 } ! Position
prim.ang (                1 ,       $P_Boogie_bracos_disco1       ) = { 270 deg }             ! Angles
prim.ang (                3 ,       $P_Boogie_bracos_disco1       ) = { (180 + 28) deg }      ! Angles
prim.color.r (            1 ,       $P_Boogie_bracos_disco1       ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_bracos_disco1       ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_bracos_disco1       ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_bracos_disco1       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_bracos_disco1       ) = './pecas_stl/disco_de_corte_stl/bracos.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_bracos_disco1       ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_bracos_disco1       ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_bracos_disco2       ) = 39                      ! Type
prim.ref (                          $P_Boogie_bracos_disco2       ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_bracos_disco2       ) = { $_fix_botinhaX -0.467 } ! Position
prim.pos (                2 ,       $P_Boogie_bracos_disco2       ) = { $_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_bracos_disco2       ) = { $_fix_botinhaZ - 0.236 } ! Position
prim.ang (                1 ,       $P_Boogie_bracos_disco2       ) = { 270 deg }             ! Angles
prim.ang (                3 ,       $P_Boogie_bracos_disco2       ) = { (180 + 28) deg }      ! Angles
prim.color.r (            1 ,       $P_Boogie_bracos_disco2       ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_bracos_disco2       ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_bracos_disco2       ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_bracos_disco2       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_bracos_disco2       ) = './pecas_stl/disco_de_corte_stl/bracos.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_bracos_disco2       ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_bracos_disco2       ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_bracos_disco3       ) = 39                      ! Type
prim.ref (                          $P_Boogie_bracos_disco3       ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_bracos_disco3       ) = { $_fix_botinhaX -0.467 } ! Position
prim.pos (                2 ,       $P_Boogie_bracos_disco3       ) = { -3*$_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_bracos_disco3       ) = { $_fix_botinhaZ - 0.236 } ! Position
prim.ang (                1 ,       $P_Boogie_bracos_disco3       ) = { 270 deg }             ! Angles
prim.ang (                3 ,       $P_Boogie_bracos_disco3       ) = { (180 + 28) deg }      ! Angles
prim.color.r (            1 ,       $P_Boogie_bracos_disco3       ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_bracos_disco3       ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_bracos_disco3       ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_bracos_disco3       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_bracos_disco3       ) = './pecas_stl/disco_de_corte_stl/bracos.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_bracos_disco3       ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_bracos_disco3       ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_bracos_disco4       ) = 39                      ! Type
prim.ref (                          $P_Boogie_bracos_disco4       ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_bracos_disco4       ) = { $_fix_botinhaX -0.467 } ! Position
prim.pos (                2 ,       $P_Boogie_bracos_disco4       ) = { 3*$_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_bracos_disco4       ) = { $_fix_botinhaZ - 0.236 } ! Position
prim.ang (                1 ,       $P_Boogie_bracos_disco4       ) = { 270 deg }             ! Angles
prim.ang (                3 ,       $P_Boogie_bracos_disco4       ) = { (180 + 28) deg }      ! Angles
prim.color.r (            1 ,       $P_Boogie_bracos_disco4       ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_bracos_disco4       ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_bracos_disco4       ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_bracos_disco4       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_bracos_disco4       ) = './pecas_stl/disco_de_corte_stl/bracos.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_bracos_disco4       ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_bracos_disco4       ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_bracos_disco5       ) = 39                      ! Type
prim.ref (                          $P_Boogie_bracos_disco5       ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_bracos_disco5       ) = { $_fix_botinhaX -0.467 } ! Position
prim.pos (                2 ,       $P_Boogie_bracos_disco5       ) = { -5*$_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_bracos_disco5       ) = { $_fix_botinhaZ - 0.236 } ! Position
prim.ang (                1 ,       $P_Boogie_bracos_disco5       ) = { 270 deg }             ! Angles
prim.ang (                3 ,       $P_Boogie_bracos_disco5       ) = { (180 + 28) deg }      ! Angles
prim.color.r (            1 ,       $P_Boogie_bracos_disco5       ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_bracos_disco5       ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_bracos_disco5       ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_bracos_disco5       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_bracos_disco5       ) = './pecas_stl/disco_de_corte_stl/bracos.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_bracos_disco5       ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_bracos_disco5       ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_bracos_disco6       ) = 39                      ! Type
prim.ref (                          $P_Boogie_bracos_disco6       ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_bracos_disco6       ) = { $_fix_botinhaX -0.467 } ! Position
prim.pos (                2 ,       $P_Boogie_bracos_disco6       ) = { 6*$_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_bracos_disco6       ) = { $_fix_botinhaZ - 0.236 } ! Position
prim.ang (                1 ,       $P_Boogie_bracos_disco6       ) = { 270 deg }             ! Angles
prim.ang (                3 ,       $P_Boogie_bracos_disco6       ) = { (180 + 28) deg }      ! Angles
prim.color.r (            1 ,       $P_Boogie_bracos_disco6       ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_bracos_disco6       ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_bracos_disco6       ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_bracos_disco6       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_bracos_disco6       ) = './pecas_stl/disco_de_corte_stl/bracos.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_bracos_disco6       ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_bracos_disco6       ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_CBotinha1           ) = 15                      ! Type
prim.ref (                          $P_Boogie_CBotinha1           ) = $M_Boogie_PontaBotinha1 ! Reference Marker
prim.color.r (            1 ,       $P_Boogie_CBotinha1           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_Boogie_CBotinha1           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_CBotinha1           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_Boogie_CBotinha1           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_CBotinha1           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_Boogie_CBotinha1           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_CBotinha1           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_Boogie_CBotinha1           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_Boogie_CBotinha1           ) = 1.00000000000000000E+00 ! Transparency
prim.par (                2 ,       $P_Boogie_CBotinha1           ) = $_rarb                  ! [m] Radius
prim.par (                3 ,       $P_Boogie_CBotinha1           ) = 0.00000000000000000E+00 ! [rad] Start angle
prim.par (                4 ,       $P_Boogie_CBotinha1           ) = 0.00000000000000000E+00 ! [rad] Delta angle
prim.par (                5 ,       $P_Boogie_CBotinha1           ) = 2.40000000000000000E+01 ! [-] Number of meridians

prim.type (                         $P_Boogie_CBotinha2           ) = 15                      ! Type
prim.ref (                          $P_Boogie_CBotinha2           ) = $M_Boogie_PontaBotinha2 ! Reference Marker
prim.color.r (            1 ,       $P_Boogie_CBotinha2           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_Boogie_CBotinha2           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_CBotinha2           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_Boogie_CBotinha2           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_CBotinha2           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_Boogie_CBotinha2           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_CBotinha2           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_Boogie_CBotinha2           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_Boogie_CBotinha2           ) = 1.00000000000000000E+00 ! Transparency
prim.par (                2 ,       $P_Boogie_CBotinha2           ) = $_rarb                  ! [m] Radius
prim.par (                3 ,       $P_Boogie_CBotinha2           ) = 0.00000000000000000E+00 ! [rad] Start angle
prim.par (                4 ,       $P_Boogie_CBotinha2           ) = 0.00000000000000000E+00 ! [rad] Delta angle
prim.par (                5 ,       $P_Boogie_CBotinha2           ) = 2.40000000000000000E+01 ! [-] Number of meridians

prim.type (                         $P_Boogie_CBotinha3           ) = 15                      ! Type
prim.ref (                          $P_Boogie_CBotinha3           ) = $M_Boogie_PontaBotinha3 ! Reference Marker
prim.color.r (            1 ,       $P_Boogie_CBotinha3           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_Boogie_CBotinha3           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_CBotinha3           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_Boogie_CBotinha3           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_CBotinha3           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_Boogie_CBotinha3           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_CBotinha3           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_Boogie_CBotinha3           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_Boogie_CBotinha3           ) = 1.00000000000000000E+00 ! Transparency
prim.par (                2 ,       $P_Boogie_CBotinha3           ) = $_rarb                  ! [m] Radius
prim.par (                3 ,       $P_Boogie_CBotinha3           ) = 0.00000000000000000E+00 ! [rad] Start angle
prim.par (                4 ,       $P_Boogie_CBotinha3           ) = 0.00000000000000000E+00 ! [rad] Delta angle
prim.par (                5 ,       $P_Boogie_CBotinha3           ) = 2.40000000000000000E+01 ! [-] Number of meridians

prim.type (                         $P_Boogie_CBotinha4           ) = 15                      ! Type
prim.ref (                          $P_Boogie_CBotinha4           ) = $M_Boogie_PontaBotinha4 ! Reference Marker
prim.color.r (            1 ,       $P_Boogie_CBotinha4           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_Boogie_CBotinha4           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_CBotinha4           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_Boogie_CBotinha4           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_CBotinha4           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_Boogie_CBotinha4           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_CBotinha4           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_Boogie_CBotinha4           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_Boogie_CBotinha4           ) = 1.00000000000000000E+00 ! Transparency
prim.par (                2 ,       $P_Boogie_CBotinha4           ) = $_rarb                  ! [m] Radius
prim.par (                3 ,       $P_Boogie_CBotinha4           ) = 0.00000000000000000E+00 ! [rad] Start angle
prim.par (                4 ,       $P_Boogie_CBotinha4           ) = 0.00000000000000000E+00 ! [rad] Delta angle
prim.par (                5 ,       $P_Boogie_CBotinha4           ) = 2.40000000000000000E+01 ! [-] Number of meridians

prim.type (                         $P_Boogie_CBotinha5           ) = 15                      ! Type
prim.ref (                          $P_Boogie_CBotinha5           ) = $M_Boogie_PontaBotinha5 ! Reference Marker
prim.color.r (            1 ,       $P_Boogie_CBotinha5           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_Boogie_CBotinha5           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_CBotinha5           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_Boogie_CBotinha5           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_CBotinha5           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_Boogie_CBotinha5           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_CBotinha5           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_Boogie_CBotinha5           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_Boogie_CBotinha5           ) = 1.00000000000000000E+00 ! Transparency
prim.par (                2 ,       $P_Boogie_CBotinha5           ) = $_rarb                  ! [m] Radius
prim.par (                3 ,       $P_Boogie_CBotinha5           ) = 0.00000000000000000E+00 ! [rad] Start angle
prim.par (                4 ,       $P_Boogie_CBotinha5           ) = 0.00000000000000000E+00 ! [rad] Delta angle
prim.par (                5 ,       $P_Boogie_CBotinha5           ) = 2.40000000000000000E+01 ! [-] Number of meridians

prim.type (                         $P_Boogie_CBotinha6           ) = 15                      ! Type
prim.ref (                          $P_Boogie_CBotinha6           ) = $M_Boogie_PontaBotinha6 ! Reference Marker
prim.color.r (            1 ,       $P_Boogie_CBotinha6           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.r (            2 ,       $P_Boogie_CBotinha6           ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_CBotinha6           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.g (            2 ,       $P_Boogie_CBotinha6           ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_CBotinha6           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.b (            2 ,       $P_Boogie_CBotinha6           ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_CBotinha6           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.color.t (            2 ,       $P_Boogie_CBotinha6           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_Boogie_CBotinha6           ) = 1.00000000000000000E+00 ! Transparency
prim.par (                2 ,       $P_Boogie_CBotinha6           ) = $_rarb                  ! [m] Radius
prim.par (                3 ,       $P_Boogie_CBotinha6           ) = 0.00000000000000000E+00 ! [rad] Start angle
prim.par (                4 ,       $P_Boogie_CBotinha6           ) = 0.00000000000000000E+00 ! [rad] Delta angle
prim.par (                5 ,       $P_Boogie_CBotinha6           ) = 2.40000000000000000E+01 ! [-] Number of meridians

prim.type (                         $P_Boogie_moto_gerador        ) = 39                      ! Type
prim.ref (                          $P_Boogie_moto_gerador        ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_moto_gerador        ) = 5.99999999999999978E-01 ! Position
prim.pos (                2 ,       $P_Boogie_moto_gerador        ) = 1.49999999999999994E-01 ! Position
prim.pos (                3 ,       $P_Boogie_moto_gerador        ) = 1.30000000000000004E+00 ! Position
prim.ang (                1 ,       $P_Boogie_moto_gerador        ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_moto_gerador        ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_moto_gerador        ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_moto_gerador        ) = 2.55000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_moto_gerador        ) = 2.55000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_moto_gerador        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_moto_gerador        ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_moto_gerador        ) = './pecas_stl/Conjunto Moto Gerador.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_moto_gerador        ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_moto_gerador        ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_moto_gerador        ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_moto_gerador        ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_moto_gerador        ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_moto_gerador        ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_moto_gerador        ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_moto_gerador        ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_moto_gerador        ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_moto_gerador        ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_moto_gerador        ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_moto_gerador        ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_moto_gerador        ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_caixa_adubo         ) = 39                      ! Type
prim.ref (                          $P_Boogie_caixa_adubo         ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_caixa_adubo         ) = 0.00000000000000000E+00 ! Position
prim.pos (                2 ,       $P_Boogie_caixa_adubo         ) = 0.00000000000000000E+00 ! Position
prim.pos (                3 ,       $P_Boogie_caixa_adubo         ) = 1.00000000000000006E-01 ! Position
prim.ang (                1 ,       $P_Boogie_caixa_adubo         ) = 0.00000000000000000E+00 ! Angles
prim.ang (                2 ,       $P_Boogie_caixa_adubo         ) = 0.00000000000000000E+00 ! Angles
prim.ang (                3 ,       $P_Boogie_caixa_adubo         ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_caixa_adubo         ) = 6.00000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_caixa_adubo         ) = 1.79000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_caixa_adubo         ) = 1.13000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_caixa_adubo         ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_Boogie_caixa_adubo         ) = 0.00000000000000000E+00 ! Transparency
prim.mp.dens.solid (                $P_Boogie_caixa_adubo         ) = 5.00000000000000000E+02 ! Density
prim.par (                2 ,       $P_Boogie_caixa_adubo         ) = './pecas_stl/caixa_de_adubo.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_caixa_adubo         ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_caixa_adubo         ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_caixa_adubo         ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_caixa_adubo         ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_caixa_adubo         ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_caixa_adubo         ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_caixa_adubo         ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_caixa_adubo         ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_caixa_adubo         ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_caixa_adubo         ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_caixa_adubo         ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_caixa_adubo         ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_caixa_adubo         ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_caixa_semente       ) = 39                      ! Type
prim.ref (                          $P_Boogie_caixa_semente       ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_caixa_semente       ) = -1.35000000000000009E+00 ! Position
prim.pos (                3 ,       $P_Boogie_caixa_semente       ) = 1.19999999999999996E+00 ! Position
prim.ang (                1 ,       $P_Boogie_caixa_semente       ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_caixa_semente       ) = 0.00000000000000000E+00 ! Angles
prim.ang (                3 ,       $P_Boogie_caixa_semente       ) = { 270 deg }             ! Angles
prim.color.r (            1 ,       $P_Boogie_caixa_semente       ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_caixa_semente       ) = 1.65000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_caixa_semente       ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_caixa_semente       ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_Boogie_caixa_semente       ) = 0.00000000000000000E+00 ! Transparency
prim.mp.dens.solid (                $P_Boogie_caixa_semente       ) = 5.00000000000000000E+02 ! Density
prim.par (                2 ,       $P_Boogie_caixa_semente       ) = './pecas_stl/caixa_de_sementes.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_caixa_semente       ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_caixa_semente       ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_caixa_semente       ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_caixa_semente       ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_caixa_semente       ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_caixa_semente       ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_caixa_semente       ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_caixa_semente       ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_caixa_semente       ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_caixa_semente       ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_caixa_semente       ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_caixa_semente       ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_caixa_semente       ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_ElevadorA1          ) = 39                      ! Type
prim.ref (                          $P_Boogie_ElevadorA1          ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_ElevadorA1          ) = -5.99999999999999978E-01 ! Position
prim.pos (                2 ,       $P_Boogie_ElevadorA1          ) = { -2*$_DistLinhas }     ! Position
prim.pos (                3 ,       $P_Boogie_ElevadorA1          ) = 6.50000000000000022E-01 ! Position
prim.ang (                1 ,       $P_Boogie_ElevadorA1          ) = { 270 deg }             ! Angles
prim.color.r (            1 ,       $P_Boogie_ElevadorA1          ) = 0.00000000000000000E+00 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_ElevadorA1          ) = 0.00000000000000000E+00 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_ElevadorA1          ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_ElevadorA1          ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_ElevadorA1          ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_ElevadorA1          ) = './pecas_stl/Elevador_A.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_ElevadorA1          ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_ElevadorA1          ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_ElevadorA1          ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_ElevadorA1          ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_ElevadorA1          ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_ElevadorA1          ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_ElevadorA1          ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_ElevadorA1          ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_ElevadorA1          ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_ElevadorA1          ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_ElevadorA1          ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_ElevadorA1          ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_ElevadorA1          ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_ElevadorA2          ) = 39                      ! Type
prim.ref (                          $P_Boogie_ElevadorA2          ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_ElevadorA2          ) = -5.99999999999999978E-01 ! Position
prim.pos (                2 ,       $P_Boogie_ElevadorA2          ) = { 2*$_DistLinhas }      ! Position
prim.pos (                3 ,       $P_Boogie_ElevadorA2          ) = 6.50000000000000022E-01 ! Position
prim.ang (                1 ,       $P_Boogie_ElevadorA2          ) = { 270 deg }             ! Angles
prim.color.r (            1 ,       $P_Boogie_ElevadorA2          ) = 0.00000000000000000E+00 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_ElevadorA2          ) = 0.00000000000000000E+00 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_ElevadorA2          ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_ElevadorA2          ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_ElevadorA2          ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_ElevadorA2          ) = './pecas_stl/Elevador_A.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_ElevadorA2          ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_ElevadorA2          ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_ElevadorA2          ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_ElevadorA2          ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_ElevadorA2          ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_ElevadorA2          ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_ElevadorA2          ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_ElevadorA2          ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_ElevadorA2          ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_ElevadorA2          ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_ElevadorA2          ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_ElevadorA2          ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_ElevadorA2          ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_ElevadorA3          ) = 39                      ! Type
prim.ref (                          $P_Boogie_ElevadorA3          ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_ElevadorA3          ) = { -0.6 + 1.27 }         ! Position
prim.pos (                2 ,       $P_Boogie_ElevadorA3          ) = { -2*$_DistLinhas }     ! Position
prim.pos (                3 ,       $P_Boogie_ElevadorA3          ) = 6.50000000000000022E-01 ! Position
prim.ang (                1 ,       $P_Boogie_ElevadorA3          ) = { 270 deg }             ! Angles
prim.color.r (            1 ,       $P_Boogie_ElevadorA3          ) = 0.00000000000000000E+00 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_ElevadorA3          ) = 0.00000000000000000E+00 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_ElevadorA3          ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_ElevadorA3          ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_ElevadorA3          ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_ElevadorA3          ) = './pecas_stl/Elevador_A.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_ElevadorA3          ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_ElevadorA3          ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_ElevadorA3          ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_ElevadorA3          ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_ElevadorA3          ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_ElevadorA3          ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_ElevadorA3          ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_ElevadorA3          ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_ElevadorA3          ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_ElevadorA3          ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_ElevadorA3          ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_ElevadorA3          ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_ElevadorA3          ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_ElevadorA4          ) = 39                      ! Type
prim.ref (                          $P_Boogie_ElevadorA4          ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_ElevadorA4          ) = { -0.6 + 1.27 }         ! Position
prim.pos (                2 ,       $P_Boogie_ElevadorA4          ) = { 2*$_DistLinhas }      ! Position
prim.pos (                3 ,       $P_Boogie_ElevadorA4          ) = 6.50000000000000022E-01 ! Position
prim.ang (                1 ,       $P_Boogie_ElevadorA4          ) = { 270 deg }             ! Angles
prim.color.r (            1 ,       $P_Boogie_ElevadorA4          ) = 0.00000000000000000E+00 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_ElevadorA4          ) = 0.00000000000000000E+00 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_ElevadorA4          ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_ElevadorA4          ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_ElevadorA4          ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_ElevadorA4          ) = './pecas_stl/Elevador_A.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_ElevadorA4          ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_ElevadorA4          ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_ElevadorA4          ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_ElevadorA4          ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_ElevadorA4          ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_ElevadorA4          ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_ElevadorA4          ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_ElevadorA4          ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_ElevadorA4          ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_ElevadorA4          ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_ElevadorA4          ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_ElevadorA4          ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_ElevadorA4          ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_ElevadorB1          ) = 39                      ! Type
prim.ref (                          $P_Boogie_ElevadorB1          ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_ElevadorB1          ) = -1.49999999999999994E-01 ! Position
prim.pos (                2 ,       $P_Boogie_ElevadorB1          ) = { -2*$_DistLinhas }     ! Position
prim.pos (                3 ,       $P_Boogie_ElevadorB1          ) = 1.00000000000000002E-02 ! Position
prim.ang (                1 ,       $P_Boogie_ElevadorB1          ) = { 270 deg }             ! Angles
prim.color.r (            1 ,       $P_Boogie_ElevadorB1          ) = 0.00000000000000000E+00 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_ElevadorB1          ) = 0.00000000000000000E+00 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_ElevadorB1          ) = 2.55000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_ElevadorB1          ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_ElevadorB1          ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_ElevadorB1          ) = './pecas_stl/Elevador_B.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_ElevadorB1          ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_ElevadorB1          ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_ElevadorB1          ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_ElevadorB1          ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_ElevadorB1          ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_ElevadorB1          ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_ElevadorB1          ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_ElevadorB1          ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_ElevadorB1          ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_ElevadorB1          ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_ElevadorB1          ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_ElevadorB1          ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_ElevadorB1          ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_ElevadorB2          ) = 39                      ! Type
prim.ref (                          $P_Boogie_ElevadorB2          ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_ElevadorB2          ) = -1.49999999999999994E-01 ! Position
prim.pos (                2 ,       $P_Boogie_ElevadorB2          ) = { 2*$_DistLinhas }      ! Position
prim.pos (                3 ,       $P_Boogie_ElevadorB2          ) = 1.00000000000000002E-02 ! Position
prim.ang (                1 ,       $P_Boogie_ElevadorB2          ) = { 270 deg }             ! Angles
prim.color.r (            1 ,       $P_Boogie_ElevadorB2          ) = 0.00000000000000000E+00 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_ElevadorB2          ) = 0.00000000000000000E+00 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_ElevadorB2          ) = 2.55000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_ElevadorB2          ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_ElevadorB2          ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_ElevadorB2          ) = './pecas_stl/Elevador_B.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_ElevadorB2          ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_ElevadorB2          ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_ElevadorB2          ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_ElevadorB2          ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_ElevadorB2          ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_ElevadorB2          ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_ElevadorB2          ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_ElevadorB2          ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_ElevadorB2          ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_ElevadorB2          ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_ElevadorB2          ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_ElevadorB2          ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_ElevadorB2          ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_ElevadorB3          ) = 39                      ! Type
prim.ref (                          $P_Boogie_ElevadorB3          ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_ElevadorB3          ) = { -0.15 + 1.27 }        ! Position
prim.pos (                2 ,       $P_Boogie_ElevadorB3          ) = { -2*$_DistLinhas }     ! Position
prim.pos (                3 ,       $P_Boogie_ElevadorB3          ) = -5.00000000000000028E-02 ! Position
prim.ang (                1 ,       $P_Boogie_ElevadorB3          ) = { 270 deg }             ! Angles
prim.color.r (            1 ,       $P_Boogie_ElevadorB3          ) = 0.00000000000000000E+00 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_ElevadorB3          ) = 0.00000000000000000E+00 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_ElevadorB3          ) = 2.55000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_ElevadorB3          ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_ElevadorB3          ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_ElevadorB3          ) = './pecas_stl/Elevador_B.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_ElevadorB3          ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_ElevadorB3          ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_ElevadorB3          ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_ElevadorB3          ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_ElevadorB3          ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_ElevadorB3          ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_ElevadorB3          ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_ElevadorB3          ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_ElevadorB3          ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_ElevadorB3          ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_ElevadorB3          ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_ElevadorB3          ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_ElevadorB3          ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_ElevadorB4          ) = 39                      ! Type
prim.ref (                          $P_Boogie_ElevadorB4          ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_ElevadorB4          ) = { -0.15 + 1.27 }        ! Position
prim.pos (                2 ,       $P_Boogie_ElevadorB4          ) = { 2*$_DistLinhas }      ! Position
prim.pos (                3 ,       $P_Boogie_ElevadorB4          ) = -5.00000000000000028E-02 ! Position
prim.ang (                1 ,       $P_Boogie_ElevadorB4          ) = { 270 deg }             ! Angles
prim.color.r (            1 ,       $P_Boogie_ElevadorB4          ) = 0.00000000000000000E+00 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_ElevadorB4          ) = 0.00000000000000000E+00 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_ElevadorB4          ) = 2.55000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_ElevadorB4          ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_ElevadorB4          ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_ElevadorB4          ) = './pecas_stl/Elevador_B.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_ElevadorB4          ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_ElevadorB4          ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_ElevadorB4          ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_ElevadorB4          ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_ElevadorB4          ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_ElevadorB4          ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_ElevadorB4          ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_ElevadorB4          ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_ElevadorB4          ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_ElevadorB4          ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_ElevadorB4          ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_ElevadorB4          ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_ElevadorB4          ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation


!**********************************************************************
! Force Elements
!**********************************************************************
force.type (                        $F_tau11                      ) = 50                      ! Type
force.from (                        $F_tau11                      ) = $M_Isys                 ! From Marker
force.to (                          $F_tau11                      ) = $S_esteira1.$M_Roda1_BRF ! To Marker
force.disabled (                    $F_tau11                      ) = 0                       ! Disabled
force.par (               1 ,       $F_tau11                      ) = $M_Boogie_BRF           ! [-] Reference Marker for calc.
force.par (               3 ,       $F_tau11                      ) = null                    ! [-] Expression for Fx
force.par (               4 ,       $F_tau11                      ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_tau11                      ) = null                    ! [-] Expression for Fz
force.par (               6 ,       $F_tau11                      ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_tau11                      ) = $X_tau11                ! [-] Expression for Ly
force.par (               8 ,       $F_tau11                      ) = null                    ! [-] Expression for Lz

force.type (                        $F_tau12                      ) = 50                      ! Type
force.from (                        $F_tau12                      ) = $M_Isys                 ! From Marker
force.to (                          $F_tau12                      ) = $S_esteira2.$M_Roda1_BRF ! To Marker
force.disabled (                    $F_tau12                      ) = 0                       ! Disabled
force.par (               1 ,       $F_tau12                      ) = $M_Boogie_BRF           ! [-] Reference Marker for calc.
force.par (               3 ,       $F_tau12                      ) = null                    ! [-] Expression for Fx
force.par (               4 ,       $F_tau12                      ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_tau12                      ) = null                    ! [-] Expression for Fz
force.par (               6 ,       $F_tau12                      ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_tau12                      ) = $X_tau12                ! [-] Expression for Ly
force.par (               8 ,       $F_tau12                      ) = null                    ! [-] Expression for Lz

force.type (                        $F_tau21                      ) = 50                      ! Type
force.from (                        $F_tau21                      ) = $S_rocker1.$M_Rocker_2roda ! From Marker
force.to (                          $F_tau21                      ) = $S_roda1.$M_Roda1_BRF   ! To Marker
force.disabled (                    $F_tau21                      ) = 0                       ! Disabled
force.par (               1 ,       $F_tau21                      ) = $M_Isys                 ! [-] Reference Marker for calc.
force.par (               3 ,       $F_tau21                      ) = null                    ! [-] Expression for Fx
force.par (               4 ,       $F_tau21                      ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_tau21                      ) = null                    ! [-] Expression for Fz
force.par (               6 ,       $F_tau21                      ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_tau21                      ) = $X_tau21                ! [-] Expression for Ly
force.par (               8 ,       $F_tau21                      ) = null                    ! [-] Expression for Lz

force.type (                        $F_tau22                      ) = 50                      ! Type
force.from (                        $F_tau22                      ) = $S_rocker2.$M_Rocker_2roda ! From Marker
force.to (                          $F_tau22                      ) = $S_roda2.$M_Roda1_BRF   ! To Marker
force.disabled (                    $F_tau22                      ) = 0                       ! Disabled
force.par (               1 ,       $F_tau22                      ) = $M_Isys                 ! [-] Reference Marker for calc.
force.par (               3 ,       $F_tau22                      ) = null                    ! [-] Expression for Fx
force.par (               4 ,       $F_tau22                      ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_tau22                      ) = null                    ! [-] Expression for Fz
force.par (               6 ,       $F_tau22                      ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_tau22                      ) = $X_tau22                ! [-] Expression for Ly
force.par (               8 ,       $F_tau22                      ) = null                    ! [-] Expression for Lz

force.type (                        $F_IF                         ) = 50                      ! Type
force.from (                        $F_IF                         ) = $M_Isys                 ! From Marker
force.to (                          $F_IF                         ) = $M_Boogie_BRF           ! To Marker
force.disabled (                    $F_IF                         ) = 1                       ! Disabled
force.par (               1 ,       $F_IF                         ) = $M_Boogie_BRF           ! [-] Reference Marker for calc.
force.par (               3 ,       $F_IF                         ) = $X_IF                   ! [-] Expression for Fx
force.par (               4 ,       $F_IF                         ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_IF                         ) = null                    ! [-] Expression for Fz
force.par (               6 ,       $F_IF                         ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_IF                         ) = null                    ! [-] Expression for Ly
force.par (               8 ,       $F_IF                         ) = null                    ! [-] Expression for Lz

force.type (                        $F_bot1                       ) = 50                      ! Type
force.from (                        $F_bot1                       ) = $M_chao_PontaBotinha1_contact ! From Marker
force.to (                          $F_bot1                       ) = $M_Boogie_PontaBotinha1 ! To Marker
force.par (               1 ,       $F_bot1                       ) = $M_Boogie_PontaBotinha1 ! [-] Reference Marker for calc.
force.par (               3 ,       $F_bot1                       ) = $X_IF_Bot1              ! [-] Expression for Fx
force.par (               4 ,       $F_bot1                       ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_bot1                       ) = $X_Fz_bot1              ! [-] Expression for Fz
force.par (               6 ,       $F_bot1                       ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_bot1                       ) = null                    ! [-] Expression for Ly
force.par (               8 ,       $F_bot1                       ) = null                    ! [-] Expression for Lz

force.type (                        $F_bot2                       ) = 50                      ! Type
force.from (                        $F_bot2                       ) = $M_chao_PontaBotinha2_contact ! From Marker
force.to (                          $F_bot2                       ) = $M_Boogie_PontaBotinha2 ! To Marker
force.par (               1 ,       $F_bot2                       ) = $M_Boogie_PontaBotinha2 ! [-] Reference Marker for calc.
force.par (               3 ,       $F_bot2                       ) = $X_IF_Bot2              ! [-] Expression for Fx
force.par (               4 ,       $F_bot2                       ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_bot2                       ) = $X_Fz_bot2              ! [-] Expression for Fz
force.par (               6 ,       $F_bot2                       ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_bot2                       ) = null                    ! [-] Expression for Ly
force.par (               8 ,       $F_bot2                       ) = null                    ! [-] Expression for Lz

force.type (                        $F_bot3                       ) = 50                      ! Type
force.from (                        $F_bot3                       ) = $M_chao_PontaBotinha3_contact ! From Marker
force.to (                          $F_bot3                       ) = $M_Boogie_PontaBotinha3 ! To Marker
force.par (               1 ,       $F_bot3                       ) = $M_Boogie_PontaBotinha3 ! [-] Reference Marker for calc.
force.par (               3 ,       $F_bot3                       ) = $X_IF_Bot3              ! [-] Expression for Fx
force.par (               4 ,       $F_bot3                       ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_bot3                       ) = $X_Fz_bot3              ! [-] Expression for Fz
force.par (               6 ,       $F_bot3                       ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_bot3                       ) = null                    ! [-] Expression for Ly
force.par (               8 ,       $F_bot3                       ) = null                    ! [-] Expression for Lz

force.type (                        $F_bot4                       ) = 50                      ! Type
force.from (                        $F_bot4                       ) = $M_chao_PontaBotinha4_contact ! From Marker
force.to (                          $F_bot4                       ) = $M_Boogie_PontaBotinha4 ! To Marker
force.par (               1 ,       $F_bot4                       ) = $M_Boogie_PontaBotinha4 ! [-] Reference Marker for calc.
force.par (               3 ,       $F_bot4                       ) = $X_IF_Bot4              ! [-] Expression for Fx
force.par (               4 ,       $F_bot4                       ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_bot4                       ) = $X_Fz_bot4              ! [-] Expression for Fz
force.par (               6 ,       $F_bot4                       ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_bot4                       ) = null                    ! [-] Expression for Ly
force.par (               8 ,       $F_bot4                       ) = null                    ! [-] Expression for Lz

force.type (                        $F_bot5                       ) = 50                      ! Type
force.from (                        $F_bot5                       ) = $M_chao_PontaBotinha5_contact ! From Marker
force.to (                          $F_bot5                       ) = $M_Boogie_PontaBotinha5 ! To Marker
force.par (               1 ,       $F_bot5                       ) = $M_Boogie_PontaBotinha5 ! [-] Reference Marker for calc.
force.par (               3 ,       $F_bot5                       ) = $X_IF_Bot5              ! [-] Expression for Fx
force.par (               4 ,       $F_bot5                       ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_bot5                       ) = $X_Fz_bot5              ! [-] Expression for Fz
force.par (               6 ,       $F_bot5                       ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_bot5                       ) = null                    ! [-] Expression for Ly
force.par (               8 ,       $F_bot5                       ) = null                    ! [-] Expression for Lz

force.type (                        $F_bot6                       ) = 50                      ! Type
force.from (                        $F_bot6                       ) = $M_chao_PontaBotinha6_contact ! From Marker
force.to (                          $F_bot6                       ) = $M_Boogie_PontaBotinha6 ! To Marker
force.par (               1 ,       $F_bot6                       ) = $M_Boogie_PontaBotinha6 ! [-] Reference Marker for calc.
force.par (               3 ,       $F_bot6                       ) = $X_IF_Bot6              ! [-] Expression for Fx
force.par (               4 ,       $F_bot6                       ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_bot6                       ) = $X_Fz_bot6              ! [-] Expression for Fz
force.par (               6 ,       $F_bot6                       ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_bot6                       ) = null                    ! [-] Expression for Ly
force.par (               8 ,       $F_bot6                       ) = null                    ! [-] Expression for Lz

force.type (                        $F_Disco1                     ) = 50                      ! Type
force.from (                        $F_Disco1                     ) = $S_disco1.$M_chao_contact1 ! From Marker
force.to (                          $F_Disco1                     ) = $S_disco1.$M_Roda1_BRF  ! To Marker
force.par (               1 ,       $F_Disco1                     ) = $S_disco1.$M_Base_contact11 ! [-] Reference Marker for calc.
force.par (               3 ,       $F_Disco1                     ) = $X_IF_Disco1            ! [-] Expression for Fx
force.par (               4 ,       $F_Disco1                     ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_Disco1                     ) = null                    ! [-] Expression for Fz
force.par (               6 ,       $F_Disco1                     ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_Disco1                     ) = null                    ! [-] Expression for Ly
force.par (               8 ,       $F_Disco1                     ) = null                    ! [-] Expression for Lz

force.type (                        $F_Disco2                     ) = 50                      ! Type
force.from (                        $F_Disco2                     ) = $S_disco2.$M_chao_contact1 ! From Marker
force.to (                          $F_Disco2                     ) = $S_disco2.$M_Roda1_BRF  ! To Marker
force.par (               1 ,       $F_Disco2                     ) = $S_disco2.$M_Base_contact11 ! [-] Reference Marker for calc.
force.par (               3 ,       $F_Disco2                     ) = $X_IF_Disco2            ! [-] Expression for Fx
force.par (               4 ,       $F_Disco2                     ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_Disco2                     ) = null                    ! [-] Expression for Fz
force.par (               6 ,       $F_Disco2                     ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_Disco2                     ) = null                    ! [-] Expression for Ly
force.par (               8 ,       $F_Disco2                     ) = null                    ! [-] Expression for Lz

force.type (                        $F_Disco3                     ) = 50                      ! Type
force.from (                        $F_Disco3                     ) = $S_disco3.$M_chao_contact1 ! From Marker
force.to (                          $F_Disco3                     ) = $S_disco3.$M_Roda1_BRF  ! To Marker
force.par (               1 ,       $F_Disco3                     ) = $S_disco3.$M_Base_contact11 ! [-] Reference Marker for calc.
force.par (               3 ,       $F_Disco3                     ) = $X_IF_Disco3            ! [-] Expression for Fx
force.par (               4 ,       $F_Disco3                     ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_Disco3                     ) = null                    ! [-] Expression for Fz
force.par (               6 ,       $F_Disco3                     ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_Disco3                     ) = null                    ! [-] Expression for Ly
force.par (               8 ,       $F_Disco3                     ) = null                    ! [-] Expression for Lz

force.type (                        $F_Disco4                     ) = 50                      ! Type
force.from (                        $F_Disco4                     ) = $S_disco4.$M_chao_contact1 ! From Marker
force.to (                          $F_Disco4                     ) = $S_disco4.$M_Roda1_BRF  ! To Marker
force.par (               1 ,       $F_Disco4                     ) = $S_disco4.$M_Base_contact11 ! [-] Reference Marker for calc.
force.par (               3 ,       $F_Disco4                     ) = $X_IF_Disco4            ! [-] Expression for Fx
force.par (               4 ,       $F_Disco4                     ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_Disco4                     ) = null                    ! [-] Expression for Fz
force.par (               6 ,       $F_Disco4                     ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_Disco4                     ) = null                    ! [-] Expression for Ly
force.par (               8 ,       $F_Disco4                     ) = null                    ! [-] Expression for Lz

force.type (                        $F_Disco5                     ) = 50                      ! Type
force.from (                        $F_Disco5                     ) = $S_disco5.$M_chao_contact1 ! From Marker
force.to (                          $F_Disco5                     ) = $S_disco5.$M_Roda1_BRF  ! To Marker
force.par (               1 ,       $F_Disco5                     ) = $S_disco5.$M_Base_contact11 ! [-] Reference Marker for calc.
force.par (               3 ,       $F_Disco5                     ) = $X_IF_Disco5            ! [-] Expression for Fx
force.par (               4 ,       $F_Disco5                     ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_Disco5                     ) = null                    ! [-] Expression for Fz
force.par (               6 ,       $F_Disco5                     ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_Disco5                     ) = null                    ! [-] Expression for Ly
force.par (               8 ,       $F_Disco5                     ) = null                    ! [-] Expression for Lz

force.type (                        $F_Disco6                     ) = 50                      ! Type
force.from (                        $F_Disco6                     ) = $S_disco6.$M_chao_contact1 ! From Marker
force.to (                          $F_Disco6                     ) = $S_disco6.$M_Roda1_BRF  ! To Marker
force.par (               1 ,       $F_Disco6                     ) = $S_disco6.$M_Base_contact11 ! [-] Reference Marker for calc.
force.par (               3 ,       $F_Disco6                     ) = $X_IF_Disco6            ! [-] Expression for Fx
force.par (               4 ,       $F_Disco6                     ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_Disco6                     ) = null                    ! [-] Expression for Fz
force.par (               6 ,       $F_Disco6                     ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_Disco6                     ) = null                    ! [-] Expression for Ly
force.par (               8 ,       $F_Disco6                     ) = null                    ! [-] Expression for Lz

!**********************************************************************
! Connection Elements
!**********************************************************************
connect.type (                      $CTN_ParCima1                 ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParCima1                 ) = 2.70526034059132781E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParCima1                 ) = 3.68854720489946540E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParCima1                 ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParCima1                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParCima1                 ) = 2.70526034059131837E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParCima1                 ) = 4.48247565616250674E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParCima1                 ) = 2.70526034059132781E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParCima1                 ) = 3.68854720489946540E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParCima1                 ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParCima1                 ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParCima1                 ) = $S_LinhaSemente1.$S_BarraCima.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParCima1                 ) = $M_Boogie_ParalelogramoCima1 ! [-] To Marker
connect.par (             3 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParCima1                 ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParCima1                 ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParCima1           ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParCima1           ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParCima1           ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParCima1           ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParCima1                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParCima1           ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParCima1     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParCima1     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParCima1     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParCima1     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParCima1     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParCima1           ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParCima1     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParCima1     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParCima1     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParCima1     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParCima1     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParCima1                 ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParCima1                 ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParCima1                 ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParCima1                 ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParCima1                 ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParCima1                 ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParCima1                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParCima1           ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParCima1           ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParCima1           ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParCima1           ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParCima1           ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParCima2                 ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParCima2                 ) = 2.70526034059115572E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParCima2                 ) = -1.23197227705059873E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParCima2                 ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParCima2                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParCima2                 ) = 2.70526034059116294E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParCima2                 ) = -1.90375788965778837E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParCima2                 ) = 2.70526034059115572E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParCima2                 ) = -1.23197227705059873E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParCima2                 ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParCima2                 ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParCima2                 ) = $S_LinhaSemente2.$S_BarraCima.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParCima2                 ) = $M_Boogie_ParalelogramoCima2 ! [-] To Marker
connect.par (             3 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParCima2                 ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParCima2                 ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParCima2           ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParCima2           ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParCima2           ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParCima2           ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParCima2                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParCima2           ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParCima2     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParCima2     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParCima2     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParCima2     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParCima2     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParCima2           ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParCima2     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParCima2     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParCima2     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParCima2     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParCima2     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParCima2                 ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParCima2                 ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParCima2                 ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParCima2                 ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParCima2                 ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParCima2                 ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParCima2                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParCima2           ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParCima2           ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParCima2           ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParCima2           ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParCima2           ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParCima3                 ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParCima3                 ) = 2.70526034059121845E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParCima3                 ) = -3.54655112027085420E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParCima3                 ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParCima3                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParCima3                 ) = 2.70526034059121345E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParCima3                 ) = -2.81369408833573887E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParCima3                 ) = 2.70526034059121845E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParCima3                 ) = -3.54655112027085420E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParCima3                 ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParCima3                 ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParCima3                 ) = $S_LinhaSemente3.$S_BarraCima.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParCima3                 ) = $M_Boogie_ParalelogramoCima3 ! [-] To Marker
connect.par (             3 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParCima3                 ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParCima3                 ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParCima3           ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParCima3           ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParCima3           ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParCima3           ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParCima3                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParCima3           ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParCima3     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParCima3     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParCima3     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParCima3     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParCima3     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParCima3           ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParCima3     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParCima3     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParCima3     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParCima3     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParCima3     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParCima3                 ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParCima3                 ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParCima3                 ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParCima3                 ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParCima3                 ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParCima3                 ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParCima3                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParCima3           ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParCima3           ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParCima3           ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParCima3           ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParCima3           ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParCima4                 ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParCima4                 ) = 2.70526034059124731E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParCima4                 ) = 1.16538797522635804E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParCima4                 ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParCima4                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParCima4                 ) = 2.70526034059125897E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParCima4                 ) = 1.77610216850562103E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParCima4                 ) = 2.70526034059124731E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParCima4                 ) = 1.16538797522635804E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParCima4                 ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParCima4                 ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParCima4                 ) = $S_LinhaSemente4.$S_BarraCima.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParCima4                 ) = $M_Boogie_ParalelogramoCima4 ! [-] To Marker
connect.par (             3 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParCima4                 ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParCima4                 ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParCima4           ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParCima4           ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParCima4           ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParCima4           ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParCima4                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParCima4           ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParCima4     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParCima4     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParCima4     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParCima4     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParCima4     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParCima4           ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParCima4     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParCima4     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParCima4     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParCima4     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParCima4     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParCima4                 ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParCima4                 ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParCima4                 ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParCima4                 ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParCima4                 ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParCima4                 ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParCima4                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParCima4           ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParCima4           ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParCima4           ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParCima4           ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParCima4           ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParCima5                 ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParCima5                 ) = 2.70526034059129339E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParCima5                 ) = 1.01279486456412303E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParCima5                 ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParCima5                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParCima5                 ) = 2.70526034059131282E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParCima5                 ) = 1.31815196120375420E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParCima5                 ) = 2.70526034059129339E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParCima5                 ) = 1.01279486456412303E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParCima5                 ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParCima5                 ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParCima5                 ) = $S_LinhaSemente5.$S_BarraCima.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParCima5                 ) = $M_Boogie_ParalelogramoCima5 ! [-] To Marker
connect.par (             3 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParCima5                 ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParCima5                 ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParCima5           ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParCima5           ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParCima5           ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParCima5           ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParCima5                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParCima5           ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParCima5     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParCima5     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParCima5     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParCima5     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParCima5     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParCima5           ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParCima5     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParCima5     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParCima5     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParCima5     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParCima5     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParCima5                 ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParCima5                 ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParCima5                 ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParCima5                 ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParCima5                 ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParCima5                 ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParCima5                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParCima5           ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParCima5           ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParCima5           ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParCima5           ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParCima5           ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParCima6                 ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParCima6                 ) = 2.70526034059139664E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParCima6                 ) = -3.05573816787034844E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParCima6                 ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParCima6                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParCima6                 ) = 2.70526034059140330E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParCima6                 ) = -2.99466674854242179E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParCima6                 ) = 2.70526034059139664E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParCima6                 ) = -3.05573816787034844E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParCima6                 ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParCima6                 ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParCima6                 ) = $S_LinhaSemente6.$S_BarraCima.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParCima6                 ) = $M_Boogie_ParalelogramoCima6 ! [-] To Marker
connect.par (             3 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParCima6                 ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParCima6                 ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParCima6           ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParCima6           ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParCima6           ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParCima6           ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParCima6                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParCima6           ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParCima6     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParCima6     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParCima6     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParCima6     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParCima6     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParCima6           ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParCima6     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParCima6     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParCima6     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParCima6     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParCima6     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParCima6                 ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParCima6                 ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParCima6                 ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParCima6                 ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParCima6                 ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParCima6                 ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParCima6                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParCima6           ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParCima6           ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParCima6           ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParCima6           ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParCima6           ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParBaixo1                ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParBaixo1                ) = 2.70526034059132114E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParBaixo1                ) = 2.88588044131786986E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParBaixo1                ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParBaixo1                ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParBaixo1                ) = 2.70526034059132336E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParBaixo1                ) = 4.56790819909306260E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParBaixo1                ) = 2.70526034059132114E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParBaixo1                ) = 2.88588044131786986E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParBaixo1                ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParBaixo1                ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParBaixo1                ) = $S_LinhaSemente1.$S_BarraBaixo.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParBaixo1                ) = $M_Boogie_ParalelogramoBaixo1 ! [-] To Marker
connect.par (             3 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParBaixo1                ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParBaixo1                ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParBaixo1          ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParBaixo1          ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParBaixo1          ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParBaixo1          ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParBaixo1                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParBaixo1          ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParBaixo1    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParBaixo1    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParBaixo1    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParBaixo1    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParBaixo1    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParBaixo1          ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParBaixo1    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParBaixo1    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParBaixo1    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParBaixo1    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParBaixo1    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParBaixo1                ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParBaixo1                ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParBaixo1                ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParBaixo1                ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParBaixo1                ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParBaixo1                ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParBaixo1                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParBaixo1          ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParBaixo1          ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParBaixo1          ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParBaixo1          ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParBaixo1          ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParBaixo2                ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParBaixo2                ) = 2.70526034059115184E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParBaixo2                ) = -6.69486977953318029E-71 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParBaixo2                ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParBaixo2                ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParBaixo2                ) = 2.70526034059117348E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParBaixo2                ) = -1.97613002316597939E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParBaixo2                ) = 2.70526034059115184E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParBaixo2                ) = -6.69486977953318029E-71 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParBaixo2                ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParBaixo2                ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParBaixo2                ) = $S_LinhaSemente2.$S_BarraBaixo.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParBaixo2                ) = $M_Boogie_ParalelogramoBaixo2 ! [-] To Marker
connect.par (             3 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParBaixo2                ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParBaixo2                ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParBaixo2          ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParBaixo2          ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParBaixo2          ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParBaixo2          ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParBaixo2                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParBaixo2          ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParBaixo2    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParBaixo2    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParBaixo2    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParBaixo2    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParBaixo2    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParBaixo2          ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParBaixo2    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParBaixo2    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParBaixo2    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParBaixo2    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParBaixo2    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParBaixo2                ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParBaixo2                ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParBaixo2                ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParBaixo2                ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParBaixo2                ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParBaixo2                ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParBaixo2                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParBaixo2          ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParBaixo2          ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParBaixo2          ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParBaixo2          ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParBaixo2          ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParBaixo3                ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParBaixo3                ) = 2.70526034059122678E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParBaixo3                ) = -3.46013575732436718E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParBaixo3                ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParBaixo3                ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParBaixo3                ) = 2.70526034059121956E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParBaixo3                ) = -3.17000278268053706E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParBaixo3                ) = 2.70526034059122678E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParBaixo3                ) = -3.46013575732436718E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParBaixo3                ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParBaixo3                ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParBaixo3                ) = $S_LinhaSemente3.$S_BarraBaixo.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParBaixo3                ) = $M_Boogie_ParalelogramoBaixo3 ! [-] To Marker
connect.par (             3 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParBaixo3                ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParBaixo3                ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParBaixo3          ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParBaixo3          ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParBaixo3          ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParBaixo3          ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParBaixo3                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParBaixo3          ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParBaixo3    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParBaixo3    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParBaixo3    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParBaixo3    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParBaixo3    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParBaixo3          ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParBaixo3    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParBaixo3    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParBaixo3    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParBaixo3    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParBaixo3    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParBaixo3                ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParBaixo3                ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParBaixo3                ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParBaixo3                ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParBaixo3                ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParBaixo3                ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParBaixo3                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParBaixo3          ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParBaixo3          ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParBaixo3          ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParBaixo3          ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParBaixo3          ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParBaixo4                ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParBaixo4                ) = 2.70526034059124731E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParBaixo4                ) = 1.09986676480287813E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParBaixo4                ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParBaixo4                ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParBaixo4                ) = 2.70526034059126397E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParBaixo4                ) = 2.36827867900614013E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParBaixo4                ) = 2.70526034059124731E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParBaixo4                ) = 1.09986676480287813E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParBaixo4                ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParBaixo4                ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParBaixo4                ) = $S_LinhaSemente4.$S_BarraBaixo.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParBaixo4                ) = $M_Boogie_ParalelogramoBaixo4 ! [-] To Marker
connect.par (             3 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParBaixo4                ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParBaixo4                ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParBaixo4          ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParBaixo4          ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParBaixo4          ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParBaixo4          ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParBaixo4                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParBaixo4          ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParBaixo4    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParBaixo4    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParBaixo4    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParBaixo4    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParBaixo4    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParBaixo4          ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParBaixo4    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParBaixo4    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParBaixo4    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParBaixo4    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParBaixo4    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParBaixo4                ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParBaixo4                ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParBaixo4                ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParBaixo4                ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParBaixo4                ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParBaixo4                ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParBaixo4                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParBaixo4          ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParBaixo4          ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParBaixo4          ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParBaixo4          ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParBaixo4          ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParBaixo5                ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParBaixo5                ) = 2.70526034059128395E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParBaixo5                ) = 1.09288462153567681E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParBaixo5                ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParBaixo5                ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParBaixo5                ) = 2.70526034059131282E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParBaixo5                ) = 1.41731992862368575E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParBaixo5                ) = 2.70526034059128395E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParBaixo5                ) = 1.09288462153567681E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParBaixo5                ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParBaixo5                ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParBaixo5                ) = $S_LinhaSemente5.$S_BarraBaixo.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParBaixo5                ) = $M_Boogie_ParalelogramoBaixo5 ! [-] To Marker
connect.par (             3 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParBaixo5                ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParBaixo5                ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParBaixo5          ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParBaixo5          ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParBaixo5          ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParBaixo5          ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParBaixo5                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParBaixo5          ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParBaixo5    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParBaixo5    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParBaixo5    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParBaixo5    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParBaixo5    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParBaixo5          ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParBaixo5    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParBaixo5    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParBaixo5    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParBaixo5    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParBaixo5    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParBaixo5                ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParBaixo5                ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParBaixo5                ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParBaixo5                ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParBaixo5                ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParBaixo5                ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParBaixo5                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParBaixo5          ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParBaixo5          ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParBaixo5          ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParBaixo5          ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParBaixo5          ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParBaixo6                ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParBaixo6                ) = 2.70526034059138776E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParBaixo6                ) = -2.89797626413246816E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParBaixo6                ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParBaixo6                ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParBaixo6                ) = 2.70526034059140941E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParBaixo6                ) = -2.71352720180436596E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParBaixo6                ) = 2.70526034059138776E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParBaixo6                ) = -2.89797626413246816E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParBaixo6                ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParBaixo6                ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParBaixo6                ) = $S_LinhaSemente6.$S_BarraBaixo.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParBaixo6                ) = $M_Boogie_ParalelogramoBaixo6 ! [-] To Marker
connect.par (             3 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParBaixo6                ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParBaixo6                ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParBaixo6          ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParBaixo6          ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParBaixo6          ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParBaixo6          ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParBaixo6                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParBaixo6          ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParBaixo6    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParBaixo6    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParBaixo6    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParBaixo6    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParBaixo6    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParBaixo6          ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParBaixo6    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParBaixo6    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParBaixo6    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParBaixo6    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParBaixo6    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParBaixo6                ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParBaixo6                ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParBaixo6                ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParBaixo6                ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParBaixo6                ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParBaixo6                ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParBaixo6                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParBaixo6          ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParBaixo6          ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParBaixo6          ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParBaixo6          ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParBaixo6          ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

!**********************************************************************
! Expressions
!**********************************************************************
express.str (                       $X_PD                         ) = '2*$_lambda*($_vd - VX($M_Boogie_BRF)) + ($_lambda^2)*($_vd*TIME - DX($M_Boogie_BRF))' ! Definition

express.str (                       $X_tau11                      ) = '-0.5*(1-$_beta)*$_m*(0.25)*$X_PD' ! Definition

express.str (                       $X_tau12                      ) = '-0.5*(1-$_beta)*$_m*(0.25)*$X_PD' ! Definition

express.str (                       $X_tau21                      ) = '-0.5*$_beta*$_m*(0.4395)*$X_PD' ! Definition

express.str (                       $X_tau22                      ) = '-0.5*$_beta*$_m*(0.4395)*$X_PD' ! Definition

express.str (                       $X_IF                         ) = '-$_IF*tanh(-1000*VX($M_Boogie_BRF,$M_Isys,$M_Boogie_BRF))' ! Definition

express.str (                       $X_DistBotinhaPonta1          ) = 'DZ($M_Boogie_PontaBotinha1,$M_chao_PontaBotinha1_contact,$M_chao_PontaBotinha1_contact)' ! Definition

express.str (                       $X_DistBotinhaPonta2          ) = 'DZ($M_Boogie_PontaBotinha2,$M_chao_PontaBotinha2_contact,$M_chao_PontaBotinha2_contact)' ! Definition

express.str (                       $X_DistBotinhaPonta3          ) = 'DZ($M_Boogie_PontaBotinha3,$M_chao_PontaBotinha3_contact,$M_chao_PontaBotinha3_contact)' ! Definition

express.str (                       $X_DistBotinhaPonta4          ) = 'DZ($M_Boogie_PontaBotinha4,$M_chao_PontaBotinha4_contact,$M_chao_PontaBotinha4_contact)' ! Definition

express.str (                       $X_DistBotinhaPonta5          ) = 'DZ($M_Boogie_PontaBotinha5,$M_chao_PontaBotinha5_contact,$M_chao_PontaBotinha5_contact)' ! Definition

express.str (                       $X_DistBotinhaPonta6          ) = 'DZ($M_Boogie_PontaBotinha6,$M_chao_PontaBotinha6_contact,$M_chao_PontaBotinha6_contact)' ! Definition

express.str (                       $dX_DistBotinhaPonta1         ) = 'VZ($M_Boogie_PontaBotinha1,$M_chao_PontaBotinha1_contact,$M_chao_PontaBotinha1_contact)' ! Definition

express.str (                       $dX_DistBotinhaPonta2         ) = 'VZ($M_Boogie_PontaBotinha2,$M_chao_PontaBotinha2_contact,$M_chao_PontaBotinha2_contact)' ! Definition

express.str (                       $dX_DistBotinhaPonta3         ) = 'VZ($M_Boogie_PontaBotinha3,$M_chao_PontaBotinha3_contact,$M_chao_PontaBotinha3_contact)' ! Definition

express.str (                       $dX_DistBotinhaPonta4         ) = 'VZ($M_Boogie_PontaBotinha4,$M_chao_PontaBotinha4_contact,$M_chao_PontaBotinha4_contact)' ! Definition

express.str (                       $dX_DistBotinhaPonta5         ) = 'VZ($M_Boogie_PontaBotinha5,$M_chao_PontaBotinha5_contact,$M_chao_PontaBotinha5_contact)' ! Definition

express.str (                       $dX_DistBotinhaPonta6         ) = 'VZ($M_Boogie_PontaBotinha6,$M_chao_PontaBotinha6_contact,$M_chao_PontaBotinha6_contact)' ! Definition

express.str (                       $X_delta1                     ) = 'IF($X_DistBotinhaPonta1 < 0)\n{\n-$X_DistBotinhaPonta1\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_delta2                     ) = 'IF($X_DistBotinhaPonta2 < 0)\n{\n-$X_DistBotinhaPonta2\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_delta3                     ) = 'IF($X_DistBotinhaPonta3 < 0)\n{\n-$X_DistBotinhaPonta3\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_delta4                     ) = 'IF($X_DistBotinhaPonta4 < 0)\n{\n-$X_DistBotinhaPonta4\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_delta5                     ) = 'IF($X_DistBotinhaPonta5 < 0)\n{\n-$X_DistBotinhaPonta5\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_delta6                     ) = 'IF($X_DistBotinhaPonta6 < 0)\n{\n-$X_DistBotinhaPonta6\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $dX_delta1                    ) = 'IF($X_DistBotinhaPonta1 < 0)\n{\n-$dX_DistBotinhaPonta1\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $dX_delta2                    ) = 'IF($X_DistBotinhaPonta2 < 0)\n{\n-$dX_DistBotinhaPonta2\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $dX_delta3                    ) = 'IF($X_DistBotinhaPonta3 < 0)\n{\n-$dX_DistBotinhaPonta3\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $dX_delta4                    ) = 'IF($X_DistBotinhaPonta4 < 0)\n{\n-$dX_DistBotinhaPonta4\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $dX_delta5                    ) = 'IF($X_DistBotinhaPonta5 < 0)\n{\n-$dX_DistBotinhaPonta5\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $dX_delta6                    ) = 'IF($X_DistBotinhaPonta6 < 0)\n{\n-$dX_DistBotinhaPonta6\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_Fz_bot1                    ) = 'IF($X_delta1>0)\n{\n-($_ksolo*$X_delta1 + $_csolo*$dX_delta1)*$_A_bot + $_FzDownBot*tanh(100*VX($M_Boogie_BRF,$M_Isys,$M_chao_PontaBotinha1_contact))\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_Fz_bot2                    ) = 'IF($X_delta2>0)\n{\n-($_ksolo*$X_delta2 + $_csolo*$dX_delta2)*$_A_bot + $_FzDownBot*tanh(100*VX($M_Boogie_BRF,$M_Isys,$M_chao_PontaBotinha2_contact))\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_Fz_bot3                    ) = 'IF($X_delta3>0)\n{\n-($_ksolo*$X_delta3 + $_csolo*$dX_delta3)*$_A_bot + $_FzDownBot*tanh(100*VX($M_Boogie_BRF,$M_Isys,$M_chao_PontaBotinha3_contact))\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_Fz_bot4                    ) = 'IF($X_delta4>0)\n{\n-($_ksolo*$X_delta4 + $_csolo*$dX_delta4)*$_A_bot + $_FzDownBot*tanh(100*VX($M_Boogie_BRF,$M_Isys,$M_chao_PontaBotinha4_contact))\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_Fz_bot5                    ) = 'IF($X_delta5>0)\n{\n-($_ksolo*$X_delta5 + $_csolo*$dX_delta5)*$_A_bot + $_FzDownBot*tanh(100*VX($M_Boogie_BRF,$M_Isys,$M_chao_PontaBotinha5_contact))\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_Fz_bot6                    ) = 'IF($X_delta6>0)\n{\n-($_ksolo*$X_delta6 + $_csolo*$dX_delta6)*$_A_bot + $_FzDownBot*tanh(100*VX($M_Boogie_BRF,$M_Isys,$M_chao_PontaBotinha6_contact))\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_IF_Bot                     ) = '$X_IF/12'              ! Definition

express.str (                       $X_IF_Disco                   ) = '$X_IF/24'              ! Definition

express.str (                       $X_IF_Bot1                    ) = 'IF($X_delta1>0)\n{\n$X_IF_Bot\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_IF_Bot2                    ) = 'IF($X_delta2>0)\n{\n$X_IF_Bot\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_IF_Bot3                    ) = 'IF($X_delta3>0)\n{\n$X_IF_Bot\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_IF_Bot4                    ) = 'IF($X_delta4>0)\n{\n$X_IF_Bot\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_IF_Bot5                    ) = 'IF($X_delta5>0)\n{\n$X_IF_Bot\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_IF_Bot6                    ) = 'IF($X_delta6>0)\n{\n$X_IF_Bot\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_IF_Disco1                  ) = 'IF($S_disco1.$X_delta11 >0)\n{\n$X_IF_Disco\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_IF_Disco2                  ) = 'IF($S_disco2.$X_delta11 >0)\n{\n$X_IF_Disco\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_IF_Disco3                  ) = 'IF($S_disco3.$X_delta11 >0)\n{\n$X_IF_Disco\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_IF_Disco4                  ) = 'IF($S_disco4.$X_delta11 >0)\n{\n$X_IF_Disco\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_IF_Disco5                  ) = 'IF($S_disco5.$X_delta11 >0)\n{\n$X_IF_Disco\n}\nELSE\n{\n0\n}' ! Definition

express.str (                       $X_IF_Disco6                  ) = 'IF($S_disco6.$X_delta11 >0)\n{\n$X_IF_Disco\n}\nELSE\n{\n0\n}' ! Definition


! Overwritten substructure values
view.fclip.value (                  $S_esteira1.$V_WorkingView    ) = 3.50148491561412811E-02 ! Front clipping plane value
view.bclip.value (                  $S_esteira1.$V_WorkingView    ) = 3.50148468017578125E+01 ! Back clipping plane value

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact11 ) = 6.28318530759214866E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact11 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact12 ) = -4.44585925061098989E-09 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact12 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact13 ) = 3.49856982407852358E-10 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact13 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact21 ) = 3.67774574066671097E-10 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact21 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact22 ) = 4.31557974111293107E-10 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact22 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact23 ) = 3.19379127498779886E-10 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact23 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact31 ) = 6.28318530662815533E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact31 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact32 ) = 2.51327412150548462E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact32 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact33 ) = 3.76991118499132583E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact33 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact41 ) = 3.14159265363013169E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact41 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact42 ) = 4.35996792925085403E-10 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact42 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact43 ) = 3.65316419156560028E-10 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact43 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact51 ) = 6.28318530687385035E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact51 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact52 ) = -3.78099607808810435E-10 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact52 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact53 ) = 1.35919596719924178E-09 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_Base_contact53 ) = 1.57079632679489656E+00 ! Algebraic states

joint.from (                        $S_esteira1.$J_Base           ) = $M_Boogie_esteira1      ! From Marker
joint.type (                        $S_esteira1.$J_Base           ) = 0                       ! Type
joint.par (               1 ,       $S_esteira1.$J_Base           ) = 0.00000000000000000E+00 ! [rad] Rotation about alpha
joint.par (               2 ,       $S_esteira1.$J_Base           ) = 0.00000000000000000E+00 ! [rad] Rotation about beta
joint.par (               3 ,       $S_esteira1.$J_Base           ) = 0.00000000000000000E+00 ! [rad] Rotation about gamma
joint.par (               4 ,       $S_esteira1.$J_Base           ) = 0.00000000000000000E+00 ! [m] Translation in x
joint.par (               5 ,       $S_esteira1.$J_Base           ) = 0.00000000000000000E+00 ! [m] Translation in y
joint.par (               6 ,       $S_esteira1.$J_Base           ) = 0.00000000000000000E+00 ! [m] Translation in z
joint.par (               7 ,       $S_esteira1.$J_Base           ) = 0.00000000000000000E+00 ! [-] Rotation sequence


joint.st.pos (            1 ,       $S_esteira1.$J_Roda1          ) = 0.00000000000000000E+00 ! Position
joint.st.vel (            1 ,       $S_esteira1.$J_Roda1          ) = 2.11319821815994095E-71 ! Velocity


joint.st.pos (            1 ,       $S_esteira1.$J_Roda2          ) = 0.00000000000000000E+00 ! Position
joint.st.vel (            1 ,       $S_esteira1.$J_Roda2          ) = 6.33959465447982405E-71 ! Velocity


joint.st.pos (            1 ,       $S_esteira1.$J_Roda3          ) = 0.00000000000000000E+00 ! Position
joint.st.vel (            1 ,       $S_esteira1.$J_Roda3          ) = 6.33959465447982405E-71 ! Velocity


joint.st.pos (            1 ,       $S_esteira1.$J_Roda4          ) = 0.00000000000000000E+00 ! Position
joint.st.vel (            1 ,       $S_esteira1.$J_Roda4          ) = 2.11319821815994417E-71 ! Velocity


joint.from (                        $S_esteira1.$J_connector      ) = $M_Isys_1               ! From Marker


marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact11 ) = -6.00000000000000000E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact11 ) = 7.02385614876417484E-11 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact11 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact12 ) = -6.00000000000000000E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact12 ) = -9.68245844120932952E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact12 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact13 ) = -6.00000000000000000E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact13 ) = 9.68245837147485855E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact13 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact21 ) = -6.26923465505284216E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact21 ) = 6.26136930883590292E-11 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact21 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact22 ) = -6.26923465505284216E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact22 ) = -9.68245835817128364E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact22 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact23 ) = -6.26923465505284216E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact23 ) = 9.68245837095597500E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact23 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact31 ) = -5.73076534494715872E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact31 ) = -9.38813045690426364E-11 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact31 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact32 ) = -5.73076534494715872E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact32 ) = -9.68245859813966214E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact32 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact33 ) = -5.73076534494715872E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact33 ) = 9.68245848189700359E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact33 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact41 ) = -6.45308992296933148E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact41 ) = 6.86763001319189698E-11 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact41 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact42 ) = -6.45308992296933148E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact42 ) = -9.68245835809571215E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact42 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact43 ) = -6.45308992296933148E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact43 ) = 9.68245837173804524E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact43 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact51 ) = -5.54691007703066852E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact51 ) = -5.20514741825286741E-11 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact51 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact52 ) = -5.54691007703066763E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact52 ) = -9.68245837195569892E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact52 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact53 ) = -5.54691007703066852E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira1.$M_chao_contact53 ) = 9.68245838865884889E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact53 ) = $P_chao                 ! [-] Contact geometry Primitive

prim.transparency (                 $S_esteira1.$P_chao           ) = 1.00000000000000000E+00 ! Transparency


view.fclip.value (                  $S_esteira2.$V_WorkingView    ) = 3.50148491561412811E-02 ! Front clipping plane value
view.bclip.value (                  $S_esteira2.$V_WorkingView    ) = 3.50148468017578125E+01 ! Back clipping plane value

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact11 ) = 5.02773575751724608E-08 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact11 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact12 ) = -4.45761772090781535E-09 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact12 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact13 ) = 3.50358066156624039E-10 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact13 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact21 ) = 3.66509963591581862E-10 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact21 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact22 ) = 4.15954062903322150E-10 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact22 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact23 ) = 3.45926142761002930E-10 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact23 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact31 ) = 5.95065859418655870E-10 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact31 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact32 ) = -1.37027399229323303E-08 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact32 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact33 ) = 6.96820999079246553E-09 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact33 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact41 ) = 3.96601424609661529E-10 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact41 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact42 ) = 2.51327412291594570E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact42 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact43 ) = 3.63484139369021155E-10 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact43 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact51 ) = 3.14159265355929236E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact51 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact52 ) = 4.44712542417647358E-10 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact52 ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact53 ) = 1.36177658949109340E-09 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_Base_contact53 ) = 1.57079632679489656E+00 ! Algebraic states

joint.from (                        $S_esteira2.$J_Base           ) = $M_Boogie_esteira2      ! From Marker
joint.type (                        $S_esteira2.$J_Base           ) = 0                       ! Type
joint.par (               1 ,       $S_esteira2.$J_Base           ) = 0.00000000000000000E+00 ! [rad] Rotation about alpha
joint.par (               2 ,       $S_esteira2.$J_Base           ) = 0.00000000000000000E+00 ! [rad] Rotation about beta
joint.par (               3 ,       $S_esteira2.$J_Base           ) = 0.00000000000000000E+00 ! [rad] Rotation about gamma
joint.par (               4 ,       $S_esteira2.$J_Base           ) = 0.00000000000000000E+00 ! [m] Translation in x
joint.par (               5 ,       $S_esteira2.$J_Base           ) = 0.00000000000000000E+00 ! [m] Translation in y
joint.par (               6 ,       $S_esteira2.$J_Base           ) = 0.00000000000000000E+00 ! [m] Translation in z
joint.par (               7 ,       $S_esteira2.$J_Base           ) = 0.00000000000000000E+00 ! [-] Rotation sequence


joint.st.pos (            1 ,       $S_esteira2.$J_Roda1          ) = 0.00000000000000000E+00 ! Position
joint.st.vel (            1 ,       $S_esteira2.$J_Roda1          ) = -8.81593831030293860E-59 ! Velocity


joint.st.pos (            1 ,       $S_esteira2.$J_Roda2          ) = 0.00000000000000000E+00 ! Position
joint.st.vel (            1 ,       $S_esteira2.$J_Roda2          ) = -2.64478149309088193E-58 ! Velocity


joint.st.pos (            1 ,       $S_esteira2.$J_Roda3          ) = 0.00000000000000000E+00 ! Position
joint.st.vel (            1 ,       $S_esteira2.$J_Roda3          ) = -2.64478149309088158E-58 ! Velocity


joint.st.pos (            1 ,       $S_esteira2.$J_Roda4          ) = 0.00000000000000000E+00 ! Position
joint.st.vel (            1 ,       $S_esteira2.$J_Roda4          ) = -8.81593831030294568E-59 ! Velocity


joint.from (                        $S_esteira2.$J_connector      ) = $M_Isys_2               ! From Marker


marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact11 ) = -6.00000000000000000E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact11 ) = 8.55972012652074418E-09 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact11 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact12 ) = -6.00000000000000000E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact12 ) = -9.68245844140947359E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact12 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact13 ) = -6.00000000000000000E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact13 ) = 9.68245837148336702E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact13 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact21 ) = -6.26923465505284216E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact21 ) = 6.23981986629296905E-11 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact21 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact22 ) = -6.26923465505284216E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact22 ) = -9.68245835843691977E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact22 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact23 ) = -6.26923465505284216E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact23 ) = 9.68245837140791071E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact23 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact31 ) = -5.73076534494715872E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact31 ) = 1.01309933921021168E-10 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact31 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact32 ) = -5.73076534494715872E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact32 ) = -9.68245859880769028E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact32 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact33 ) = -5.73076534494715872E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact33 ) = 9.68245848415230509E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact33 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact41 ) = -6.45308992296933237E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact41 ) = 6.75213527826086008E-11 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact41 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact42 ) = -6.45308992296933237E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact42 ) = -9.68245835800861515E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact42 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact43 ) = -6.45308992296933148E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact43 ) = 9.68245837170683410E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact43 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact51 ) = -5.54691007703066852E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact51 ) = -5.19280806398392467E-11 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact51 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact52 ) = -5.54691007703066852E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact52 ) = -9.68245835794732113E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact52 ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact53 ) = -5.54691007703066852E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_esteira2.$M_chao_contact53 ) = 9.68245838870280678E-02 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact53 ) = $P_chao                 ! [-] Contact geometry Primitive

prim.transparency (                 $S_esteira2.$P_chao           ) = 1.00000000000000000E+00 ! Transparency


marker.pos (              2 ,       $S_rocker1.$M_Rocker_2roda    ) = 1.10000000000000001E-01 ! Position

joint.from (                        $S_rocker1.$J_Rocker          ) = $M_Boogie_rocker1       ! From Marker

prim.pos (                2 ,       $S_rocker1.$P_Rocker_CAD      ) = -5.99999999999999978E-01 ! Position
prim.par (               15 ,       $S_rocker1.$P_Rocker_CAD      ) = 1.00000000000000000E+00 ! [-] Mirror in z direction


marker.pos (              2 ,       $S_rocker2.$M_Rocker_2roda    ) = -1.10000000000000001E-01 ! Position

joint.from (                        $S_rocker2.$J_Rocker          ) = $M_Boogie_rocker2       ! From Marker

prim.pos (                2 ,       $S_rocker2.$P_Rocker_CAD      ) = 5.99999999999999978E-01 ! Position
prim.par (               15 ,       $S_rocker2.$P_Rocker_CAD      ) = 0.00000000000000000E+00 ! [-] Mirror in z direction


marker.st.alg (           1 ,       $S_roda1.$M_Base_contact1     ) = -1.25663706151602845E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_roda1.$M_Base_contact1     ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_roda1.$M_Base_contact2     ) = -9.42477795990857992E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_roda1.$M_Base_contact2     ) = -1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_roda1.$M_Base_contact3     ) = -6.91150383798794650E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_roda1.$M_Base_contact3     ) = 1.57079632679489656E+00 ! Algebraic states

joint.from (                        $S_roda1.$J_Base              ) = $S_rocker1.$M_Rocker_2roda ! From Marker
joint.type (                        $S_roda1.$J_Base              ) = 2                       ! Type


joint.type (                        $S_roda1.$J_Roda1             ) = 2                       ! Type


joint.from (                        $S_roda1.$J_connector         ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_roda1.$M_chao_contact1     ) = -3.69500000000000028E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_roda1.$M_chao_contact1     ) = -8.85000000160422462E-01 ! Algebraic states
marker.par (              3 ,       $S_roda1.$M_chao_contact1     ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_roda1.$M_chao_contact2     ) = -4.06947875974479523E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_roda1.$M_chao_contact2     ) = -8.85000000172375012E-01 ! Algebraic states
marker.par (              3 ,       $S_roda1.$M_chao_contact2     ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_roda1.$M_chao_contact3     ) = -3.32052124025520490E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_roda1.$M_chao_contact3     ) = -8.85000000181026869E-01 ! Algebraic states
marker.par (              3 ,       $S_roda1.$M_chao_contact3     ) = $P_chao                 ! [-] Contact geometry Primitive

prim.transparency (                 $S_roda1.$P_chao              ) = 1.00000000000000000E+00 ! Transparency


marker.st.alg (           1 ,       $S_roda2.$M_Base_contact1     ) = -2.05215391714763876E-09 ! Algebraic states
marker.st.alg (           2 ,       $S_roda2.$M_Base_contact1     ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_roda2.$M_Base_contact2     ) = -1.25663706155735451E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_roda2.$M_Base_contact2     ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_roda2.$M_Base_contact3     ) = 4.39822971467667045E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_roda2.$M_Base_contact3     ) = 1.41371669411540690E+01 ! Algebraic states

joint.from (                        $S_roda2.$J_Base              ) = $S_rocker2.$M_Rocker_2roda ! From Marker
joint.type (                        $S_roda2.$J_Base              ) = 2                       ! Type


joint.type (                        $S_roda2.$J_Roda1             ) = 2                       ! Type

prim.par (               15 ,       $S_roda2.$P_Roda1_aro         ) = 1.00000000000000000E+00 ! [-] Mirror in z direction


joint.from (                        $S_roda2.$J_connector         ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_roda2.$M_chao_contact1     ) = -3.69500000000000073E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_roda2.$M_chao_contact1     ) = 8.84999999589056174E-01 ! Algebraic states
marker.par (              3 ,       $S_roda2.$M_chao_contact1     ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_roda2.$M_chao_contact2     ) = -4.06947875974479523E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_roda2.$M_chao_contact2     ) = 8.84999999756822087E-01 ! Algebraic states
marker.par (              3 ,       $S_roda2.$M_chao_contact2     ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_roda2.$M_chao_contact3     ) = -3.32052124025520490E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_roda2.$M_chao_contact3     ) = 8.84999999301047224E-01 ! Algebraic states
marker.par (              3 ,       $S_roda2.$M_chao_contact3     ) = $P_chao                 ! [-] Contact geometry Primitive

prim.transparency (                 $S_roda2.$P_chao              ) = 1.00000000000000000E+00 ! Transparency


subvar.str (                        $S_LinhaSemente1.$_IF         ) = '$_IF'                  ! Definition

joint.st.pos (            1 ,       $S_LinhaSemente1.$J_Estrutura ) = -2.97877177516743334E-27 ! Position
joint.st.pos (            2 ,       $S_LinhaSemente1.$J_Estrutura ) = -9.17836157963540626E-16 ! Position
joint.st.pos (            3 ,       $S_LinhaSemente1.$J_Estrutura ) = -7.92340336775669842E-26 ! Position
joint.st.pos (            4 ,       $S_LinhaSemente1.$J_Estrutura ) = 3.60638905120293674E-01 ! Position
joint.st.pos (            5 ,       $S_LinhaSemente1.$J_Estrutura ) = -2.50000000000000000E-01 ! Position
joint.st.pos (            6 ,       $S_LinhaSemente1.$J_Estrutura ) = 5.28390889286344478E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente1.$J_Estrutura ) = 1.58781199431513864E-71 ! Velocity
joint.st.vel (            2 ,       $S_LinhaSemente1.$J_Estrutura ) = 6.10714193279262426E-71 ! Velocity
joint.st.vel (            3 ,       $S_LinhaSemente1.$J_Estrutura ) = 8.34387932687968496E-72 ! Velocity
joint.st.vel (            4 ,       $S_LinhaSemente1.$J_Estrutura ) = 7.12445416791284190E-56 ! Velocity
joint.st.vel (            5 ,       $S_LinhaSemente1.$J_Estrutura ) = 2.71629549964863011E-71 ! Velocity
joint.st.vel (            6 ,       $S_LinhaSemente1.$J_Estrutura ) = -1.15548778788063138E-70 ! Velocity


prim.transparency (                 $S_LinhaSemente1.$P_chao      ) = 1.00000000000000000E+00 ! Transparency


joint.from (                        $S_LinhaSemente1.$J_connector ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_BarraCima.$M_Body1_contact) = -5.16244773342849683E-01 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente1.$S_BarraCima.$J_Body1) = -2.70526034059131837E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente1.$S_BarraCima.$J_Body1) = -4.29926139817872807E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_BarraBaixo.$M_Body1_contact) = 3.97756818462262896E+00 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente1.$S_BarraBaixo.$J_Body1) = -2.70526034059131171E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente1.$S_BarraBaixo.$J_Body1) = -3.49659463459713221E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_Base_contact1) = -2.19911485757655889E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_Base_contact1) = 4.71238898038469056E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_Base_contact2) = -3.76991118424602618E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_Base_contact2) = 7.85398163397448457E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_Base_contact3) = 6.53286721528790859E-10 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_Base_contact3) = 1.57079632679489745E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_chao_contact1) = -7.81436109487970576E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_chao_contact1) = -3.89999999899099004E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_chao_contact1) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_chao_contact2) = -7.96347095370869162E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_chao_contact2) = -3.89999999902232775E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_chao_contact2) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_chao_contact3) = -7.66525123605072078E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_chao_contact3) = -3.89999999896525396E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente1.$S_DiscoComp1.$M_chao_contact3) = $P_chao ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_Base_contact1) = -1.25663706135228601E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_Base_contact1) = 1.57079632679489745E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_Base_contact2) = -1.25663706135361899E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_Base_contact2) = 1.57079632679489745E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_Base_contact3) = 8.44763830744365345E-10 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_Base_contact3) = 1.57079632679489745E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_chao_contact1) = -7.81436109487970576E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_chao_contact1) = -1.09999999867535642E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_chao_contact1) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_chao_contact2) = -7.96347095370869162E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_chao_contact2) = -1.09999999869646981E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_chao_contact2) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_chao_contact3) = -7.66525123605072078E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_chao_contact3) = -1.09999999866197087E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente1.$S_DiscoComp2.$M_chao_contact3) = $P_chao ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscosV.$M_Base_contact1) = -1.88495559208897383E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscosV.$M_Base_contact1) = 1.57079632679489745E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscosV.$M_Base_contact2) = -1.88495559208991175E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscosV.$M_Base_contact2) = 1.57079632679489745E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscosV.$M_Base_contact3) = 6.90259946994213876E-10 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscosV.$M_Base_contact3) = 1.57079632679489745E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscosV.$M_chao_contact1) = -8.25436109487970704E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscosV.$M_chao_contact1) = -2.49999999924459759E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente1.$S_DiscosV.$M_chao_contact1) = $P_chao   ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscosV.$M_chao_contact2) = -8.37961337629605296E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscosV.$M_chao_contact2) = -2.49999999925551386E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente1.$S_DiscosV.$M_chao_contact2) = $P_chao   ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscosV.$M_chao_contact3) = -8.12910881346335756E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscosV.$M_chao_contact3) = -2.49999999919660015E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente1.$S_DiscosV.$M_chao_contact3) = $P_chao   ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoD1.$M_Base_contact1) = -6.28318531134158231E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoD1.$M_Base_contact1) = 1.57079632679489745E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoD1.$M_Base_contact2) = -6.28318530081784399E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoD1.$M_Base_contact2) = 1.57079632679489745E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoD1.$M_Base_contact3) = -1.37416432732535077E-09 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoD1.$M_Base_contact3) = 1.57079632679489745E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoD1.$M_chao_contact1) = 4.46638905120294083E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoD1.$M_chao_contact1) = -2.85000000530200415E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoD1.$M_chao_contact2) = 2.83896144912658521E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoD1.$M_chao_contact2) = -2.84999999189571973E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoD1.$M_chao_contact3) = 6.09381665327929811E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoD1.$M_chao_contact3) = -2.85000000175056056E-01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoD2.$M_Base_contact1) = -6.28318531809477854E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoD2.$M_Base_contact1) = 1.57079632679489745E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoD2.$M_Base_contact2) = -6.28318530619487614E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoD2.$M_Base_contact2) = 1.57079632679489745E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoD2.$M_Base_contact3) = 3.70984319103847007E-10 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoD2.$M_Base_contact3) = 1.57079632679489745E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoD2.$M_chao_contact1) = 4.21638905120294061E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoD2.$M_chao_contact1) = -2.15000001390495965E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoD2.$M_chao_contact2) = 2.58896144912658499E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoD2.$M_chao_contact2) = -2.14999999874556924E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoD2.$M_chao_contact3) = 5.84381665327929678E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente1.$S_DiscoD2.$M_chao_contact3) = -2.14999999952739967E-01 ! Algebraic states


subvar.str (                        $S_LinhaSemente2.$_IF         ) = '$_IF'                  ! Definition

joint.st.pos (            1 ,       $S_LinhaSemente2.$J_Estrutura ) = -4.83276818937002054E-25 ! Position
joint.st.pos (            2 ,       $S_LinhaSemente2.$J_Estrutura ) = 6.85971525005757209E-16 ! Position
joint.st.pos (            3 ,       $S_LinhaSemente2.$J_Estrutura ) = 1.25130208997151141E-24 ! Position
joint.st.pos (            4 ,       $S_LinhaSemente2.$J_Estrutura ) = 3.60638905120291120E-01 ! Position
joint.st.pos (            5 ,       $S_LinhaSemente2.$J_Estrutura ) = 2.50000000000000000E-01 ! Position
joint.st.pos (            6 ,       $S_LinhaSemente2.$J_Estrutura ) = 5.28390889286352361E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente2.$J_Estrutura ) = -7.70520635516500376E-73 ! Velocity
joint.st.vel (            2 ,       $S_LinhaSemente2.$J_Estrutura ) = -4.88571354623410649E-71 ! Velocity
joint.st.vel (            3 ,       $S_LinhaSemente2.$J_Estrutura ) = 2.62034262224271046E-72 ! Velocity
joint.st.vel (            4 ,       $S_LinhaSemente2.$J_Estrutura ) = 7.12445416791284190E-56 ! Velocity
joint.st.vel (            5 ,       $S_LinhaSemente2.$J_Estrutura ) = -6.79073874912161146E-72 ! Velocity
joint.st.vel (            6 ,       $S_LinhaSemente2.$J_Estrutura ) = 1.26609536577217846E-71 ! Velocity


prim.transparency (                 $S_LinhaSemente2.$P_chao      ) = 1.00000000000000000E+00 ! Transparency


joint.from (                        $S_LinhaSemente2.$J_connector ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_BarraCima.$M_Body1_contact) = -5.16244773342849794E-01 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente2.$S_BarraCima.$J_Body1) = -2.70526034059116294E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente2.$S_BarraCima.$J_Body1) = 1.72054363167400938E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_BarraBaixo.$M_Body1_contact) = 3.97756818462262896E+00 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente2.$S_BarraBaixo.$J_Body1) = -2.70526034059115850E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente2.$S_BarraBaixo.$J_Body1) = 1.15805833257672868E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_Base_contact1) = 1.00339934517910523E-09 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_Base_contact1) = 1.57079632679489589E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_Base_contact2) = 9.93731883870556902E-10 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_Base_contact2) = 1.57079632679489589E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_Base_contact3) = 9.96990776393030598E-10 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_Base_contact3) = 1.57079632679489589E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_chao_contact1) = -7.81436109487970931E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_chao_contact1) = 1.10000000158929301E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_chao_contact1) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_chao_contact2) = -7.96347095370869429E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_chao_contact2) = 1.10000000157398053E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_chao_contact2) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_chao_contact3) = -7.66525123605072345E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_chao_contact3) = 1.10000000157914238E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente2.$S_DiscoComp1.$M_chao_contact3) = $P_chao ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_Base_contact1) = 9.42477795950269304E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_Base_contact1) = 4.71238898038468967E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_Base_contact2) = 2.51327412299770003E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_Base_contact2) = 7.85398163397448279E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_Base_contact3) = 1.24462346021651111E-09 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_Base_contact3) = 1.57079632679489589E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_chao_contact1) = -7.81436109487970931E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_chao_contact1) = 3.90000000200631636E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_chao_contact1) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_chao_contact2) = -7.96347095370869429E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_chao_contact2) = 3.90000000199359209E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_chao_contact2) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_chao_contact3) = -7.66525123605072345E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_chao_contact3) = 3.90000000197137042E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente2.$S_DiscoComp2.$M_chao_contact3) = $P_chao ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscosV.$M_Base_contact1) = 6.28318530819009435E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscosV.$M_Base_contact1) = 1.57079632679489589E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscosV.$M_Base_contact2) = 6.28318530812315590E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscosV.$M_Base_contact2) = 1.57079632679489589E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscosV.$M_Base_contact3) = 1.06451968712342609E-09 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscosV.$M_Base_contact3) = 1.57079632679489589E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscosV.$M_chao_contact1) = -8.25436109487970882E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscosV.$M_chao_contact1) = 2.50000000117613863E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente2.$S_DiscosV.$M_chao_contact1) = $P_chao   ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscosV.$M_chao_contact2) = -8.37961337629605652E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscosV.$M_chao_contact2) = 2.50000000109822929E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente2.$S_DiscosV.$M_chao_contact2) = $P_chao   ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscosV.$M_chao_contact3) = -8.12910881346336112E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscosV.$M_chao_contact3) = 2.50000000123900445E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente2.$S_DiscosV.$M_chao_contact3) = $P_chao   ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoD1.$M_Base_contact1) = -6.28318532200773383E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoD1.$M_Base_contact1) = 1.57079632679489589E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoD1.$M_Base_contact2) = -6.28318525562301744E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoD1.$M_Base_contact2) = 1.57079632679489589E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoD1.$M_Base_contact3) = -2.52988626487174787E-10 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoD1.$M_Base_contact3) = 1.57079632679489589E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoD1.$M_chao_contact1) = 4.46638905120290808E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoD1.$M_chao_contact1) = 2.14999998111029211E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoD1.$M_chao_contact2) = 2.83896144912655135E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoD1.$M_chao_contact2) = 2.15000006567837243E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoD1.$M_chao_contact3) = 6.09381665327926592E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoD1.$M_chao_contact3) = 2.14999999967771527E-01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoD2.$M_Base_contact1) = -6.28318533145139391E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoD2.$M_Base_contact1) = 1.57079632679489589E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoD2.$M_Base_contact2) = -6.28318528106176721E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoD2.$M_Base_contact2) = 1.57079632679489589E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoD2.$M_Base_contact3) = -2.53796570228886112E-10 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoD2.$M_Base_contact3) = 1.57079632679489589E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoD2.$M_chao_contact1) = 4.21638905120290786E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoD2.$M_chao_contact1) = 2.84999996907992881E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoD2.$M_chao_contact2) = 2.58896144912655113E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoD2.$M_chao_contact2) = 2.85000003327172291E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoD2.$M_chao_contact3) = 5.84381665327926569E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente2.$S_DiscoD2.$M_chao_contact3) = 2.84999999967668671E-01 ! Algebraic states


subvar.str (                        $S_LinhaSemente3.$_IF         ) = '$_IF'                  ! Definition

joint.st.pos (            1 ,       $S_LinhaSemente3.$J_Estrutura ) = 1.37950368918215168E-24 ! Position
joint.st.pos (            2 ,       $S_LinhaSemente3.$J_Estrutura ) = -5.31889585917271512E-16 ! Position
joint.st.pos (            3 ,       $S_LinhaSemente3.$J_Estrutura ) = -1.16087408888353518E-24 ! Position
joint.st.pos (            4 ,       $S_LinhaSemente3.$J_Estrutura ) = 3.60638905120292397E-01 ! Position
joint.st.pos (            5 ,       $S_LinhaSemente3.$J_Estrutura ) = -7.50000000000000000E-01 ! Position
joint.st.pos (            6 ,       $S_LinhaSemente3.$J_Estrutura ) = 5.28390889286348586E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente3.$J_Estrutura ) = 2.62755962550361193E-72 ! Velocity
joint.st.vel (            2 ,       $S_LinhaSemente3.$J_Estrutura ) = 7.93928451263041821E-71 ! Velocity
joint.st.vel (            3 ,       $S_LinhaSemente3.$J_Estrutura ) = 2.22118733129423002E-73 ! Velocity
joint.st.vel (            4 ,       $S_LinhaSemente3.$J_Estrutura ) = 7.12445416791283466E-56 ! Velocity
joint.st.vel (            5 ,       $S_LinhaSemente3.$J_Estrutura ) = -1.28445203117676170E-71 ! Velocity
joint.st.vel (            6 ,       $S_LinhaSemente3.$J_Estrutura ) = 1.90651368739019690E-70 ! Velocity


prim.transparency (                 $S_LinhaSemente3.$P_chao      ) = 1.00000000000000000E+00 ! Transparency


joint.from (                        $S_LinhaSemente3.$J_connector ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_BarraCima.$M_Body1_contact) = -5.16244773342849683E-01 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente3.$S_BarraCima.$J_Body1) = -2.70526034059121345E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente3.$S_BarraCima.$J_Body1) = 2.75262266900781254E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_BarraBaixo.$M_Body1_contact) = 3.97756818462262896E+00 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente3.$S_BarraBaixo.$J_Body1) = -2.70526034059122122E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente3.$S_BarraBaixo.$J_Body1) = 2.66620730606132520E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_Base_contact1) = -4.71238898035446923E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_Base_contact1) = 1.72787595947438639E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_Base_contact2) = -6.91150383794192180E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_Base_contact2) = 2.67035375555132433E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_Base_contact3) = 9.73893722599316902E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_Base_contact3) = -3.92699081698724157E+01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_chao_contact1) = -7.81436109487970754E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_chao_contact1) = -8.90000000047866169E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_chao_contact1) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_chao_contact2) = -7.96347095370869340E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_chao_contact2) = -8.90000000070289676E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_chao_contact2) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_chao_contact3) = -7.66525123605072167E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_chao_contact3) = -8.89999999785871965E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente3.$S_DiscoComp1.$M_chao_contact3) = $P_chao ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_Base_contact1) = -3.45575191900091951E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_Base_contact1) = 1.09955742875642777E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_Base_contact2) = -5.02654824569202177E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_Base_contact2) = 1.41371669411540690E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_Base_contact3) = 2.01061929832789247E+02 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_Base_contact3) = -3.61283155162826191E+01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_chao_contact1) = -7.81436109487970754E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_chao_contact1) = -6.09999999917404390E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_chao_contact1) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_chao_contact2) = -7.96347095370869251E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_chao_contact2) = -6.09999999918195313E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_chao_contact2) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_chao_contact3) = -7.66525123605072167E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_chao_contact3) = -6.09999999518097358E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente3.$S_DiscoComp2.$M_chao_contact3) = $P_chao ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscosV.$M_Base_contact1) = -3.76991118427980396E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscosV.$M_Base_contact1) = 7.85398163397448368E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscosV.$M_Base_contact2) = -2.82743338791127954E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscosV.$M_Base_contact2) = 1.09955742875642777E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscosV.$M_Base_contact3) = 6.28318530720770667E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscosV.$M_Base_contact3) = -2.98451302091030328E+01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscosV.$M_chao_contact1) = -8.25436109487970704E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscosV.$M_chao_contact1) = -7.49999999967471465E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente3.$S_DiscosV.$M_chao_contact1) = $P_chao   ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscosV.$M_chao_contact2) = -8.37961337629605652E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscosV.$M_chao_contact2) = -7.50000000371909059E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente3.$S_DiscosV.$M_chao_contact2) = $P_chao   ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscosV.$M_chao_contact3) = -8.12910881346335934E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscosV.$M_chao_contact3) = -7.49999999967271069E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente3.$S_DiscosV.$M_chao_contact3) = $P_chao   ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoD1.$M_Base_contact1) = -6.28318530343366621E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoD1.$M_Base_contact1) = 1.57079632679489722E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoD1.$M_Base_contact2) = -6.28318535354171814E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoD1.$M_Base_contact2) = 1.57079632679489722E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoD1.$M_Base_contact3) = -1.46086028358682598E-08 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoD1.$M_Base_contact3) = 1.57079632679489722E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoD1.$M_chao_contact1) = 4.46638905120292640E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoD1.$M_chao_contact1) = -7.84999999522804082E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoD1.$M_chao_contact2) = 2.83896144912656967E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoD1.$M_chao_contact2) = -7.85000005906113074E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoD1.$M_chao_contact3) = 6.09381665327928368E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoD1.$M_chao_contact3) = -7.85000001861003049E-01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoD2.$M_Base_contact1) = -6.28318530937914943E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoD2.$M_Base_contact1) = 1.57079632679489722E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoD2.$M_Base_contact2) = -6.28318527801767246E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoD2.$M_Base_contact2) = 1.57079632679489722E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoD2.$M_Base_contact3) = -3.94354603202075872E-08 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoD2.$M_Base_contact3) = 1.57079632679489722E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoD2.$M_chao_contact1) = 4.21638905120292617E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoD2.$M_chao_contact1) = -7.15000000280204162E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoD2.$M_chao_contact2) = 2.58896144912656945E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoD2.$M_chao_contact2) = -7.14999996285037742E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoD2.$M_chao_contact3) = 5.84381665327928346E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente3.$S_DiscoD2.$M_chao_contact3) = -7.15000005023718299E-01 ! Algebraic states


subvar.str (                        $S_LinhaSemente4.$_IF         ) = '$_IF'                  ! Definition

joint.st.pos (            1 ,       $S_LinhaSemente4.$J_Estrutura ) = 9.42729594253115858E-27 ! Position
joint.st.pos (            2 ,       $S_LinhaSemente4.$J_Estrutura ) = 1.16122268568474889E-15 ! Position
joint.st.pos (            3 ,       $S_LinhaSemente4.$J_Estrutura ) = 7.08749352578026491E-28 ! Position
joint.st.pos (            4 ,       $S_LinhaSemente4.$J_Estrutura ) = 3.60638905120292175E-01 ! Position
joint.st.pos (            5 ,       $S_LinhaSemente4.$J_Estrutura ) = 7.50000000000000000E-01 ! Position
joint.st.pos (            6 ,       $S_LinhaSemente4.$J_Estrutura ) = 5.28390889286348586E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente4.$J_Estrutura ) = -2.55485705397753888E-71 ! Velocity
joint.st.vel (            2 ,       $S_LinhaSemente4.$J_Estrutura ) = 3.66428515967557665E-71 ! Velocity
joint.st.vel (            3 ,       $S_LinhaSemente4.$J_Estrutura ) = -3.40210493290801587E-72 ! Velocity
joint.st.vel (            4 ,       $S_LinhaSemente4.$J_Estrutura ) = 7.12445416791284009E-56 ! Velocity
joint.st.vel (            5 ,       $S_LinhaSemente4.$J_Estrutura ) = -1.86116033924576843E-71 ! Velocity
joint.st.vel (            6 ,       $S_LinhaSemente4.$J_Estrutura ) = -2.88442378075715462E-71 ! Velocity


prim.transparency (                 $S_LinhaSemente4.$P_chao      ) = 1.00000000000000000E+00 ! Transparency


joint.from (                        $S_LinhaSemente4.$J_connector ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_BarraCima.$M_Body1_contact) = -5.16244773342849572E-01 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente4.$S_BarraCima.$J_Body1) = -2.70526034059125897E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente4.$S_BarraCima.$J_Body1) = -1.53181649119391571E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_BarraBaixo.$M_Body1_contact) = 3.97756818462262896E+00 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente4.$S_BarraBaixo.$J_Body1) = -2.70526034059125897E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente4.$S_BarraBaixo.$J_Body1) = -1.46629528077043579E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_Base_contact1) = 2.19911485737410217E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_Base_contact1) = 1.09955742875642759E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_Base_contact2) = 3.76991118444549116E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_Base_contact2) = 1.41371669411540672E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_Base_contact3) = 2.04203522481977473E+02 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_Base_contact3) = 3.61283155162826191E+01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_chao_contact1) = -7.81436109487970842E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_chao_contact1) = 6.10000000219772298E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_chao_contact1) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_chao_contact2) = -7.96347095370869429E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_chao_contact2) = 6.10000000218166583E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_chao_contact2) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_chao_contact3) = -7.66525123605072256E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_chao_contact3) = 6.10000000215265237E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente4.$S_DiscoComp1.$M_chao_contact3) = $P_chao ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_Base_contact1) = 3.45575191880895076E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_Base_contact1) = 1.72787595947438604E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_Base_contact2) = 5.65486677660106594E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_Base_contact2) = 2.67035375555132433E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_Base_contact3) = 1.00530964916250198E+02 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_Base_contact3) = 3.92699081698724157E+01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_chao_contact1) = -7.81436109487970842E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_chao_contact1) = 8.90000000221464749E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_chao_contact1) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_chao_contact2) = -7.96347095370869429E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_chao_contact2) = 8.90000000220857568E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_chao_contact2) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_chao_contact3) = -7.66525123605072256E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_chao_contact3) = 8.90000000218075349E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente4.$S_DiscoComp2.$M_chao_contact3) = $P_chao ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscosV.$M_Base_contact1) = 2.51327412300083068E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscosV.$M_Base_contact1) = 7.85398163397448190E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscosV.$M_Base_contact2) = 1.57079632667365061E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscosV.$M_Base_contact2) = 1.09955742875642759E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscosV.$M_Base_contact3) = 6.28318530731440461E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscosV.$M_Base_contact3) = 3.29867228626928295E+01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscosV.$M_chao_contact1) = -8.25436109487970882E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscosV.$M_chao_contact1) = 7.50000000150139567E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente4.$S_DiscosV.$M_chao_contact1) = $P_chao   ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscosV.$M_chao_contact2) = -8.37961337629605652E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscosV.$M_chao_contact2) = 7.50000000141119449E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente4.$S_DiscosV.$M_chao_contact2) = $P_chao   ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscosV.$M_chao_contact3) = -8.12910881346336112E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscosV.$M_chao_contact3) = 7.50000000156916369E-01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente4.$S_DiscosV.$M_chao_contact3) = $P_chao   ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoD1.$M_Base_contact1) = -6.28318530753124094E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoD1.$M_Base_contact1) = 1.57079632679489545E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoD1.$M_Base_contact2) = -6.28318530776641637E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoD1.$M_Base_contact2) = 1.57079632679489545E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoD1.$M_Base_contact3) = -1.15201360902856259E-09 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoD1.$M_Base_contact3) = 1.57079632679489545E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoD1.$M_chao_contact1) = 4.46638905120291696E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoD1.$M_chao_contact1) = 7.14999999955202470E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoD1.$M_chao_contact2) = 2.83896144912656190E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoD1.$M_chao_contact2) = 7.14999999925243213E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoD1.$M_chao_contact3) = 6.09381665327927480E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoD1.$M_chao_contact3) = 7.14999999853244028E-01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoD2.$M_Base_contact1) = -6.28318530757614990E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoD2.$M_Base_contact1) = 1.57079632679489545E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoD2.$M_Base_contact2) = -6.28318530757547222E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoD2.$M_Base_contact2) = 1.57079632679489545E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoD2.$M_Base_contact3) = -3.95822676362886775E-10 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoD2.$M_Base_contact3) = 1.57079632679489545E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoD2.$M_chao_contact1) = 4.21638905120291674E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoD2.$M_chao_contact1) = 7.84999999949481442E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoD2.$M_chao_contact2) = 2.58896144912656168E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoD2.$M_chao_contact2) = 7.84999999949567706E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoD2.$M_chao_contact3) = 5.84381665327927569E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente4.$S_DiscoD2.$M_chao_contact3) = 7.84999999949575811E-01 ! Algebraic states


subvar.str (                        $S_LinhaSemente5.$_IF         ) = '$_IF'                  ! Definition

joint.st.pos (            1 ,       $S_LinhaSemente5.$J_Estrutura ) = -9.89423106842087278E-27 ! Position
joint.st.pos (            2 ,       $S_LinhaSemente5.$J_Estrutura ) = 1.97264527516404548E-15 ! Position
joint.st.pos (            3 ,       $S_LinhaSemente5.$J_Estrutura ) = 6.25694675380935937E-27 ! Position
joint.st.pos (            4 ,       $S_LinhaSemente5.$J_Estrutura ) = 3.60638905120292286E-01 ! Position
joint.st.pos (            5 ,       $S_LinhaSemente5.$J_Estrutura ) = -1.25000000000000000E+00 ! Position
joint.st.pos (            6 ,       $S_LinhaSemente5.$J_Estrutura ) = 5.28390889286347476E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente5.$J_Estrutura ) = -6.51166388320514974E-72 ! Velocity
joint.st.vel (            2 ,       $S_LinhaSemente5.$J_Estrutura ) = 9.16071289918893840E-71 ! Velocity
joint.st.vel (            3 ,       $S_LinhaSemente5.$J_Estrutura ) = -1.64196048801079591E-71 ! Velocity
joint.st.vel (            4 ,       $S_LinhaSemente5.$J_Estrutura ) = 7.12445416791283647E-56 ! Velocity
joint.st.vel (            5 ,       $S_LinhaSemente5.$J_Estrutura ) = 1.71866074315597514E-72 ! Velocity
joint.st.vel (            6 ,       $S_LinhaSemente5.$J_Estrutura ) = -1.34808627778744436E-71 ! Velocity


prim.transparency (                 $S_LinhaSemente5.$P_chao      ) = 1.00000000000000000E+00 ! Transparency


joint.from (                        $S_LinhaSemente5.$J_connector ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_BarraCima.$M_Body1_contact) = -5.16244773342849572E-01 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente5.$S_BarraCima.$J_Body1) = -2.70526034059131282E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente5.$S_BarraCima.$J_Body1) = -1.92886615448301687E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_BarraBaixo.$M_Body1_contact) = 3.97756818462262896E+00 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente5.$S_BarraBaixo.$J_Body1) = -2.70526034059130394E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente5.$S_BarraBaixo.$J_Body1) = -2.00895591145457065E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_Base_contact1) = -7.22566310341369729E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_Base_contact1) = 4.24115008234622053E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_Base_contact2) = -1.03672557569656007E+02 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_Base_contact2) = 6.75442420521805502E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_Base_contact3) = 6.91150383812381932E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_Base_contact3) = -3.61283155162826262E+01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_chao_contact1) = -7.81436109487970842E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_chao_contact1) = -1.38999999975105193E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_chao_contact1) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_chao_contact2) = -7.96347095370869429E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_chao_contact2) = -1.38999999981106548E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_chao_contact2) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_chao_contact3) = -7.66525123605072256E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_chao_contact3) = -1.38999999964160148E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente5.$S_DiscoComp1.$M_chao_contact3) = $P_chao ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_Base_contact1) = -5.96902604202142868E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_Base_contact1) = 2.35619449019234466E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_Base_contact2) = -8.48230016486492246E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_Base_contact2) = 4.24115008234622053E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_Base_contact3) = 6.91150383777543169E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_Base_contact3) = -3.61283155162826262E+01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_chao_contact1) = -7.81436109487970842E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_chao_contact1) = -1.10999999968191720E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_chao_contact1) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_chao_contact2) = -7.96347095370869429E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_chao_contact2) = -1.10999999972680619E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_chao_contact2) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_chao_contact3) = -7.66525123605072256E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_chao_contact3) = -1.11000000019341649E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente5.$S_DiscoComp2.$M_chao_contact3) = $P_chao ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscosV.$M_Base_contact1) = -5.65486677627996457E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscosV.$M_Base_contact1) = 3.29867228626928295E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscosV.$M_Base_contact2) = -4.39822971476642408E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscosV.$M_Base_contact2) = 2.67035375555132397E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscosV.$M_Base_contact3) = 4.39822971517212977E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscosV.$M_Base_contact3) = -2.98451302091030364E+01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscosV.$M_chao_contact1) = -8.25436109487970882E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscosV.$M_chao_contact1) = -1.24999999978856069E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente5.$S_DiscosV.$M_chao_contact1) = $P_chao   ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscosV.$M_chao_contact2) = -8.37961337629605652E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscosV.$M_chao_contact2) = -1.24999999969821385E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente5.$S_DiscosV.$M_chao_contact2) = $P_chao   ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscosV.$M_chao_contact3) = -8.12910881346336112E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscosV.$M_chao_contact3) = -1.24999999982958188E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente5.$S_DiscosV.$M_chao_contact3) = $P_chao   ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoD1.$M_Base_contact1) = -6.28318530729514624E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoD1.$M_Base_contact1) = 1.57079632679489478E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoD1.$M_Base_contact2) = -6.28318530729720237E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoD1.$M_Base_contact2) = 1.57079632679489478E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoD1.$M_Base_contact3) = -1.15359653073476079E-10 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoD1.$M_Base_contact3) = 1.57079632679489478E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoD1.$M_chao_contact1) = 4.46638905120291585E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoD1.$M_chao_contact1) = -1.28500000001472126E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoD1.$M_chao_contact2) = 2.83896144912655857E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoD1.$M_chao_contact2) = -1.28500000001498327E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoD1.$M_chao_contact3) = 6.09381665327927147E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoD1.$M_chao_contact3) = -1.28500000001469572E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoD2.$M_Base_contact1) = -6.28318530729476699E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoD2.$M_Base_contact1) = 1.57079632679489478E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoD2.$M_Base_contact2) = -6.28318530729968394E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoD2.$M_Base_contact2) = 1.57079632679489478E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoD2.$M_Base_contact3) = -1.17748656468655649E-10 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoD2.$M_Base_contact3) = 1.57079632679489478E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoD2.$M_chao_contact1) = 4.21638905120291563E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoD2.$M_chao_contact1) = -1.21500000001467301E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoD2.$M_chao_contact2) = 2.58896144912655835E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoD2.$M_chao_contact2) = -1.21500000001529940E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoD2.$M_chao_contact3) = 5.84381665327927124E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente5.$S_DiscoD2.$M_chao_contact3) = -1.21500000001500008E+00 ! Algebraic states


subvar.str (                        $S_LinhaSemente6.$_IF         ) = '$_IF'                  ! Definition

joint.st.pos (            1 ,       $S_LinhaSemente6.$J_Estrutura ) = -3.02924823305692310E-27 ! Position
joint.st.pos (            2 ,       $S_LinhaSemente6.$J_Estrutura ) = 6.92955130926976854E-16 ! Position
joint.st.pos (            3 ,       $S_LinhaSemente6.$J_Estrutura ) = -5.39041815635925977E-27 ! Position
joint.st.pos (            4 ,       $S_LinhaSemente6.$J_Estrutura ) = 3.60638905120294062E-01 ! Position
joint.st.pos (            5 ,       $S_LinhaSemente6.$J_Estrutura ) = 1.25000000000000000E+00 ! Position
joint.st.pos (            6 ,       $S_LinhaSemente6.$J_Estrutura ) = 5.28390889286342813E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente6.$J_Estrutura ) = -2.56123511763608419E-72 ! Velocity
joint.st.vel (            2 ,       $S_LinhaSemente6.$J_Estrutura ) = 1.22142838655852401E-71 ! Velocity
joint.st.vel (            3 ,       $S_LinhaSemente6.$J_Estrutura ) = -9.24512207156743923E-72 ! Velocity
joint.st.vel (            4 ,       $S_LinhaSemente6.$J_Estrutura ) = 7.12445416791283737E-56 ! Velocity
joint.st.vel (            5 ,       $S_LinhaSemente6.$J_Estrutura ) = 2.80168339274586513E-72 ! Velocity
joint.st.vel (            6 ,       $S_LinhaSemente6.$J_Estrutura ) = 1.41313432691375078E-70 ! Velocity


prim.transparency (                 $S_LinhaSemente6.$P_chao      ) = 1.00000000000000000E+00 ! Transparency


joint.from (                        $S_LinhaSemente6.$J_connector ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_BarraCima.$M_Body1_contact) = -5.16244773342849461E-01 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente6.$S_BarraCima.$J_Body1) = -2.70526034059140330E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente6.$S_BarraCima.$J_Body1) = 2.93359532921449578E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_BarraBaixo.$M_Body1_contact) = 3.97756818462262896E+00 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente6.$S_BarraBaixo.$J_Body1) = -2.70526034059139497E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente6.$S_BarraBaixo.$J_Body1) = 2.77583342547661582E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_Base_contact1) = 4.71238898025494990E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_Base_contact1) = 2.35619449019234466E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_Base_contact2) = 7.22566310312718514E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_Base_contact2) = 4.24115008234622124E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_Base_contact3) = 6.59734457241015093E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_Base_contact3) = 3.61283155162826262E+01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_chao_contact1) = -7.81436109487970576E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_chao_contact1) = 1.11000000020549594E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_chao_contact1) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_chao_contact2) = -7.96347095370869162E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_chao_contact2) = 1.11000000020486245E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_chao_contact2) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_chao_contact3) = -7.66525123605072078E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_chao_contact3) = 1.11000000020339740E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente6.$S_DiscoComp1.$M_chao_contact3) = $P_chao ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_Base_contact1) = 5.96902604171856410E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_Base_contact1) = 4.24115008234622124E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_Base_contact2) = 9.11061869530886952E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_Base_contact2) = 6.75442420521805502E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_Base_contact3) = 5.02654824584642910E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_Base_contact3) = 3.92699081698724157E+01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_chao_contact1) = -7.81436109487970576E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_chao_contact1) = 1.39000000016162706E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_chao_contact1) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_chao_contact2) = -7.96347095370869162E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_chao_contact2) = 1.39000000016081571E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_chao_contact2) = $P_chao ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_chao_contact3) = -7.66525123605072078E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_chao_contact3) = 1.39000000016276304E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente6.$S_DiscoComp2.$M_chao_contact3) = $P_chao ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscosV.$M_Base_contact1) = 4.39822971513904477E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscosV.$M_Base_contact1) = 3.29867228626928295E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscosV.$M_Base_contact2) = 3.14159265370209262E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscosV.$M_Base_contact2) = 2.67035375555132433E+01 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscosV.$M_Base_contact3) = 4.08407044955229637E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscosV.$M_Base_contact3) = 2.98451302091030364E+01 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscosV.$M_chao_contact1) = -8.25436109487970526E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscosV.$M_chao_contact1) = 1.25000000013191070E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente6.$S_DiscosV.$M_chao_contact1) = $P_chao   ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscosV.$M_chao_contact2) = -8.37961337629605296E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscosV.$M_chao_contact2) = 1.25000000013070633E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente6.$S_DiscosV.$M_chao_contact2) = $P_chao   ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscosV.$M_chao_contact3) = -8.12910881346335934E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscosV.$M_chao_contact3) = 1.25000000013319124E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente6.$S_DiscosV.$M_chao_contact3) = $P_chao   ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoD1.$M_Base_contact1) = -6.28318530773191330E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoD1.$M_Base_contact1) = 1.57079632679489589E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoD1.$M_Base_contact2) = -6.28318530772752304E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoD1.$M_Base_contact2) = 1.57079632679489589E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoD1.$M_Base_contact3) = -5.53486388625932716E-10 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoD1.$M_Base_contact3) = 1.57079632679489589E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoD1.$M_chao_contact1) = 4.46638905120293861E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoD1.$M_chao_contact1) = 1.21499999992963859E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoD1.$M_chao_contact2) = 2.83896144912658244E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoD1.$M_chao_contact2) = 1.21499999993019792E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoD1.$M_chao_contact3) = 6.09381665327929589E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoD1.$M_chao_contact3) = 1.21499999992949115E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoD2.$M_Base_contact1) = -6.28318530773267803E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoD2.$M_Base_contact1) = 1.57079632679489589E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoD2.$M_Base_contact2) = -6.28318530772834016E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoD2.$M_Base_contact2) = 1.57079632679489589E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoD2.$M_Base_contact3) = -5.54212451201121409E-10 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoD2.$M_Base_contact3) = 1.57079632679489589E+00 ! Algebraic states


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoD2.$M_chao_contact1) = 4.21638905120293839E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoD2.$M_chao_contact1) = 1.28499999992954095E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoD2.$M_chao_contact2) = 2.58896144912658221E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoD2.$M_chao_contact2) = 1.28499999993009362E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoD2.$M_chao_contact3) = 5.84381665327929345E-01 ! Algebraic states
marker.st.alg (           2 ,       $S_LinhaSemente6.$S_DiscoD2.$M_chao_contact3) = 1.28499999992939840E+00 ! Algebraic states


subvar.str (                        $S_disco1.$_b                 ) = '0.01'                  ! Definition

subvar.str (                        $S_disco1.$_d                 ) = '0.511'                 ! Definition

subvar.str (                        $S_disco1.$_A                 ) = '0.001*6.5'             ! Definition

marker.st.alg (           1 ,       $S_disco1.$M_Base_contact1    ) = -6.28318530833952504E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco1.$M_Base_contact1    ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_disco1.$M_Base_contact2    ) = -6.28318531299618943E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco1.$M_Base_contact2    ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_disco1.$M_Base_contact3    ) = -1.38230076762359886E+02 ! Algebraic states
marker.st.alg (           2 ,       $S_disco1.$M_Base_contact3    ) = 1.41371669411540690E+01 ! Algebraic states

joint.from (                        $S_disco1.$J_Base             ) = $M_Boogie_Disco1        ! From Marker
joint.type (                        $S_disco1.$J_Base             ) = 2                       ! Type


prim.pos (                2 ,       $S_disco1.$P_Roda1_pneu       ) = 4.49999999999999983E-02 ! Position
prim.ang (                3 ,       $S_disco1.$P_Roda1_pneu       ) = { 90 deg }              ! Angles
prim.mp.dens.solid (                $S_disco1.$P_Roda1_pneu       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $S_disco1.$P_Roda1_pneu       ) = './pecas_stl/disco_de_corte_stl/discos.stl' ! [-] CAD file name

prim.type (                         $S_disco1.$P_Roda1_aro        ) = 2                       ! Type
prim.ang (                1 ,       $S_disco1.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Angles
prim.ang (                2 ,       $S_disco1.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            2 ,       $S_disco1.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            2 ,       $S_disco1.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            2 ,       $S_disco1.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            2 ,       $S_disco1.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $S_disco1.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! Transparency
prim.par (                2 ,       $S_disco1.$P_Roda1_aro        ) = $S_disco1.$_b           ! [m] Height
prim.par (                3 ,       $S_disco1.$P_Roda1_aro        ) = $S_disco1.$_d           ! [m] Outer diameter
prim.par (                4 ,       $S_disco1.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [m] Inner diameter
prim.par (                5 ,       $S_disco1.$P_Roda1_aro        ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $S_disco1.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $S_disco1.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $S_disco1.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $S_disco1.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [rad] Start angle


joint.from (                        $S_disco1.$J_connector        ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_disco1.$M_chao_contact1    ) = -5.43299999999999983E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco1.$M_chao_contact1    ) = -2.65000000124693325E-01 ! Algebraic states
marker.par (              3 ,       $S_disco1.$M_chao_contact1    ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_disco1.$M_chao_contact2    ) = -5.65070039389031820E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco1.$M_chao_contact2    ) = -2.65000000625284782E-01 ! Algebraic states
marker.par (              3 ,       $S_disco1.$M_chao_contact2    ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_disco1.$M_chao_contact3    ) = -5.21529960610968146E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco1.$M_chao_contact3    ) = -2.65000000473965713E-01 ! Algebraic states
marker.par (              3 ,       $S_disco1.$M_chao_contact3    ) = $P_chao                 ! [-] Contact geometry Primitive

prim.transparency (                 $S_disco1.$P_chao             ) = 1.00000000000000000E+00 ! Transparency


subvar.str (                        $S_disco2.$_b                 ) = '0.01'                  ! Definition

subvar.str (                        $S_disco2.$_d                 ) = '0.511'                 ! Definition

subvar.str (                        $S_disco2.$_A                 ) = '0.001*6.5'             ! Definition

marker.st.alg (           1 ,       $S_disco2.$M_Base_contact1    ) = -6.28318530878820170E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco2.$M_Base_contact1    ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_disco2.$M_Base_contact2    ) = -6.28318530891428484E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco2.$M_Base_contact2    ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_disco2.$M_Base_contact3    ) = 2.76416209722312299E-10 ! Algebraic states
marker.st.alg (           2 ,       $S_disco2.$M_Base_contact3    ) = 1.57079632679489656E+00 ! Algebraic states

joint.from (                        $S_disco2.$J_Base             ) = $M_Boogie_Disco2        ! From Marker
joint.type (                        $S_disco2.$J_Base             ) = 2                       ! Type


prim.pos (                2 ,       $S_disco2.$P_Roda1_pneu       ) = 4.49999999999999983E-02 ! Position
prim.ang (                3 ,       $S_disco2.$P_Roda1_pneu       ) = { 90 deg }              ! Angles
prim.mp.dens.solid (                $S_disco2.$P_Roda1_pneu       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $S_disco2.$P_Roda1_pneu       ) = './pecas_stl/disco_de_corte_stl/discos.stl' ! [-] CAD file name

prim.type (                         $S_disco2.$P_Roda1_aro        ) = 2                       ! Type
prim.ang (                1 ,       $S_disco2.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Angles
prim.ang (                2 ,       $S_disco2.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            2 ,       $S_disco2.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            2 ,       $S_disco2.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            2 ,       $S_disco2.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            2 ,       $S_disco2.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $S_disco2.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! Transparency
prim.par (                2 ,       $S_disco2.$P_Roda1_aro        ) = $S_disco2.$_b           ! [m] Height
prim.par (                3 ,       $S_disco2.$P_Roda1_aro        ) = $S_disco2.$_d           ! [m] Outer diameter
prim.par (                4 ,       $S_disco2.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [m] Inner diameter
prim.par (                5 ,       $S_disco2.$P_Roda1_aro        ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $S_disco2.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $S_disco2.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $S_disco2.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $S_disco2.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [rad] Start angle


joint.from (                        $S_disco2.$J_connector        ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_disco2.$M_chao_contact1    ) = -5.43299999999999983E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco2.$M_chao_contact1    ) = 2.34999999827073897E-01 ! Algebraic states
marker.par (              3 ,       $S_disco2.$M_chao_contact1    ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_disco2.$M_chao_contact2    ) = -5.65070039389031820E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco2.$M_chao_contact2    ) = 2.34999999813519933E-01 ! Algebraic states
marker.par (              3 ,       $S_disco2.$M_chao_contact2    ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_disco2.$M_chao_contact3    ) = -5.21529960610968146E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco2.$M_chao_contact3    ) = 2.35000000029714717E-01 ! Algebraic states
marker.par (              3 ,       $S_disco2.$M_chao_contact3    ) = $P_chao                 ! [-] Contact geometry Primitive

prim.transparency (                 $S_disco2.$P_chao             ) = 1.00000000000000000E+00 ! Transparency


subvar.str (                        $S_disco3.$_b                 ) = '0.01'                  ! Definition

subvar.str (                        $S_disco3.$_d                 ) = '0.511'                 ! Definition

subvar.str (                        $S_disco3.$_A                 ) = '0.001*6.5'             ! Definition

marker.st.alg (           1 ,       $S_disco3.$M_Base_contact1    ) = -6.28318531405613800E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco3.$M_Base_contact1    ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_disco3.$M_Base_contact2    ) = -6.28318526810881028E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco3.$M_Base_contact2    ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_disco3.$M_Base_contact3    ) = -6.91150383820817069E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_disco3.$M_Base_contact3    ) = 1.41371669411540690E+01 ! Algebraic states

joint.from (                        $S_disco3.$J_Base             ) = $M_Boogie_Disco3        ! From Marker
joint.type (                        $S_disco3.$J_Base             ) = 2                       ! Type


prim.pos (                2 ,       $S_disco3.$P_Roda1_pneu       ) = 4.49999999999999983E-02 ! Position
prim.ang (                3 ,       $S_disco3.$P_Roda1_pneu       ) = { 90 deg }              ! Angles
prim.mp.dens.solid (                $S_disco3.$P_Roda1_pneu       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $S_disco3.$P_Roda1_pneu       ) = './pecas_stl/disco_de_corte_stl/discos.stl' ! [-] CAD file name

prim.type (                         $S_disco3.$P_Roda1_aro        ) = 2                       ! Type
prim.ang (                1 ,       $S_disco3.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Angles
prim.ang (                2 ,       $S_disco3.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            2 ,       $S_disco3.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            2 ,       $S_disco3.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            2 ,       $S_disco3.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            2 ,       $S_disco3.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $S_disco3.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! Transparency
prim.par (                2 ,       $S_disco3.$P_Roda1_aro        ) = $S_disco3.$_b           ! [m] Height
prim.par (                3 ,       $S_disco3.$P_Roda1_aro        ) = $S_disco3.$_d           ! [m] Outer diameter
prim.par (                4 ,       $S_disco3.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [m] Inner diameter
prim.par (                5 ,       $S_disco3.$P_Roda1_aro        ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $S_disco3.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $S_disco3.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $S_disco3.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $S_disco3.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [rad] Start angle


joint.from (                        $S_disco3.$J_connector        ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_disco3.$M_chao_contact1    ) = -5.43299999999999983E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco3.$M_chao_contact1    ) = -7.65000000739229247E-01 ! Algebraic states
marker.par (              3 ,       $S_disco3.$M_chao_contact1    ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_disco3.$M_chao_contact2    ) = -5.65070039389031908E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco3.$M_chao_contact2    ) = -7.64999995799891641E-01 ! Algebraic states
marker.par (              3 ,       $S_disco3.$M_chao_contact2    ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_disco3.$M_chao_contact3    ) = -5.21529960610968057E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco3.$M_chao_contact3    ) = -7.65000000333922459E-01 ! Algebraic states
marker.par (              3 ,       $S_disco3.$M_chao_contact3    ) = $P_chao                 ! [-] Contact geometry Primitive

prim.transparency (                 $S_disco3.$P_chao             ) = 1.00000000000000000E+00 ! Transparency


subvar.str (                        $S_disco4.$_b                 ) = '0.01'                  ! Definition

subvar.str (                        $S_disco4.$_d                 ) = '0.511'                 ! Definition

subvar.str (                        $S_disco4.$_A                 ) = '0.001*6.5'             ! Definition

marker.st.alg (           1 ,       $S_disco4.$M_Base_contact1    ) = -6.28318530574978862E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco4.$M_Base_contact1    ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_disco4.$M_Base_contact2    ) = -6.28318531011843451E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco4.$M_Base_contact2    ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_disco4.$M_Base_contact3    ) = -6.28318530725211630E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_disco4.$M_Base_contact3    ) = -1.09955742875642759E+01 ! Algebraic states

joint.from (                        $S_disco4.$J_Base             ) = $M_Boogie_Disco4        ! From Marker
joint.type (                        $S_disco4.$J_Base             ) = 2                       ! Type


prim.pos (                2 ,       $S_disco4.$P_Roda1_pneu       ) = 4.49999999999999983E-02 ! Position
prim.ang (                3 ,       $S_disco4.$P_Roda1_pneu       ) = { 90 deg }              ! Angles
prim.mp.dens.solid (                $S_disco4.$P_Roda1_pneu       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $S_disco4.$P_Roda1_pneu       ) = './pecas_stl/disco_de_corte_stl/discos.stl' ! [-] CAD file name

prim.type (                         $S_disco4.$P_Roda1_aro        ) = 2                       ! Type
prim.ang (                1 ,       $S_disco4.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Angles
prim.ang (                2 ,       $S_disco4.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            2 ,       $S_disco4.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            2 ,       $S_disco4.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            2 ,       $S_disco4.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            2 ,       $S_disco4.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $S_disco4.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! Transparency
prim.par (                2 ,       $S_disco4.$P_Roda1_aro        ) = $S_disco4.$_b           ! [m] Height
prim.par (                3 ,       $S_disco4.$P_Roda1_aro        ) = $S_disco4.$_d           ! [m] Outer diameter
prim.par (                4 ,       $S_disco4.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [m] Inner diameter
prim.par (                5 ,       $S_disco4.$P_Roda1_aro        ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $S_disco4.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $S_disco4.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $S_disco4.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $S_disco4.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [rad] Start angle


joint.from (                        $S_disco4.$J_connector        ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_disco4.$M_chao_contact1    ) = -5.43299999999999983E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco4.$M_chao_contact1    ) = 7.35000000153703148E-01 ! Algebraic states
marker.par (              3 ,       $S_disco4.$M_chao_contact1    ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_disco4.$M_chao_contact2    ) = -5.65070039389031820E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco4.$M_chao_contact2    ) = 7.34999999684073813E-01 ! Algebraic states
marker.par (              3 ,       $S_disco4.$M_chao_contact2    ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_disco4.$M_chao_contact3    ) = -5.21529960610968146E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco4.$M_chao_contact3    ) = 7.34999999922030356E-01 ! Algebraic states
marker.par (              3 ,       $S_disco4.$M_chao_contact3    ) = $P_chao                 ! [-] Contact geometry Primitive

prim.transparency (                 $S_disco4.$P_chao             ) = 1.00000000000000000E+00 ! Transparency


subvar.str (                        $S_disco5.$_b                 ) = '0.01'                  ! Definition

subvar.str (                        $S_disco5.$_d                 ) = '0.511'                 ! Definition

subvar.str (                        $S_disco5.$_A                 ) = '0.001*6.5'             ! Definition

marker.st.alg (           1 ,       $S_disco5.$M_Base_contact1    ) = -6.28318534025973818E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco5.$M_Base_contact1    ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_disco5.$M_Base_contact2    ) = -6.28318529173541318E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco5.$M_Base_contact2    ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_disco5.$M_Base_contact3    ) = -3.76991118594808796E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_disco5.$M_Base_contact3    ) = 1.41371669411540690E+01 ! Algebraic states

joint.from (                        $S_disco5.$J_Base             ) = $M_Boogie_Disco5        ! From Marker
joint.type (                        $S_disco5.$J_Base             ) = 2                       ! Type


prim.pos (                2 ,       $S_disco5.$P_Roda1_pneu       ) = 4.49999999999999983E-02 ! Position
prim.ang (                3 ,       $S_disco5.$P_Roda1_pneu       ) = { 90 deg }              ! Angles
prim.mp.dens.solid (                $S_disco5.$P_Roda1_pneu       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $S_disco5.$P_Roda1_pneu       ) = './pecas_stl/disco_de_corte_stl/discos.stl' ! [-] CAD file name

prim.type (                         $S_disco5.$P_Roda1_aro        ) = 2                       ! Type
prim.ang (                1 ,       $S_disco5.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Angles
prim.ang (                2 ,       $S_disco5.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            2 ,       $S_disco5.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            2 ,       $S_disco5.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            2 ,       $S_disco5.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            2 ,       $S_disco5.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $S_disco5.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! Transparency
prim.par (                2 ,       $S_disco5.$P_Roda1_aro        ) = $S_disco5.$_b           ! [m] Height
prim.par (                3 ,       $S_disco5.$P_Roda1_aro        ) = $S_disco5.$_d           ! [m] Outer diameter
prim.par (                4 ,       $S_disco5.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [m] Inner diameter
prim.par (                5 ,       $S_disco5.$P_Roda1_aro        ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $S_disco5.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $S_disco5.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $S_disco5.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $S_disco5.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [rad] Start angle
prim.par (               10 ,       $S_disco5.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [rad] Delta angle
prim.par (               11 ,       $S_disco5.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [-] Close geometry with


joint.from (                        $S_disco5.$J_connector        ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_disco5.$M_chao_contact1    ) = -5.43299999999999983E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco5.$M_chao_contact1    ) = -1.26500000355611619E+00 ! Algebraic states
marker.par (              3 ,       $S_disco5.$M_chao_contact1    ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_disco5.$M_chao_contact2    ) = -5.65070039389031820E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco5.$M_chao_contact2    ) = -1.26499999833975152E+00 ! Algebraic states
marker.par (              3 ,       $S_disco5.$M_chao_contact2    ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_disco5.$M_chao_contact3    ) = -5.21529960610968146E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco5.$M_chao_contact3    ) = -1.26500000176336158E+00 ! Algebraic states
marker.par (              3 ,       $S_disco5.$M_chao_contact3    ) = $P_chao                 ! [-] Contact geometry Primitive

prim.transparency (                 $S_disco5.$P_chao             ) = 1.00000000000000000E+00 ! Transparency


subvar.str (                        $S_disco6.$_b                 ) = '0.01'                  ! Definition

subvar.str (                        $S_disco6.$_d                 ) = '0.511'                 ! Definition

subvar.str (                        $S_disco6.$_A                 ) = '0.001*6.5'             ! Definition

marker.st.alg (           1 ,       $S_disco6.$M_Base_contact1    ) = -6.28318530937579300E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco6.$M_Base_contact1    ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_disco6.$M_Base_contact2    ) = -6.28318531161015326E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco6.$M_Base_contact2    ) = 1.57079632679489656E+00 ! Algebraic states

marker.st.alg (           1 ,       $S_disco6.$M_Base_contact3    ) = -3.76991118449233582E+01 ! Algebraic states
marker.st.alg (           2 ,       $S_disco6.$M_Base_contact3    ) = -1.09955742875642759E+01 ! Algebraic states

joint.from (                        $S_disco6.$J_Base             ) = $M_Boogie_Disco6        ! From Marker
joint.type (                        $S_disco6.$J_Base             ) = 2                       ! Type


prim.pos (                2 ,       $S_disco6.$P_Roda1_pneu       ) = 4.49999999999999983E-02 ! Position
prim.ang (                3 ,       $S_disco6.$P_Roda1_pneu       ) = { 90 deg }              ! Angles
prim.mp.dens.solid (                $S_disco6.$P_Roda1_pneu       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $S_disco6.$P_Roda1_pneu       ) = './pecas_stl/disco_de_corte_stl/discos.stl' ! [-] CAD file name

prim.type (                         $S_disco6.$P_Roda1_aro        ) = 2                       ! Type
prim.ang (                1 ,       $S_disco6.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Angles
prim.ang (                2 ,       $S_disco6.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            2 ,       $S_disco6.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (red component)
prim.color.g (            2 ,       $S_disco6.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (green component)
prim.color.b (            2 ,       $S_disco6.$P_Roda1_aro        ) = 1.28000000000000000E+02 ! Colors (blue component)
prim.color.t (            2 ,       $S_disco6.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $S_disco6.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! Transparency
prim.par (                2 ,       $S_disco6.$P_Roda1_aro        ) = $S_disco6.$_b           ! [m] Height
prim.par (                3 ,       $S_disco6.$P_Roda1_aro        ) = $S_disco6.$_d           ! [m] Outer diameter
prim.par (                4 ,       $S_disco6.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [m] Inner diameter
prim.par (                5 ,       $S_disco6.$P_Roda1_aro        ) = 2.40000000000000000E+01 ! [-] Number of planes
prim.par (                6 ,       $S_disco6.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [-] Number of highlighted planes
prim.par (                7 ,       $S_disco6.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (                8 ,       $S_disco6.$P_Roda1_aro        ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (                9 ,       $S_disco6.$P_Roda1_aro        ) = 0.00000000000000000E+00 ! [rad] Start angle


joint.from (                        $S_disco6.$J_connector        ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_disco6.$M_chao_contact1    ) = -5.43299999999999983E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco6.$M_chao_contact1    ) = 1.23499999976390806E+00 ! Algebraic states
marker.par (              3 ,       $S_disco6.$M_chao_contact1    ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_disco6.$M_chao_contact2    ) = -5.65070039389031820E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco6.$M_chao_contact2    ) = 1.23499999952371442E+00 ! Algebraic states
marker.par (              3 ,       $S_disco6.$M_chao_contact2    ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_disco6.$M_chao_contact3    ) = -5.21529960610968146E+00 ! Algebraic states
marker.st.alg (           2 ,       $S_disco6.$M_chao_contact3    ) = 1.23499999980157216E+00 ! Algebraic states
marker.par (              3 ,       $S_disco6.$M_chao_contact3    ) = $P_chao                 ! [-] Contact geometry Primitive

prim.transparency (                 $S_disco6.$P_chao             ) = 1.00000000000000000E+00 ! Transparency


model.data.redundancy                                               = 'eJxjYBgFxAJGEsWpaQ6pdpAKKDGfkUw2IwV60c3B5h5c5pMjTq755pYGiQYpJskGRibG5qZGhsmJFmaWximmaWmGZmaW5mkAp8wIX4ADAAAAAAAA' ! Constraint redundancy data
model.data.dependency                                               = 'eJxjZEAFLEDMSABjA4T0oOvFZya1zMJmLil8UtWxkeBuUv2GzscXdpT4YaDUERt25KQLdP5o2JGWpxjwsKnlh+EYduj8kZbuGAjwR8OOtLQ1GnYjU525pUGiQYpJsoGRibG5qZFhcqKFmaVximlamqGZmaV5GgD3wglixAkAAAAAAAA=' ! Solver state dependency data
