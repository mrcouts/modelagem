!file.version=3.7! Removing this line will make the file unreadable

!**********************************************************************
! Simpack Version Information
!**********************************************************************
version.number = 20220002
version.desc   = ''
version.build  = 122

!**********************************************************************
!  Global parameters
!**********************************************************************
searchpath (              1                                       ) = '.'
gravity (                 1                                       ) = 0.00000000000000000E+00 ! Gravity
gravity (                 2                                       ) = 0.00000000000000000E+00 ! Gravity
gravity (                 3                                       ) = -9.81000000000000050E+00 ! Gravity
vehicle.startvel                                                    = 0.00000000000000000E+00 ! Vehicle initial velocity
vehicle.applystartvel                                               = 0                       ! Apply vehicle initial velocity at solver start
glob.compat.flxnodeori                                              = 0                       ! Flexbody Node Orientation Method
glob.compat.afcf                                                    = 0                       ! References Frame for Joint and Force Element Forces and Torques
rw.cont.meth                                                        = 2                       ! MISCPAR_RW_CONTACT_METHOD
rw.linear                                                           = 0                       ! MISCPAR_RW_PROFILE_LINEARIZATION_METHOD
time                                                                = 0.00000000000000000E+00 ! Time
slv.active                                                          = $SLV_SolverSettings     ! Active SolverSettings element
track.active                                                        = null                    ! Active Track element
prop3d.bg.base.color.r                                              = 2.15000000000000000E+02 ! Background color (red component)
prop3d.bg.base.color.g                                              = 2.15000000000000000E+02 ! Background color (green component)
prop3d.bg.base.color.b                                              = 2.15000000000000000E+02 ! Background color (blue component)
prop3d.bg.base.color.t                                              = 0.00000000000000000E+00 ! Background color (transparency component)
prop3d.bg.grad.color.r                                              = 2.55000000000000000E+02 ! Gradient color (red component)
prop3d.bg.grad.color.g                                              = 2.55000000000000000E+02 ! Gradient color (green component)
prop3d.bg.grad.color.b                                              = 2.55000000000000000E+02 ! Gradient color (blue component)
prop3d.bg.grad.color.t                                              = 0.00000000000000000E+00 ! Gradient color (transparency component)
prop3d.bg.gradient                                                  = 1                       ! 0 = constant, 1 = gradient
prop3d.marker.size                                                  = 0.00000000000000000E+00 ! length of Marker axes, if value is zero, use "auto"
prop3d.marker.auto                                                  = 1                       ! 0 = user defined, 1 = auto size determination
prop3d.marker.color.r                                               = 0.00000000000000000E+00 ! Marker color (red component)
prop3d.marker.color.g                                               = 0.00000000000000000E+00 ! Marker color (green component)
prop3d.marker.color.b                                               = 0.00000000000000000E+00 ! Marker color (blue component)
prop3d.marker.color.t                                               = 0.00000000000000000E+00 ! Marker color (transparency component)
prop3d.display                                                      = 1                       ! 1 = shaded,  2 = wireframe, 3 = hidden line
prop3d.bbox                                                         = 0                       ! 0 = exclude all refsys objects, 1 = include all refsys objects
prop2d.joint.visible                                                = 1                       ! Joints visible
prop2d.force.visible                                                = 1                       ! Forces visible
prop2d.constr.visible                                               = 1                       ! Constraints visible
prop2d.sensor.visible                                               = 0                       ! Sensors visible
prop2d.grid.visible                                                 = 0                       ! Show grid
prop2d.grid.hor.start                                               = 0.00000000000000000E+00 ! Horizontal offset
prop2d.grid.hor.step                                                = 1.00000000000000000E+01 ! Horizontal step
prop2d.grid.vert.start                                              = 0.00000000000000000E+00 ! Vertical offset
prop2d.grid.vert.step                                               = 1.00000000000000000E+01 ! Vertical step
prop2d.line.width                                                   = 0                       ! Line width
prop2d.proj.dir                                                     = 2                       ! Projection direction


!**********************************************************************
! Substructures
!**********************************************************************
substr.file (                       $S_esteira1                   ) = 'esteira.spck'          ! Filename
substr.id (                         $S_esteira1                   ) = '1'                     ! Substructure Id

substr.file (                       $S_esteira2                   ) = 'esteira.spck'          ! Filename
substr.id (                         $S_esteira2                   ) = '2'                     ! Substructure Id

substr.file (                       $S_rocker1                    ) = 'Rocker.spck'           ! Filename
substr.id (                         $S_rocker1                    ) = '1'                     ! Substructure Id

substr.file (                       $S_rocker2                    ) = 'Rocker.spck'           ! Filename
substr.id (                         $S_rocker2                    ) = '2'                     ! Substructure Id

substr.file (                       $S_roda1                      ) = 'RODA.spck'             ! Filename
substr.id (                         $S_roda1                      ) = '1'                     ! Substructure Id

substr.file (                       $S_roda2                      ) = 'RODA.spck'             ! Filename
substr.id (                         $S_roda2                      ) = '2'                     ! Substructure Id

substr.file (                       $S_LinhaSemente1              ) = './LinhaDeSemente.spck' ! Filename
substr.id (                         $S_LinhaSemente1              ) = '1'                     ! Substructure Id

substr.file (                       $S_LinhaSemente2              ) = './LinhaDeSemente.spck' ! Filename
substr.id (                         $S_LinhaSemente2              ) = '2'                     ! Substructure Id

substr.file (                       $S_LinhaSemente3              ) = './LinhaDeSemente.spck' ! Filename
substr.id (                         $S_LinhaSemente3              ) = '3'                     ! Substructure Id

substr.file (                       $S_LinhaSemente4              ) = './LinhaDeSemente.spck' ! Filename
substr.id (                         $S_LinhaSemente4              ) = '4'                     ! Substructure Id

substr.file (                       $S_LinhaSemente5              ) = './LinhaDeSemente.spck' ! Filename
substr.id (                         $S_LinhaSemente5              ) = '5'                     ! Substructure Id

substr.file (                       $S_LinhaSemente6              ) = './LinhaDeSemente.spck' ! Filename
substr.id (                         $S_LinhaSemente6              ) = '6'                     ! Substructure Id

!**********************************************************************
! Views
!**********************************************************************
view.type (                         $V_WorkingView                ) = 0                       ! Projection type
view.pos (                1 ,       $V_WorkingView                ) = 1.50926647675805725E+00 ! Position
view.pos (                2 ,       $V_WorkingView                ) = -5.92890883618355424E+00 ! Position
view.pos (                3 ,       $V_WorkingView                ) = 6.54169359069783241E-01 ! Position
view.orient (             1 ,       $V_WorkingView                ) = 7.07009494304656982E-01 ! Orientation
view.orient (             2 ,       $V_WorkingView                ) = -1.17309521883726120E-02 ! Orientation
view.orient (             3 ,       $V_WorkingView                ) = 1.17309521883726120E-02 ! Orientation
view.orient (             4 ,       $V_WorkingView                ) = 7.07009494304656982E-01 ! Orientation
view.angle (                        $V_WorkingView                ) = 7.85398185253143311E-01 ! Lens angle
view.fclip.auto (                   $V_WorkingView                ) = 1                       ! Front clipping plane auto
view.bclip.auto (                   $V_WorkingView                ) = 1                       ! Back clipping plane auto
view.fclip.value (                  $V_WorkingView                ) = 9.99999977648258209E-03 ! Front clipping plane value
view.bclip.value (                  $V_WorkingView                ) = 2.99460620880126953E+01 ! Back clipping plane value
view.rotcenter.type (               $V_WorkingView                ) = 0                       ! Rotation center type
view.rotcenter.adjust (             $V_WorkingView                ) = 1                       ! Adjust rotation center
view.motion.active (                $V_WorkingView                ) = 0                       ! Camera is moved

view.type (                         $V_Ortho                      ) = 0                       ! Projection type
view.pos (                1 ,       $V_Ortho                      ) = 6.85247761197388172E-01 ! Position
view.pos (                2 ,       $V_Ortho                      ) = -7.19467787537723780E-01 ! Position
view.pos (                3 ,       $V_Ortho                      ) = 3.52404586199554615E-01 ! Position
view.orient (             1 ,       $V_Ortho                      ) = 5.24405717849731445E-01 ! Orientation
view.orient (             2 ,       $V_Ortho                      ) = 2.11789414286613464E-01 ! Orientation
view.orient (             3 ,       $V_Ortho                      ) = 2.88275688886642456E-01 ! Orientation
view.orient (             4 ,       $V_Ortho                      ) = 7.72684276103973389E-01 ! Orientation
view.angle (                        $V_Ortho                      ) = 7.85398185253143311E-01 ! Lens angle
view.fclip.auto (                   $V_Ortho                      ) = 1                       ! Front clipping plane auto
view.bclip.auto (                   $V_Ortho                      ) = 1                       ! Back clipping plane auto
view.rotcenter.type (               $V_Ortho                      ) = 0                       ! Rotation center type
view.rotcenter.adjust (             $V_Ortho                      ) = 1                       ! Adjust rotation center
view.motion.active (                $V_Ortho                      ) = 0                       ! Camera is moved

view.type (                         $V_Front                      ) = 1                       ! Projection type
view.pos (                1 ,       $V_Front                      ) = 0.00000000000000000E+00 ! Position
view.pos (                2 ,       $V_Front                      ) = -5.99845290184020996E-01 ! Position
view.pos (                3 ,       $V_Front                      ) = 2.98023294931226701E-08 ! Position
view.orient (             1 ,       $V_Front                      ) = 7.07106769084930420E-01 ! Orientation
view.orient (             2 ,       $V_Front                      ) = 0.00000000000000000E+00 ! Orientation
view.orient (             3 ,       $V_Front                      ) = 0.00000000000000000E+00 ! Orientation
view.orient (             4 ,       $V_Front                      ) = 7.07106769084930420E-01 ! Orientation
view.height (                       $V_Front                      ) = 8.00000000000000044E-01 ! View height
view.fclip.auto (                   $V_Front                      ) = 1                       ! Front clipping plane auto
view.bclip.auto (                   $V_Front                      ) = 1                       ! Back clipping plane auto
view.rotcenter.type (               $V_Front                      ) = 0                       ! Rotation center type
view.rotcenter.adjust (             $V_Front                      ) = 1                       ! Adjust rotation center
view.motion.active (                $V_Front                      ) = 0                       ! Camera is moved

view.type (                         $V_Top                        ) = 1                       ! Projection type
view.pos (                1 ,       $V_Top                        ) = 0.00000000000000000E+00 ! Position
view.pos (                2 ,       $V_Top                        ) = -7.49893719330430031E-04 ! Position
view.pos (                3 ,       $V_Top                        ) = 5.99095582962036133E-01 ! Position
view.orient (             1 ,       $V_Top                        ) = 2.51447520582814832E-08 ! Orientation
view.orient (             2 ,       $V_Top                        ) = 0.00000000000000000E+00 ! Orientation
view.orient (             3 ,       $V_Top                        ) = 0.00000000000000000E+00 ! Orientation
view.orient (             4 ,       $V_Top                        ) = 1.00000000000000000E+00 ! Orientation
view.height (                       $V_Top                        ) = 8.00000000000000044E-01 ! View height
view.fclip.auto (                   $V_Top                        ) = 1                       ! Front clipping plane auto
view.bclip.auto (                   $V_Top                        ) = 1                       ! Back clipping plane auto
view.rotcenter.type (               $V_Top                        ) = 0                       ! Rotation center type
view.rotcenter.adjust (             $V_Top                        ) = 1                       ! Adjust rotation center
view.motion.active (                $V_Top                        ) = 0                       ! Camera is moved

!**********************************************************************
! Solver Settings
!**********************************************************************
slv.kin.task (                      $SLV_SolverSettings           ) = 3                       ! KIN_INTPAR_TASK
slv.kin.tout.n (                    $SLV_SolverSettings           ) = 201                     ! KIN_INTPAR_NUM_STEPS
slv.kin.tol (                       $SLV_SolverSettings           ) = 9.99999999999999955E-07 ! Kinematics tolerance
slv.integ.fix.driftstab (           $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_INTPAR_FIXINT_CONSTAB
slv.integ.fix.jac.update (          $SLV_SolverSettings           ) = 3                       ! TIME_INTEG_PAR_FIXINT_JACOBIAN_EVAL
slv.integ.fix.part.type (           $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_INTPAR_FIXINT_JAC_PART_TYPE
slv.integ.fix.order (               $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_PAR_FIXINT_METHOD_ORDER
slv.integ.fix.posup (               $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_PAR_FIXINT_POS_COORD_UPDATE
slv.integ.sodasrt.formalism (       $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_PAR_FORMALISM
slv.integ.type (                    $SLV_SolverSettings           ) = 1                       ! Integrator type
slv.integ.jac.struc (               $SLV_SolverSettings           ) = 3                       ! SOLVER_TIME_INTEG_PAR_JACOBIAN_STRUC
slv.integ.jac.incr.type (           $SLV_SolverSettings           ) = 2                       ! Jacobian increment type
slv.integ.linalg.slv (              $SLV_SolverSettings           ) = 1                       ! 1 = dense ; 2 = sparse (UMFPACK) ; 3 = sparse (PARDISO)
slv.integ.lsode.meth (              $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_PAR_LSODE_INTEG_METHOD
slv.integ.lsode.jac.struc (         $SLV_SolverSettings           ) = 3                       ! SOLVER_TIME_INTEG_PAR_LSODE_JACOBIAN_STRUC
slv.integ.lsode.maxord (            $SLV_SolverSettings           ) = 5                       ! TIME_INTEG_INTPAR_LSODE_MAX_ORDER
slv.integ.maxrhs (                  $SLV_SolverSettings           ) = -1                      ! TIME_INTEG_INTPAR_MAX_RHS
slv.integ.maxstp (                  $SLV_SolverSettings           ) = -1                      ! TIME_INTEG_INTPAR_MAX_TIME_STEPS
slv.integ.newton.maxit (            $SLV_SolverSettings           ) = 7                       ! TIME_INTEG_INTPAR_NEWTON_ITERS
slv.integ.tout.n (                  $SLV_SolverSettings           ) = 101                     ! TIME_INTEG_INTPAR_OUTPUT_NUM_POINTS
slv.integ.sodasrt2.iestsc (         $SLV_SolverSettings           ) = 2                       ! TIME_INTEG_PAR_SODASRT20_ERROR_EST_SCALE_METHOD
slv.integ.sodasrt.maxord (          $SLV_SolverSettings           ) = 5                       ! TIME_INTEG_INTPAR_SODASRT_MAX_ORDER
slv.integ.sodasrt1.errnorm (        $SLV_SolverSettings           ) = 3                       ! TIME_INTEG_PAR_SODASRT_NORM_TYPE
slv.integ.tout.mode (               $SLV_SolverSettings           ) = 0                       ! TIME_INTEG_INTPAR_TOUT_MODE
slv.integ.meetop (                  $SLV_SolverSettings           ) = 0                       ! TIME_INTEG_BOOLPAR_EVAL_MOTION_EQ_AT_COMM_POINTS
slv.integ.driftstab (               $SLV_SolverSettings           ) = 2                       ! TIME_INTEG_BOOLPAR_ACCEPT_DRIFT
slv.integ.root (                    $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_BOOLPAR_DETECT_IMPLICIT_DISCONTINUITIES
slv.integ.jac.part (                $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_BOOLPAR_PARTITIONED_EVAL_JACOBIAN
slv.integ.addrhscall (              $SLV_SolverSettings           ) = 0                       ! TIME_INTEG_BOOLPAR_EXTRA_EVAL_AFTER_SUCCESSFUL_STEP
slv.integ.linalg.red2nd (           $SLV_SolverSettings           ) = 1                       ! Linear equations second order reduction
slv.integ.fix.oneleg (              $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_BOOLPAR_FIXINT_IMPLICIT_ONE_LEG_OLC
slv.integ.fix.conforce (            $SLV_SolverSettings           ) = 0                       ! TIME_INTEG_BOOLPAR_FIXINT_CONFORCE
slv.integ.fix.clss (                $SLV_SolverSettings           ) = 1                       ! TIME_INTEG_BOOLPAR_FIXINT_METHOD_CLASS
slv.integ.sodasrt1.scal.lam (       $SLV_SolverSettings           ) = 9.99999999999999955E-08 ! TIME_INTEG_SCALARPAR_SCALE_CONSTRAINT_FORCES
slv.integ.sodasrt1.scal.acc (       $SLV_SolverSettings           ) = 1.00000000000000000E+00 ! TIME_INTEG_SCALARPAR_SCALE_ACCELERATIONS
slv.integ.newton.eps (              $SLV_SolverSettings           ) = 3.33000000000000018E-01 ! TIME_INTEG_SCALARPAR_NEWTON_ERROR_BOUND
slv.integ.fix.utcpar (              $SLV_SolverSettings           ) = 1.00000000000000000E+00 ! TIME_INTEG_SCALARPAR_FIXINT_EULER_UTC
slv.integ.fix.olcpar (              $SLV_SolverSettings           ) = 5.00000000000000000E-01 ! TIME_INTEG_SCALARPAR_FIXINT_ONE_LEG_OLC
slv.integ.sodasrt2.estfac (         $SLV_SolverSettings           ) = 9.99999999999999955E-07 ! TIME_INTEG_SCALARPAR_SODASRT20_ERROR_EST_SCALE_FACTOR
slv.integ.tout.freq (               $SLV_SolverSettings           ) = { 200 Hz }              ! TIME_INTEG_PAR_OUTPUT_FREQ
slv.integ.tend.time (               $SLV_SolverSettings           ) = { 9 s }                 ! TIME_INTEG_TIMEPAR_END_TIME
slv.integ.atol.gen (                $SLV_SolverSettings           ) = 1.00000000000000008E-05 ! TIME_INTEG_PARSTATE_DEFAULT
slv.integ.atol.vel (                $SLV_SolverSettings           ) = 1.00000000000000005E-04 ! TIME_INTEG_PARSTATE_VEL
slv.integ.rtol.gen (                $SLV_SolverSettings           ) = 9.99999999999999955E-08 ! TIME_INTEG_PARSTATE_DEFAULT
slv.integ.rtol.vel (                $SLV_SolverSettings           ) = 1.00000000000000008E-05 ! TIME_INTEG_PARSTATE_VEL
slv.meas.geo (                      $SLV_SolverSettings           ) = 1                       ! Animation data to result file
slv.meas.sensor.pos (               $SLV_SolverSettings           ) = 1                       ! Sensor position to result file
slv.meas.sensor.vel (               $SLV_SolverSettings           ) = 1                       ! Sensor velocity to result file
slv.meas.sensor.acc (               $SLV_SolverSettings           ) = 1                       ! Sensor acceleration to result file
slv.meas.force.af (                 $SLV_SolverSettings           ) = 1                       ! applied forces to result file
slv.meas.force.ov (                 $SLV_SolverSettings           ) = 1                       ! Force output values to result file
slv.meas.force.st.dyn (             $SLV_SolverSettings           ) = 1                       ! Force dynamic states to result file
slv.meas.force.st.alg (             $SLV_SolverSettings           ) = 1                       ! Force algebraic states to result file
slv.meas.joint.st.pos (             $SLV_SolverSettings           ) = 1                       ! Joint position to result file
slv.meas.joint.st.vel (             $SLV_SolverSettings           ) = 1                       ! Joint velocity to result file
slv.meas.joint.st.acc (             $SLV_SolverSettings           ) = 1                       ! Joint acceleration to result file
slv.meas.joint.cf (                 $SLV_SolverSettings           ) = 1                       ! Joint constraining forces to result file
slv.meas.body.pos (                 $SLV_SolverSettings           ) = 1                       ! Body position to result file
slv.meas.body.vel (                 $SLV_SolverSettings           ) = 1                       ! Body velocity to result file
slv.meas.body.acc (                 $SLV_SolverSettings           ) = 1                       ! Body acceleration to result file
slv.meas.body.flx.st.pos (          $SLV_SolverSettings           ) = 1                       ! Body elastic state position to result file
slv.meas.body.flx.st.vel (          $SLV_SolverSettings           ) = 1                       ! Body elastic state velocity to result file
slv.meas.body.flx.st.acc (          $SLV_SolverSettings           ) = 1                       ! Body elastic state acceleration to result file
slv.meas.marker.st.alg (            $SLV_SolverSettings           ) = 1                       ! Marker algebraic state to result file
slv.meas.constr.cf (                $SLV_SolverSettings           ) = 1                       ! Constraint constrained state to result file
slv.meas.yout (                     $SLV_SolverSettings           ) = 1                       ! y-Outputs to result file
slv.meas.result (                   $SLV_SolverSettings           ) = 1                       ! Result elements to result file
slv.meas.subvar (                   $SLV_SolverSettings           ) = 1                       ! MEAS_BOOLPAR_SUBVAR
slv.assmbl.task (                   $SLV_SolverSettings           ) = 3                       ! ASSMBL_PAR_SOLVER_MODE
slv.output.path.type (              $SLV_SolverSettings           ) = 1                       ! OUTPUT_PATH_PAR_TYPE
slv.output.file.desc (              $SLV_SolverSettings           ) = ''                      ! Description written to the output file if supported
slv.compat.solver (                 $SLV_SolverSettings           ) = 0                       ! 0 = no (new solver); 1 = yes (classic solver)
slv.txt (                           $SLV_SolverSettings           ) = ''                      ! Comment

!**********************************************************************
! SubVars
!**********************************************************************
subvar.str (                        $_H                           ) = '$S_rocker1.$_H + $S_roda1.$_r - $S_esteira1.$_r1' ! Definition
subvar.dflt (                       $_H                           ) = ''                      ! Default value

subvar.str (                        $_L                           ) = '1.5'                   ! Definition
subvar.dflt (                       $_L                           ) = ''                      ! Default value

subvar.str (                        $_W                           ) = '1.75'                  ! Definition
subvar.dflt (                       $_W                           ) = ''                      ! Default value

subvar.str (                        $_mboogie                     ) = '2826'                  ! Definition
subvar.dflt (                       $_mboogie                     ) = ''                      ! Default value

subvar.str (                        $_m                           ) = '$_mboogie + $S_esteira1.$_m + $S_esteira2.$_m + $S_rocker1.$_m + $S_rocker2.$_m + $S_roda1.$_m + $S_roda2.$_m' ! Definition
subvar.dflt (                       $_m                           ) = ''                      ! Default value

subvar.str (                        $_vd                          ) = '2'                     ! Definition
subvar.dflt (                       $_vd                          ) = ''                      ! Default value

subvar.str (                        $_lambda                      ) = '1'                     ! Definition
subvar.dflt (                       $_lambda                      ) = ''                      ! Default value

subvar.str (                        $_beta                        ) = '0.3'                   ! Definition
subvar.dflt (                       $_beta                        ) = ''                      ! Default value

subvar.str (                        $_deltaW                      ) = '0.47'                  ! Definition
subvar.dflt (                       $_deltaW                      ) = ''                      ! Default value

subvar.str (                        $_DistLinhas                  ) = '0.5'                   ! Definition
subvar.dflt (                       $_DistLinhas                  ) = ''                      ! Default value

subvar.str (                        $_DistXBogiePar               ) = '0.73'                  ! Definition
subvar.dflt (                       $_DistXBogiePar               ) = ''                      ! Default value

subvar.str (                        $_DistZBogiePar               ) = '0.45 + 0.072303391 +0.07 -0.004 -0.4 -0.1 -0.06' ! Definition
subvar.dflt (                       $_DistZBogiePar               ) = ''                      ! Default value

subvar.str (                        $_DistPar                     ) = '0.3'                   ! Definition
subvar.dflt (                       $_DistPar                     ) = ''                      ! Default value

subvar.str (                        $_EstrutZ                     ) = '-0.19'                 ! Definition
subvar.dflt (                       $_EstrutZ                     ) = ''                      ! Default value

subvar.str (                        $_fix_botinhaZ                ) = '-0.24 + 0.03 + $_EstrutZ' ! Definition
subvar.dflt (                       $_fix_botinhaZ                ) = ''                      ! Default value

subvar.str (                        $_fix_botinhaX                ) = '1.03'                  ! Definition
subvar.dflt (                       $_fix_botinhaX                ) = ''                      ! Default value

!**********************************************************************
! Reference systems
!**********************************************************************
refsys.type (                       $R_Isys                       ) = 1                       ! Type
refsys.attr.2d.pos.x (              $R_Isys                       ) = -9.00000000000000000E+01
refsys.attr.2d.pos.y (              $R_Isys                       ) = -1.00000000000000000E+01
refsys.attr.2d.width (              $R_Isys                       ) = 2.40000000000000000E+02
refsys.attr.2d.height (             $R_Isys                       ) = 2.20000000000000000E+02

marker.type (                       $M_Isys                       ) = 1                       ! Type
marker.parent (                     $M_Isys                       ) = $R_Isys                 ! Reference system

marker.type (                       $M_Isys_1                     ) = 2                       ! Type
marker.parent (                     $M_Isys_1                     ) = $R_Isys                 ! Reference system
marker.pos (              2 ,       $M_Isys_1                     ) = -1.00000000000000000E+00 ! Position

marker.type (                       $M_Isys_2                     ) = 2                       ! Type
marker.parent (                     $M_Isys_2                     ) = $R_Isys                 ! Reference system
marker.pos (              2 ,       $M_Isys_2                     ) = 1.00000000000000000E+00 ! Position

prim.type (                         $P_Isys                       ) = 30                      ! Type
prim.ref (                          $P_Isys                       ) = $M_Isys                 ! Reference Marker
prim.color.r (            1 ,       $P_Isys                       ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Isys                       ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Isys                       ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Isys                       ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.par (                3 ,       $P_Isys                       ) = 1.00000000000000006E-01 ! [m] Length


!**********************************************************************
! Bodies
!**********************************************************************
body.m (                            $B_chao                       ) = 1.00000000000000000E+00 ! Mass of the Body
body.mp (                           $B_chao                       ) = 0                       ! 0=manual; 1=auto (based on geometry); 2=mass manual, CG & Inertia auto
body.I.tens (             1 ,   1 , $B_chao                       ) = 1.00000000000000000E+00 ! Moments of inertia
body.I.tens (             2 ,   2 , $B_chao                       ) = 1.00000000000000000E+00 ! Moments of inertia
body.I.tens (             3 ,   3 , $B_chao                       ) = 1.00000000000000000E+00 ! Moments of inertia
body.I.kind (                       $B_chao                       ) = -1                      ! Kind of I-tensor specification: -1=wrt CG; 0=wrt BRF; 1=wrt Marker
body.attr.2d.pos.x (                $B_chao                       ) = -3.00000000000000000E+01
body.attr.2d.pos.y (                $B_chao                       ) = 3.00000000000000000E+01
body.attr.2d.width (                $B_chao                       ) = 1.10000000000000000E+02
body.attr.2d.height (               $B_chao                       ) = 8.00000000000000000E+01

marker.type (                       $M_chao_BRF                   ) = 1                       ! Type
marker.parent (                     $M_chao_BRF                   ) = $B_chao                 ! Body
marker.flx.type (                   $M_chao_BRF                   ) = 4                       ! Flexible type

joint.from (                        $J_chao                       ) = $M_Isys                 ! From Marker
joint.to (                          $J_chao                       ) = $M_chao_BRF             ! To Marker
joint.type (                        $J_chao                       ) = 1                       ! Type
joint.st.pos (            1 ,       $J_chao                       ) = 0.00000000000000000E+00 ! Position
joint.st.vel (            1 ,       $J_chao                       ) = 0.00000000000000000E+00 ! Velocity
joint.attr.2d.pos.x (     1 ,       $J_chao                       ) = 20
joint.attr.2d.pos.y (     1 ,       $J_chao                       ) = 170
joint.attr.2d.ori (       1 ,       $J_chao                       ) = 270
joint.attr.2d.paths.from.x (   1 ,   1 ,   1 ,   1 , $J_chao      ) = 20, 20
joint.attr.2d.paths.from.y (   1 ,   1 ,   1 ,   1 , $J_chao      ) = 210, 187
joint.attr.2d.paths.to.x (   1 ,   1 ,   1 ,   1 , $J_chao        ) = 20, 20
joint.attr.2d.paths.to.y (   1 ,   1 ,   1 ,   1 , $J_chao        ) = 110, 153

prim.type (                         $P_chao                       ) = 5                       ! Type
prim.ref (                          $P_chao                       ) = $M_chao_BRF             ! Reference Marker
prim.ang (                1 ,       $P_chao                       ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_chao                       ) = 0.00000000000000000E+00 ! Angles
prim.ang (                3 ,       $P_chao                       ) = 0.00000000000000000E+00 ! Angles
prim.vtx (                1 ,   1 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,   2 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,   3 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,   4 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,   5 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,   6 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,   7 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,   8 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,   9 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  10 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  11 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  12 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  13 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,  14 , $P_chao                       ) = 1.10000000000000000E+01 ! Vertices
prim.vtx (                1 ,  15 , $P_chao                       ) = 1.20000000000000000E+01 ! Vertices
prim.vtx (                1 ,  16 , $P_chao                       ) = 1.30000000000000000E+01 ! Vertices
prim.vtx (                1 ,  17 , $P_chao                       ) = 1.40000000000000000E+01 ! Vertices
prim.vtx (                1 ,  18 , $P_chao                       ) = 1.50000000000000000E+01 ! Vertices
prim.vtx (                1 ,  19 , $P_chao                       ) = 1.60000000000000000E+01 ! Vertices
prim.vtx (                1 ,  20 , $P_chao                       ) = 1.70000000000000000E+01 ! Vertices
prim.vtx (                1 ,  21 , $P_chao                       ) = 1.80000000000000000E+01 ! Vertices
prim.vtx (                1 ,  22 , $P_chao                       ) = 1.90000000000000000E+01 ! Vertices
prim.vtx (                1 ,  23 , $P_chao                       ) = 2.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,  24 , $P_chao                       ) = 2.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,  25 , $P_chao                       ) = 1.90000000000000000E+01 ! Vertices
prim.vtx (                1 ,  26 , $P_chao                       ) = 1.80000000000000000E+01 ! Vertices
prim.vtx (                1 ,  27 , $P_chao                       ) = 1.70000000000000000E+01 ! Vertices
prim.vtx (                1 ,  28 , $P_chao                       ) = 1.60000000000000000E+01 ! Vertices
prim.vtx (                1 ,  29 , $P_chao                       ) = 1.50000000000000000E+01 ! Vertices
prim.vtx (                1 ,  30 , $P_chao                       ) = 1.40000000000000000E+01 ! Vertices
prim.vtx (                1 ,  31 , $P_chao                       ) = 1.30000000000000000E+01 ! Vertices
prim.vtx (                1 ,  32 , $P_chao                       ) = 1.20000000000000000E+01 ! Vertices
prim.vtx (                1 ,  33 , $P_chao                       ) = 1.10000000000000000E+01 ! Vertices
prim.vtx (                1 ,  34 , $P_chao                       ) = 1.00000000000000000E+01 ! Vertices
prim.vtx (                1 ,  35 , $P_chao                       ) = 9.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  36 , $P_chao                       ) = 8.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  37 , $P_chao                       ) = 7.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  38 , $P_chao                       ) = 6.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  39 , $P_chao                       ) = 5.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  40 , $P_chao                       ) = 4.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  41 , $P_chao                       ) = 3.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  42 , $P_chao                       ) = 2.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  43 , $P_chao                       ) = 1.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  44 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  45 , $P_chao                       ) = -1.00000000000000000E+00 ! Vertices
prim.vtx (                1 ,  46 , $P_chao                       ) = -2.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,   1 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,   2 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,   3 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,   4 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,   5 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,   6 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,   7 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,   8 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,   9 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  10 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  11 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  12 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  13 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  14 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  15 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  16 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  17 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  18 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  19 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  20 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  21 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  22 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  23 , $P_chao                       ) = 0.00000000000000000E+00 ! Vertices
prim.vtx (                2 ,  24 , $P_chao                       ) = -5.00000000000000000E-01 ! Vertices
prim.vtx (                2 ,  25 , $P_chao                       ) = -5.00000000000000000E-01 ! Vertices
prim.vtx (                2 ,  26 , $P_chao                       ) = -5.00000000000000000E-01 ! Vertices
prim.vtx (                2 ,  27 , $P_chao                       ) = -5.00000000000000000E-01 ! Vertices
prim.vtx (                2 ,  28 , $P_chao                       ) = -5.00000000000000000E-01 ! Vertices
prim.vtx (                2 ,  29 , $P_chao                       ) = -5.00000000000000000E-01 ! Vertices
prim.vtx (                2 ,  30 , $P_chao                       ) = -5.00000000000000000E-01 ! Vertices
prim.vtx (                2 ,  31 , $P_chao                       ) = -5.00000000000000000E-01 ! Vertices
prim.vtx (                2 ,  32 , $P_chao                       ) = -5.00000000000000000E-01 ! Vertices
prim.vtx (                2 ,  33 , $P_chao                       ) = -5.00000000000000000E-01 ! Vertices
prim.vtx (                2 ,  34 , $P_chao                       ) = -5.00000000000000000E-01 ! Vertices
prim.vtx (                2 ,  35 , $P_chao                       ) = -5.00000000000000000E-01 ! Vertices
prim.vtx (                2 ,  36 , $P_chao                       ) = -5.00000000000000000E-01 ! Vertices
prim.vtx (                2 ,  37 , $P_chao                       ) = -5.00000000000000000E-01 ! Vertices
prim.vtx (                2 ,  38 , $P_chao                       ) = -5.00000000000000000E-01 ! Vertices
prim.vtx (                2 ,  39 , $P_chao                       ) = -5.00000000000000000E-01 ! Vertices
prim.vtx (                2 ,  40 , $P_chao                       ) = -5.00000000000000000E-01 ! Vertices
prim.vtx (                2 ,  41 , $P_chao                       ) = -5.00000000000000000E-01 ! Vertices
prim.vtx (                2 ,  42 , $P_chao                       ) = -5.00000000000000000E-01 ! Vertices
prim.vtx (                2 ,  43 , $P_chao                       ) = -5.00000000000000000E-01 ! Vertices
prim.vtx (                2 ,  44 , $P_chao                       ) = -5.00000000000000000E-01 ! Vertices
prim.vtx (                2 ,  45 , $P_chao                       ) = -5.00000000000000000E-01 ! Vertices
prim.vtx (                2 ,  46 , $P_chao                       ) = -5.00000000000000000E-01 ! Vertices
prim.color.r (            1 ,       $P_chao                       ) = 1.65000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_chao                       ) = 1.15000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_chao                       ) = 5.70000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_chao                       ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_chao                       ) = 2.50000000000000000E-01 ! Transparency
prim.mp.dens.solid (                $P_chao                       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_chao                       ) = 0.00000000000000000E+00 ! [-] Contour by
prim.par (                4 ,       $P_chao                       ) = 1.00000000000000000E+00 ! [-] Contour
prim.par (                6 ,       $P_chao                       ) = 1.00000000000000000E+00 ! [-] Curve fitting type
prim.par (                7 ,       $P_chao                       ) = 3.00000000000000000E+00 ! [-] Spline Degree
prim.par (                9 ,       $P_chao                       ) = 0.00000000000000000E+00 ! [-] Material side
prim.par (               10 ,       $P_chao                       ) = 2.00000000000000000E+01 ! [m] Depth
prim.par (               11 ,       $P_chao                       ) = 0.00000000000000000E+00 ! [m] Wall thickness
prim.par (               12 ,       $P_chao                       ) = 1.00000000000000000E+00 ! [-] Show bottom cap
prim.par (               13 ,       $P_chao                       ) = 1.00000000000000000E+00 ! [-] Show top cap
prim.par (               14 ,       $P_chao                       ) = 0.00000000000000000E+00 ! [m] Graphics discretization sag
prim.par (               15 ,       $P_chao                       ) = 0.00000000000000000E+00 ! [rad] Graphics discretization angle
prim.par (               17 ,       $P_chao                       ) = 0.00000000000000000E+00 ! [-] Graphics start
prim.par (               18 ,       $P_chao                       ) = 0.00000000000000000E+00 ! [-] Graphics end


body.m (                            $B_Boogie                     ) = 1.00000000000000000E+00 ! Mass of the Body
body.mp (                           $B_Boogie                     ) = 1                       ! 0=manual; 1=auto (based on geometry); 2=mass manual, CG & Inertia auto
body.I.tens (             1 ,   1 , $B_Boogie                     ) = 1.00000000000000000E+00 ! Moments of inertia
body.I.tens (             2 ,   2 , $B_Boogie                     ) = 1.00000000000000000E+00 ! Moments of inertia
body.I.tens (             3 ,   3 , $B_Boogie                     ) = 1.00000000000000000E+00 ! Moments of inertia
body.I.kind (                       $B_Boogie                     ) = -1                      ! Kind of I-tensor specification: -1=wrt CG; 0=wrt BRF; 1=wrt Marker
body.flx.dmp.all (                  $B_Boogie                     ) = 0.00000000000000000E+00 ! Damping input value

marker.type (                       $M_Boogie_BRF                 ) = 1                       ! Type
marker.parent (                     $M_Boogie_BRF                 ) = $B_Boogie               ! Body
marker.flx.type (                   $M_Boogie_BRF                 ) = 4                       ! Flexible type

marker.type (                       $M_Boogie_esteira1            ) = 2                       ! Type
marker.ref (                        $M_Boogie_esteira1            ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_esteira1            ) = $B_Boogie               ! Body
marker.pos (              2 ,       $M_Boogie_esteira1            ) = { -$_W/2  - $S_esteira1.$_TW/2 } ! Position
marker.pos (              3 ,       $M_Boogie_esteira1            ) = { -$_H/2 }              ! Position

marker.type (                       $M_Boogie_esteira2            ) = 2                       ! Type
marker.ref (                        $M_Boogie_esteira2            ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_esteira2            ) = $B_Boogie               ! Body
marker.pos (              2 ,       $M_Boogie_esteira2            ) = { $_W/2 + $S_esteira2.$_TW/2 } ! Position
marker.pos (              3 ,       $M_Boogie_esteira2            ) = { -$_H/2 }              ! Position

marker.type (                       $M_Boogie_rocker1             ) = 2                       ! Type
marker.parent (                     $M_Boogie_rocker1             ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_rocker1             ) = -1.00000000000000006E-01 ! Position
marker.pos (              2 ,       $M_Boogie_rocker1             ) = { -$_W/2 -$_deltaW + $S_rocker1.$_W/2 } ! Position
marker.pos (              3 ,       $M_Boogie_rocker1             ) = { $_H/2 }               ! Position

marker.type (                       $M_Boogie_rocker2             ) = 2                       ! Type
marker.parent (                     $M_Boogie_rocker2             ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_rocker2             ) = -1.00000000000000006E-01 ! Position
marker.pos (              2 ,       $M_Boogie_rocker2             ) = { $_W/2 +$_deltaW - $S_rocker1.$_W/2 } ! Position
marker.pos (              3 ,       $M_Boogie_rocker2             ) = { $_H/2 }               ! Position

marker.type (                       $M_Boogie_ParalelogramoCima1  ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoCima1  ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoCima1  ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoCima1  ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoCima1  ) = { -$_DistLinhas/2 }     ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoCima1  ) = { $_DistZBogiePar + $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoCima2  ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoCima2  ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoCima2  ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoCima2  ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoCima2  ) = { $_DistLinhas/2 }      ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoCima2  ) = { $_DistZBogiePar + $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoCima3  ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoCima3  ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoCima3  ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoCima3  ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoCima3  ) = { -3*$_DistLinhas/2 }   ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoCima3  ) = { $_DistZBogiePar + $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoCima4  ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoCima4  ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoCima4  ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoCima4  ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoCima4  ) = { 3*$_DistLinhas/2 }    ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoCima4  ) = { $_DistZBogiePar + $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoCima5  ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoCima5  ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoCima5  ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoCima5  ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoCima5  ) = { -5*$_DistLinhas/2 }   ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoCima5  ) = { $_DistZBogiePar + $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoCima6  ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoCima6  ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoCima6  ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoCima6  ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoCima6  ) = { 5*$_DistLinhas/2 }    ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoCima6  ) = { $_DistZBogiePar + $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoBaixo1 ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoBaixo1 ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoBaixo1 ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoBaixo1 ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoBaixo1 ) = { -$_DistLinhas/2 }     ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoBaixo1 ) = { $_DistZBogiePar - $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoBaixo2 ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoBaixo2 ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoBaixo2 ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoBaixo2 ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoBaixo2 ) = { $_DistLinhas/2 }      ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoBaixo2 ) = { $_DistZBogiePar - $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoBaixo3 ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoBaixo3 ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoBaixo3 ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoBaixo3 ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoBaixo3 ) = { -3*$_DistLinhas/2 }   ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoBaixo3 ) = { $_DistZBogiePar - $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoBaixo4 ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoBaixo4 ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoBaixo4 ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoBaixo4 ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoBaixo4 ) = { 3*$_DistLinhas/2 }    ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoBaixo4 ) = { $_DistZBogiePar - $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoBaixo5 ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoBaixo5 ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoBaixo5 ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoBaixo5 ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoBaixo5 ) = { -5*$_DistLinhas/2 }   ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoBaixo5 ) = { $_DistZBogiePar - $_DistPar/2 } ! Position

marker.type (                       $M_Boogie_ParalelogramoBaixo6 ) = 2                       ! Type
marker.ref (                        $M_Boogie_ParalelogramoBaixo6 ) = $M_Boogie_BRF           ! Reference Marker
marker.parent (                     $M_Boogie_ParalelogramoBaixo6 ) = $B_Boogie               ! Body
marker.pos (              1 ,       $M_Boogie_ParalelogramoBaixo6 ) = { -$_DistXBogiePar }    ! Position
marker.pos (              2 ,       $M_Boogie_ParalelogramoBaixo6 ) = { 5*$_DistLinhas/2 }    ! Position
marker.pos (              3 ,       $M_Boogie_ParalelogramoBaixo6 ) = { $_DistZBogiePar - $_DistPar/2 } ! Position

joint.from (                        $J_Boogie                     ) = $M_Isys                 ! From Marker
joint.to (                          $J_Boogie                     ) = $M_Boogie_BRF           ! To Marker
joint.type (                        $J_Boogie                     ) = 25                      ! Type
joint.st.pos (            1 ,       $J_Boogie                     ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            2 ,       $J_Boogie                     ) = 0.00000000000000000E+00 ! Position
joint.st.pos (            3 ,       $J_Boogie                     ) = 2.00000000000000000E+00 ! Position
joint.st.pos (            4 ,       $J_Boogie                     ) = 1.00000000000000000E+00 ! Position
joint.st.vel (            1 ,       $J_Boogie                     ) = 0.00000000000000000E+00 ! Velocity
joint.st.vel (            2 ,       $J_Boogie                     ) = 0.00000000000000000E+00 ! Velocity
joint.st.vel (            3 ,       $J_Boogie                     ) = 7.12445416791284009E-56 ! Velocity
joint.st.vel (            4 ,       $J_Boogie                     ) = 0.00000000000000000E+00 ! Velocity
joint.st.dep (            1 ,       $J_Boogie                     ) = 0                       ! Dependency state
joint.st.dep (            2 ,       $J_Boogie                     ) = 0                       ! Dependency state
joint.st.dep (            3 ,       $J_Boogie                     ) = 0                       ! Dependency state
joint.st.dep (            4 ,       $J_Boogie                     ) = 0                       ! Dependency state
joint.txt (                         $J_Boogie                     ) = '$_H/2 + $S_esteira1.$_r1' ! Comment
joint.par (               1 ,       $J_Boogie                     ) = 1.00000000000000000E+00 ! [-] Axis of rotation    1
joint.par (               2 ,       $J_Boogie                     ) = 2.00000000000000000E+00 ! [-] Axis of rotation    2
joint.par (               3 ,       $J_Boogie                     ) = 0.00000000000000000E+00 ! [-] Axis of rotation    3
joint.par (               4 ,       $J_Boogie                     ) = 1.00000000000000000E+00 ! [-] Axis of translation 1
joint.par (               5 ,       $J_Boogie                     ) = 3.00000000000000000E+00 ! [-] Axis of translation 2
joint.par (               6 ,       $J_Boogie                     ) = 0.00000000000000000E+00 ! [-] Axis of translation 3
joint.par (               8 ,       $J_Boogie                     ) = 0.00000000000000000E+00 ! [-] Trans-rot sequence

prim.type (                         $P_Boogie                     ) = 1                       ! Type
prim.ref (                          $P_Boogie                     ) = $M_Boogie_BRF           ! Reference Marker
prim.color.r (            1 ,       $P_Boogie                     ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie                     ) = 2.55000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie                     ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie                     ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.transparency (                 $P_Boogie                     ) = 1.00000000000000000E+00 ! Transparency
prim.mp.dens.solid (                $P_Boogie                     ) = 0.00000000000000000E+00 ! Density
prim.par (                2 ,       $P_Boogie                     ) = $_L                     ! [m] Length in X
prim.par (                3 ,       $P_Boogie                     ) = $_W                     ! [m] Length in Y
prim.par (                4 ,       $P_Boogie                     ) = $_H                     ! [m] Length in Z

prim.type (                         $P_Boogie_esteira1D           ) = 39                      ! Type
prim.ref (                          $P_Boogie_esteira1D           ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                2 ,       $P_Boogie_esteira1D           ) = { -$_W/2 - 0.285 +0.07 } ! Position
prim.pos (                3 ,       $P_Boogie_esteira1D           ) = { 0.26 - 0.11 -0.07 + 0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_esteira1D           ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            1 ,       $P_Boogie_esteira1D           ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_esteira1D           ) = 2.55000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_esteira1D           ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_esteira1D           ) = './pecas_stl/chassi_imp.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_esteira1D           ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_esteira1D           ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_esteira1D           ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_esteira2D           ) = 39                      ! Type
prim.ref (                          $P_Boogie_esteira2D           ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                2 ,       $P_Boogie_esteira2D           ) = { $_W/2 +0.285 - 0.07 } ! Position
prim.pos (                3 ,       $P_Boogie_esteira2D           ) = { 0.26 - 0.11 -0.07 +0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_esteira2D           ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            1 ,       $P_Boogie_esteira2D           ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_esteira2D           ) = 2.55000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_esteira2D           ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_esteira2D           ) = './pecas_stl/chassi_imp.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_esteira2D           ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_esteira2D           ) = 1.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_esteira2D           ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_esteira2D           ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_esteira1E           ) = 39                      ! Type
prim.ref (                          $P_Boogie_esteira1E           ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                2 ,       $P_Boogie_esteira1E           ) = { -$_W/2 -0.285 + 0.32 - 0.07 } ! Position
prim.pos (                3 ,       $P_Boogie_esteira1E           ) = { 0.26 - 0.11 -0.07 +0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_esteira1E           ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            1 ,       $P_Boogie_esteira1E           ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_esteira1E           ) = 2.55000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_esteira1E           ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_esteira1E           ) = './pecas_stl/chassi_imp.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_esteira1E           ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_esteira1E           ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_esteira1E           ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_esteira2E           ) = 39                      ! Type
prim.ref (                          $P_Boogie_esteira2E           ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                2 ,       $P_Boogie_esteira2E           ) = { $_W/2 + 0.285 - 0.32 + 0.07 } ! Position
prim.pos (                3 ,       $P_Boogie_esteira2E           ) = { 0.26 - 0.11 -0.07 + 0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_esteira2E           ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! Angles
prim.color.r (            1 ,       $P_Boogie_esteira2E           ) = 2.55000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_esteira2E           ) = 2.55000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_esteira2E           ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_esteira2E           ) = './pecas_stl/chassi_imp.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_esteira2E           ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_esteira2E           ) = 1.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_esteira2E           ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_esteira2E           ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_Viga1               ) = 39                      ! Type
prim.ref (                          $P_Boogie_Viga1               ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_Viga1               ) = -5.25000000000000022E-01 ! Position
prim.pos (                2 ,       $P_Boogie_Viga1               ) = 1.14999999999999991E+00 ! Position
prim.pos (                3 ,       $P_Boogie_Viga1               ) = { 0.69 -0.11 -0.06 +0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_Viga1               ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_Viga1               ) = 3.00000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_Viga1               ) = 1.44000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_Viga1               ) = 2.55000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_Viga1               ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_Viga1               ) = './pecas_stl/Viga_Berco.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_Viga1               ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_Viga1               ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_Viga1               ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_Viga2               ) = 39                      ! Type
prim.ref (                          $P_Boogie_Viga2               ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_Viga2               ) = 5.25000000000000022E-01 ! Position
prim.pos (                2 ,       $P_Boogie_Viga2               ) = 1.14999999999999991E+00 ! Position
prim.pos (                3 ,       $P_Boogie_Viga2               ) = { 0.69 -0.11 -0.06 +0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_Viga2               ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_Viga2               ) = 3.00000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_Viga2               ) = 1.44000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_Viga2               ) = 2.55000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_Viga2               ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_Viga2               ) = './pecas_stl/Viga_Berco.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_Viga2               ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_Viga2               ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_Viga2               ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_Estrutura           ) = 39                      ! Type
prim.ref (                          $P_Boogie_Estrutura           ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_Estrutura           ) = -5.99999999999999978E-01 ! Position
prim.pos (                2 ,       $P_Boogie_Estrutura           ) = -1.60000000000000009E+00 ! Position
prim.pos (                3 ,       $P_Boogie_Estrutura           ) = $_EstrutZ               ! Position
prim.ang (                1 ,       $P_Boogie_Estrutura           ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_Estrutura           ) = { 180 deg }             ! Angles
prim.ang (                3 ,       $P_Boogie_Estrutura           ) = { 45 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_Estrutura           ) = 9.90000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_Estrutura           ) = 1.84000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_Estrutura           ) = 2.55000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_Estrutura           ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_Estrutura           ) = './pecas_stl/estrutura_implementos.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_Estrutura           ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_Estrutura           ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_Estrutura           ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_fix_botinha1        ) = 39                      ! Type
prim.ref (                          $P_Boogie_fix_botinha1        ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_fix_botinha1        ) = $_fix_botinhaX          ! Position
prim.pos (                2 ,       $P_Boogie_fix_botinha1        ) = { -$_DistLinhas/2 -0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_fix_botinha1        ) = $_fix_botinhaZ          ! Position
prim.ang (                1 ,       $P_Boogie_fix_botinha1        ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_fix_botinha1        ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_fix_botinha1        ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_fix_botinha1        ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_fix_botinha1        ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_fix_botinha1        ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_fix_botinha1        ) = './pecas_stl/botinha1_stl/fixacao.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_fix_botinha1        ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_fix_botinha1        ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_fix_botinha1        ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_fix_botinha2        ) = 39                      ! Type
prim.ref (                          $P_Boogie_fix_botinha2        ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_fix_botinha2        ) = $_fix_botinhaX          ! Position
prim.pos (                2 ,       $P_Boogie_fix_botinha2        ) = { $_DistLinhas/2 -0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_fix_botinha2        ) = $_fix_botinhaZ          ! Position
prim.ang (                1 ,       $P_Boogie_fix_botinha2        ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_fix_botinha2        ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_fix_botinha2        ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_fix_botinha2        ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_fix_botinha2        ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_fix_botinha2        ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_fix_botinha2        ) = './pecas_stl/botinha1_stl/fixacao.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_fix_botinha2        ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_fix_botinha2        ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_fix_botinha2        ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_fix_botinha3        ) = 39                      ! Type
prim.ref (                          $P_Boogie_fix_botinha3        ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_fix_botinha3        ) = $_fix_botinhaX          ! Position
prim.pos (                2 ,       $P_Boogie_fix_botinha3        ) = { -3*$_DistLinhas/2 -0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_fix_botinha3        ) = $_fix_botinhaZ          ! Position
prim.ang (                1 ,       $P_Boogie_fix_botinha3        ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_fix_botinha3        ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_fix_botinha3        ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_fix_botinha3        ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_fix_botinha3        ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_fix_botinha3        ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_fix_botinha3        ) = './pecas_stl/botinha1_stl/fixacao.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_fix_botinha3        ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_fix_botinha3        ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_fix_botinha3        ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_fix_botinha4        ) = 39                      ! Type
prim.ref (                          $P_Boogie_fix_botinha4        ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_fix_botinha4        ) = $_fix_botinhaX          ! Position
prim.pos (                2 ,       $P_Boogie_fix_botinha4        ) = { 3*$_DistLinhas/2 -0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_fix_botinha4        ) = $_fix_botinhaZ          ! Position
prim.ang (                1 ,       $P_Boogie_fix_botinha4        ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_fix_botinha4        ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_fix_botinha4        ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_fix_botinha4        ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_fix_botinha4        ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_fix_botinha4        ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_fix_botinha4        ) = './pecas_stl/botinha1_stl/fixacao.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_fix_botinha4        ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_fix_botinha4        ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_fix_botinha4        ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_fix_botinha5        ) = 39                      ! Type
prim.ref (                          $P_Boogie_fix_botinha5        ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_fix_botinha5        ) = $_fix_botinhaX          ! Position
prim.pos (                2 ,       $P_Boogie_fix_botinha5        ) = { -5*$_DistLinhas/2 -0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_fix_botinha5        ) = $_fix_botinhaZ          ! Position
prim.ang (                1 ,       $P_Boogie_fix_botinha5        ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_fix_botinha5        ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_fix_botinha5        ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_fix_botinha5        ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_fix_botinha5        ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_fix_botinha5        ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_fix_botinha5        ) = './pecas_stl/botinha1_stl/fixacao.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_fix_botinha5        ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_fix_botinha5        ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_fix_botinha5        ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_fix_botinha6        ) = 39                      ! Type
prim.ref (                          $P_Boogie_fix_botinha6        ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_fix_botinha6        ) = $_fix_botinhaX          ! Position
prim.pos (                2 ,       $P_Boogie_fix_botinha6        ) = { 5*$_DistLinhas/2 -0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_fix_botinha6        ) = $_fix_botinhaZ          ! Position
prim.ang (                1 ,       $P_Boogie_fix_botinha6        ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_fix_botinha6        ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_fix_botinha6        ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_fix_botinha6        ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_fix_botinha6        ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_fix_botinha6        ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_fix_botinha6        ) = './pecas_stl/botinha1_stl/fixacao.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_fix_botinha6        ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_fix_botinha6        ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_fix_botinha6        ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_botinha1            ) = 39                      ! Type
prim.ref (                          $P_Boogie_botinha1            ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_botinha1            ) = { $_fix_botinhaX +0.035 } ! Position
prim.pos (                2 ,       $P_Boogie_botinha1            ) = { -$_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_botinha1            ) = { $_fix_botinhaZ +0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_botinha1            ) = { 90 deg }              ! Angles
prim.ang (                3 ,       $P_Boogie_botinha1            ) = { 180 deg }             ! Angles
prim.color.r (            1 ,       $P_Boogie_botinha1            ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_botinha1            ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_botinha1            ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_botinha1            ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_botinha1            ) = './pecas_stl/botinha1_stl/botinha.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_botinha1            ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_botinha1            ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_botinha2            ) = 39                      ! Type
prim.ref (                          $P_Boogie_botinha2            ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_botinha2            ) = { $_fix_botinhaX +0.035 } ! Position
prim.pos (                2 ,       $P_Boogie_botinha2            ) = { $_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_botinha2            ) = { $_fix_botinhaZ +0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_botinha2            ) = { 90 deg }              ! Angles
prim.ang (                3 ,       $P_Boogie_botinha2            ) = { 180 deg }             ! Angles
prim.color.r (            1 ,       $P_Boogie_botinha2            ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_botinha2            ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_botinha2            ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_botinha2            ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_botinha2            ) = './pecas_stl/botinha1_stl/botinha.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_botinha2            ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_botinha2            ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_botinha3            ) = 39                      ! Type
prim.ref (                          $P_Boogie_botinha3            ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_botinha3            ) = { $_fix_botinhaX +0.035 } ! Position
prim.pos (                2 ,       $P_Boogie_botinha3            ) = { -3*$_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_botinha3            ) = { $_fix_botinhaZ +0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_botinha3            ) = { 90 deg }              ! Angles
prim.ang (                3 ,       $P_Boogie_botinha3            ) = { 180 deg }             ! Angles
prim.color.r (            1 ,       $P_Boogie_botinha3            ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_botinha3            ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_botinha3            ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_botinha3            ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_botinha3            ) = './pecas_stl/botinha1_stl/botinha.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_botinha3            ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_botinha3            ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_botinha4            ) = 39                      ! Type
prim.ref (                          $P_Boogie_botinha4            ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_botinha4            ) = { $_fix_botinhaX +0.035 } ! Position
prim.pos (                2 ,       $P_Boogie_botinha4            ) = { 3*$_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_botinha4            ) = { $_fix_botinhaZ +0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_botinha4            ) = { 90 deg }              ! Angles
prim.ang (                3 ,       $P_Boogie_botinha4            ) = { 180 deg }             ! Angles
prim.color.r (            1 ,       $P_Boogie_botinha4            ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_botinha4            ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_botinha4            ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_botinha4            ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_botinha4            ) = './pecas_stl/botinha1_stl/botinha.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_botinha4            ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_botinha4            ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_botinha5            ) = 39                      ! Type
prim.ref (                          $P_Boogie_botinha5            ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_botinha5            ) = { $_fix_botinhaX +0.035 } ! Position
prim.pos (                2 ,       $P_Boogie_botinha5            ) = { -5*$_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_botinha5            ) = { $_fix_botinhaZ +0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_botinha5            ) = { 90 deg }              ! Angles
prim.ang (                3 ,       $P_Boogie_botinha5            ) = { 180 deg }             ! Angles
prim.color.r (            1 ,       $P_Boogie_botinha5            ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_botinha5            ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_botinha5            ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_botinha5            ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_botinha5            ) = './pecas_stl/botinha1_stl/botinha.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_botinha5            ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_botinha5            ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_botinha6            ) = 39                      ! Type
prim.ref (                          $P_Boogie_botinha6            ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_botinha6            ) = { $_fix_botinhaX +0.035 } ! Position
prim.pos (                2 ,       $P_Boogie_botinha6            ) = { 5*$_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_botinha6            ) = { $_fix_botinhaZ +0.04 } ! Position
prim.ang (                1 ,       $P_Boogie_botinha6            ) = { 90 deg }              ! Angles
prim.ang (                3 ,       $P_Boogie_botinha6            ) = { 180 deg }             ! Angles
prim.color.r (            1 ,       $P_Boogie_botinha6            ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_botinha6            ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_botinha6            ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_botinha6            ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_botinha6            ) = './pecas_stl/botinha1_stl/botinha.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_botinha6            ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_botinha6            ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_mola_disco5         ) = 39                      ! Type
prim.ref (                          $P_Boogie_mola_disco5         ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_mola_disco5         ) = { $_fix_botinhaX + 0.12 } ! Position
prim.pos (                2 ,       $P_Boogie_mola_disco5         ) = { -5*$_DistLinhas/2 -0.05 } ! Position
prim.pos (                3 ,       $P_Boogie_mola_disco5         ) = { $_fix_botinhaZ - 0.05 } ! Position
prim.ang (                1 ,       $P_Boogie_mola_disco5         ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_mola_disco5         ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_mola_disco5         ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_mola_disco5         ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_mola_disco5         ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_mola_disco5         ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_mola_disco5         ) = './pecas_stl/disco_de_corte_stl/mola.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_mola_disco5         ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_mola_disco5         ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_mola_disco5         ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_mola_disco3         ) = 39                      ! Type
prim.ref (                          $P_Boogie_mola_disco3         ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_mola_disco3         ) = { $_fix_botinhaX + 0.12 } ! Position
prim.pos (                2 ,       $P_Boogie_mola_disco3         ) = { -3*$_DistLinhas/2 -0.05 } ! Position
prim.pos (                3 ,       $P_Boogie_mola_disco3         ) = { $_fix_botinhaZ - 0.05 } ! Position
prim.ang (                1 ,       $P_Boogie_mola_disco3         ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_mola_disco3         ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_mola_disco3         ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_mola_disco3         ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_mola_disco3         ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_mola_disco3         ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_mola_disco3         ) = './pecas_stl/disco_de_corte_stl/mola.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_mola_disco3         ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_mola_disco3         ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_mola_disco3         ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_mola_disco1         ) = 39                      ! Type
prim.ref (                          $P_Boogie_mola_disco1         ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_mola_disco1         ) = { $_fix_botinhaX + 0.12 } ! Position
prim.pos (                2 ,       $P_Boogie_mola_disco1         ) = { -$_DistLinhas/2 -0.05 } ! Position
prim.pos (                3 ,       $P_Boogie_mola_disco1         ) = { $_fix_botinhaZ - 0.05 } ! Position
prim.ang (                1 ,       $P_Boogie_mola_disco1         ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_mola_disco1         ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_mola_disco1         ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_mola_disco1         ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_mola_disco1         ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_mola_disco1         ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_mola_disco1         ) = './pecas_stl/disco_de_corte_stl/mola.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_mola_disco1         ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_mola_disco1         ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_mola_disco1         ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_mola_disco2         ) = 39                      ! Type
prim.ref (                          $P_Boogie_mola_disco2         ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_mola_disco2         ) = { $_fix_botinhaX + 0.12 } ! Position
prim.pos (                2 ,       $P_Boogie_mola_disco2         ) = { $_DistLinhas/2 -0.05 } ! Position
prim.pos (                3 ,       $P_Boogie_mola_disco2         ) = { $_fix_botinhaZ - 0.05 } ! Position
prim.ang (                1 ,       $P_Boogie_mola_disco2         ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_mola_disco2         ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_mola_disco2         ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_mola_disco2         ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_mola_disco2         ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_mola_disco2         ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_mola_disco2         ) = './pecas_stl/disco_de_corte_stl/mola.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_mola_disco2         ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_mola_disco2         ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_mola_disco2         ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_mola_disco4         ) = 39                      ! Type
prim.ref (                          $P_Boogie_mola_disco4         ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_mola_disco4         ) = { $_fix_botinhaX + 0.12 } ! Position
prim.pos (                2 ,       $P_Boogie_mola_disco4         ) = { 3*$_DistLinhas/2 -0.05 } ! Position
prim.pos (                3 ,       $P_Boogie_mola_disco4         ) = { $_fix_botinhaZ - 0.05 } ! Position
prim.ang (                1 ,       $P_Boogie_mola_disco4         ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_mola_disco4         ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_mola_disco4         ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_mola_disco4         ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_mola_disco4         ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_mola_disco4         ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_mola_disco4         ) = './pecas_stl/disco_de_corte_stl/mola.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_mola_disco4         ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_mola_disco4         ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_mola_disco4         ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_mola_disco6         ) = 39                      ! Type
prim.ref (                          $P_Boogie_mola_disco6         ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_mola_disco6         ) = { $_fix_botinhaX + 0.12 } ! Position
prim.pos (                2 ,       $P_Boogie_mola_disco6         ) = { 5*$_DistLinhas/2 -0.05 } ! Position
prim.pos (                3 ,       $P_Boogie_mola_disco6         ) = { $_fix_botinhaZ - 0.05 } ! Position
prim.ang (                1 ,       $P_Boogie_mola_disco6         ) = { 90 deg }              ! Angles
prim.ang (                2 ,       $P_Boogie_mola_disco6         ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_mola_disco6         ) = 1.48000000000000000E+02 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_mola_disco6         ) = 1.48000000000000000E+02 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_mola_disco6         ) = 1.48000000000000000E+02 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_mola_disco6         ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_mola_disco6         ) = './pecas_stl/disco_de_corte_stl/mola.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_mola_disco6         ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_mola_disco6         ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_mola_disco6         ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_bracos_disco1       ) = 39                      ! Type
prim.ref (                          $P_Boogie_bracos_disco1       ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_bracos_disco1       ) = { $_fix_botinhaX -0.467 } ! Position
prim.pos (                2 ,       $P_Boogie_bracos_disco1       ) = { -$_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_bracos_disco1       ) = { $_fix_botinhaZ - 0.236 } ! Position
prim.ang (                1 ,       $P_Boogie_bracos_disco1       ) = { 270 deg }             ! Angles
prim.ang (                3 ,       $P_Boogie_bracos_disco1       ) = { (180 + 28) deg }      ! Angles
prim.color.r (            1 ,       $P_Boogie_bracos_disco1       ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_bracos_disco1       ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_bracos_disco1       ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_bracos_disco1       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_bracos_disco1       ) = './pecas_stl/disco_de_corte_stl/bracos.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_bracos_disco1       ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_bracos_disco1       ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_bracos_disco1       ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_bracos_disco2       ) = 39                      ! Type
prim.ref (                          $P_Boogie_bracos_disco2       ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_bracos_disco2       ) = { $_fix_botinhaX -0.467 } ! Position
prim.pos (                2 ,       $P_Boogie_bracos_disco2       ) = { $_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_bracos_disco2       ) = { $_fix_botinhaZ - 0.236 } ! Position
prim.ang (                1 ,       $P_Boogie_bracos_disco2       ) = { 270 deg }             ! Angles
prim.ang (                3 ,       $P_Boogie_bracos_disco2       ) = { (180 + 28) deg }      ! Angles
prim.color.r (            1 ,       $P_Boogie_bracos_disco2       ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_bracos_disco2       ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_bracos_disco2       ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_bracos_disco2       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_bracos_disco2       ) = './pecas_stl/disco_de_corte_stl/bracos.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_bracos_disco2       ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_bracos_disco2       ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_bracos_disco2       ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_bracos_disco3       ) = 39                      ! Type
prim.ref (                          $P_Boogie_bracos_disco3       ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_bracos_disco3       ) = { $_fix_botinhaX -0.467 } ! Position
prim.pos (                2 ,       $P_Boogie_bracos_disco3       ) = { -3*$_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_bracos_disco3       ) = { $_fix_botinhaZ - 0.236 } ! Position
prim.ang (                1 ,       $P_Boogie_bracos_disco3       ) = { 270 deg }             ! Angles
prim.ang (                3 ,       $P_Boogie_bracos_disco3       ) = { (180 + 28) deg }      ! Angles
prim.color.r (            1 ,       $P_Boogie_bracos_disco3       ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_bracos_disco3       ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_bracos_disco3       ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_bracos_disco3       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_bracos_disco3       ) = './pecas_stl/disco_de_corte_stl/bracos.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_bracos_disco3       ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_bracos_disco3       ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_bracos_disco3       ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_bracos_disco4       ) = 39                      ! Type
prim.ref (                          $P_Boogie_bracos_disco4       ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_bracos_disco4       ) = { $_fix_botinhaX -0.467 } ! Position
prim.pos (                2 ,       $P_Boogie_bracos_disco4       ) = { 3*$_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_bracos_disco4       ) = { $_fix_botinhaZ - 0.236 } ! Position
prim.ang (                1 ,       $P_Boogie_bracos_disco4       ) = { 270 deg }             ! Angles
prim.ang (                3 ,       $P_Boogie_bracos_disco4       ) = { (180 + 28) deg }      ! Angles
prim.color.r (            1 ,       $P_Boogie_bracos_disco4       ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_bracos_disco4       ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_bracos_disco4       ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_bracos_disco4       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_bracos_disco4       ) = './pecas_stl/disco_de_corte_stl/bracos.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_bracos_disco4       ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_bracos_disco4       ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_bracos_disco4       ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_bracos_disco5       ) = 39                      ! Type
prim.ref (                          $P_Boogie_bracos_disco5       ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_bracos_disco5       ) = { $_fix_botinhaX -0.467 } ! Position
prim.pos (                2 ,       $P_Boogie_bracos_disco5       ) = { -5*$_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_bracos_disco5       ) = { $_fix_botinhaZ - 0.236 } ! Position
prim.ang (                1 ,       $P_Boogie_bracos_disco5       ) = { 270 deg }             ! Angles
prim.ang (                3 ,       $P_Boogie_bracos_disco5       ) = { (180 + 28) deg }      ! Angles
prim.color.r (            1 ,       $P_Boogie_bracos_disco5       ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_bracos_disco5       ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_bracos_disco5       ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_bracos_disco5       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_bracos_disco5       ) = './pecas_stl/disco_de_corte_stl/bracos.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_bracos_disco5       ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_bracos_disco5       ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_bracos_disco5       ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_bracos_disco6       ) = 39                      ! Type
prim.ref (                          $P_Boogie_bracos_disco6       ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_bracos_disco6       ) = { $_fix_botinhaX -0.467 } ! Position
prim.pos (                2 ,       $P_Boogie_bracos_disco6       ) = { 6*$_DistLinhas/2 - 0.08 } ! Position
prim.pos (                3 ,       $P_Boogie_bracos_disco6       ) = { $_fix_botinhaZ - 0.236 } ! Position
prim.ang (                1 ,       $P_Boogie_bracos_disco6       ) = { 270 deg }             ! Angles
prim.ang (                3 ,       $P_Boogie_bracos_disco6       ) = { (180 + 28) deg }      ! Angles
prim.color.r (            1 ,       $P_Boogie_bracos_disco6       ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_bracos_disco6       ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_bracos_disco6       ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_bracos_disco6       ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_bracos_disco6       ) = './pecas_stl/disco_de_corte_stl/bracos.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_bracos_disco6       ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_bracos_disco6       ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_bracos_disco6       ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_disco1              ) = 39                      ! Type
prim.ref (                          $P_Boogie_disco1              ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_disco1              ) = { $_fix_botinhaX -0.463 } ! Position
prim.pos (                2 ,       $P_Boogie_disco1              ) = { -$_DistLinhas/2 + 0.03 } ! Position
prim.pos (                3 ,       $P_Boogie_disco1              ) = { $_fix_botinhaZ -0.237 } ! Position
prim.ang (                1 ,       $P_Boogie_disco1              ) = 0.00000000000000000E+00 ! Angles
prim.ang (                3 ,       $P_Boogie_disco1              ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_disco1              ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_disco1              ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_disco1              ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_disco1              ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_disco1              ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_disco1              ) = './pecas_stl/disco_de_corte_stl/discos.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_disco1              ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_disco1              ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_disco1              ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_disco1              ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_disco1              ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_disco1              ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_disco1              ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_disco1              ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_disco1              ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_disco1              ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_disco1              ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_disco1              ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_disco1              ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_disco2              ) = 39                      ! Type
prim.ref (                          $P_Boogie_disco2              ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_disco2              ) = { $_fix_botinhaX -0.463 } ! Position
prim.pos (                2 ,       $P_Boogie_disco2              ) = { $_DistLinhas/2 + 0.03 } ! Position
prim.pos (                3 ,       $P_Boogie_disco2              ) = { $_fix_botinhaZ -0.237 } ! Position
prim.ang (                1 ,       $P_Boogie_disco2              ) = 0.00000000000000000E+00 ! Angles
prim.ang (                3 ,       $P_Boogie_disco2              ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_disco2              ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_disco2              ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_disco2              ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_disco2              ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_disco2              ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_disco2              ) = './pecas_stl/disco_de_corte_stl/discos.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_disco2              ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_disco2              ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_disco2              ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_disco2              ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_disco2              ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_disco2              ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_disco2              ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_disco2              ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_disco2              ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_disco2              ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_disco2              ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_disco2              ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_disco2              ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_disco3              ) = 39                      ! Type
prim.ref (                          $P_Boogie_disco3              ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_disco3              ) = { $_fix_botinhaX -0.463 } ! Position
prim.pos (                2 ,       $P_Boogie_disco3              ) = { -3*$_DistLinhas/2 + 0.03 } ! Position
prim.pos (                3 ,       $P_Boogie_disco3              ) = { $_fix_botinhaZ -0.237 } ! Position
prim.ang (                1 ,       $P_Boogie_disco3              ) = 0.00000000000000000E+00 ! Angles
prim.ang (                3 ,       $P_Boogie_disco3              ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_disco3              ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_disco3              ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_disco3              ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_disco3              ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_disco3              ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_disco3              ) = './pecas_stl/disco_de_corte_stl/discos.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_disco3              ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_disco3              ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_disco3              ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_disco3              ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_disco3              ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_disco3              ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_disco3              ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_disco3              ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_disco3              ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_disco3              ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_disco3              ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_disco3              ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_disco3              ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_disco4              ) = 39                      ! Type
prim.ref (                          $P_Boogie_disco4              ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_disco4              ) = { $_fix_botinhaX -0.463 } ! Position
prim.pos (                2 ,       $P_Boogie_disco4              ) = { 3*$_DistLinhas/2 + 0.03 } ! Position
prim.pos (                3 ,       $P_Boogie_disco4              ) = { $_fix_botinhaZ -0.237 } ! Position
prim.ang (                1 ,       $P_Boogie_disco4              ) = 0.00000000000000000E+00 ! Angles
prim.ang (                3 ,       $P_Boogie_disco4              ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_disco4              ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_disco4              ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_disco4              ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_disco4              ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_disco4              ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_disco4              ) = './pecas_stl/disco_de_corte_stl/discos.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_disco4              ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_disco4              ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_disco4              ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_disco4              ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_disco4              ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_disco4              ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_disco4              ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_disco4              ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_disco4              ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_disco4              ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_disco4              ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_disco4              ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_disco4              ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_disco5              ) = 39                      ! Type
prim.ref (                          $P_Boogie_disco5              ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_disco5              ) = { $_fix_botinhaX -0.463 } ! Position
prim.pos (                2 ,       $P_Boogie_disco5              ) = { -5*$_DistLinhas/2 + 0.03 } ! Position
prim.pos (                3 ,       $P_Boogie_disco5              ) = { $_fix_botinhaZ -0.237 } ! Position
prim.ang (                1 ,       $P_Boogie_disco5              ) = 0.00000000000000000E+00 ! Angles
prim.ang (                3 ,       $P_Boogie_disco5              ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_disco5              ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_disco5              ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_disco5              ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_disco5              ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_disco5              ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_disco5              ) = './pecas_stl/disco_de_corte_stl/discos.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_disco5              ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_disco5              ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_disco5              ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_disco5              ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_disco5              ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_disco5              ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_disco5              ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_disco5              ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_disco5              ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_disco5              ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_disco5              ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_disco5              ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_disco5              ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation

prim.type (                         $P_Boogie_disco6              ) = 39                      ! Type
prim.ref (                          $P_Boogie_disco6              ) = $M_Boogie_BRF           ! Reference Marker
prim.pos (                1 ,       $P_Boogie_disco6              ) = { $_fix_botinhaX -0.463 } ! Position
prim.pos (                2 ,       $P_Boogie_disco6              ) = { 5*$_DistLinhas/2 + 0.03 } ! Position
prim.pos (                3 ,       $P_Boogie_disco6              ) = { $_fix_botinhaZ -0.237 } ! Position
prim.ang (                1 ,       $P_Boogie_disco6              ) = 0.00000000000000000E+00 ! Angles
prim.ang (                3 ,       $P_Boogie_disco6              ) = { 90 deg }              ! Angles
prim.color.r (            1 ,       $P_Boogie_disco6              ) = 6.40000000000000000E+01 ! Colors (red component)
prim.color.g (            1 ,       $P_Boogie_disco6              ) = 6.40000000000000000E+01 ! Colors (green component)
prim.color.b (            1 ,       $P_Boogie_disco6              ) = 6.40000000000000000E+01 ! Colors (blue component)
prim.color.t (            1 ,       $P_Boogie_disco6              ) = 0.00000000000000000E+00 ! Colors (transparency component)
prim.mp.dens.solid (                $P_Boogie_disco6              ) = 7.85000000000000000E+03 ! Density
prim.par (                2 ,       $P_Boogie_disco6              ) = './pecas_stl/disco_de_corte_stl/discos.stl' ! [-] CAD file name
prim.par (                9 ,       $P_Boogie_disco6              ) = { 1/1000 }              ! [-] Global scaling factor
prim.par (               10 ,       $P_Boogie_disco6              ) = 0.00000000000000000E+00 ! [-] Scaling factor in x direction
prim.par (               11 ,       $P_Boogie_disco6              ) = 0.00000000000000000E+00 ! [-] Scaling factor in y direction
prim.par (               12 ,       $P_Boogie_disco6              ) = 0.00000000000000000E+00 ! [-] Scaling factor in z direction
prim.par (               13 ,       $P_Boogie_disco6              ) = 0.00000000000000000E+00 ! [-] Mirror in x direction
prim.par (               14 ,       $P_Boogie_disco6              ) = 0.00000000000000000E+00 ! [-] Mirror in y direction
prim.par (               15 ,       $P_Boogie_disco6              ) = 0.00000000000000000E+00 ! [-] Mirror in z direction
prim.par (               16 ,       $P_Boogie_disco6              ) = 0.00000000000000000E+00 ! [-] Switch vertex normals
prim.par (               17 ,       $P_Boogie_disco6              ) = 0.00000000000000000E+00 ! [-] Switch face normals
prim.par (               18 ,       $P_Boogie_disco6              ) = 0.00000000000000000E+00 ! [-] Repeat shape
prim.par (               30 ,       $P_Boogie_disco6              ) = 0.00000000000000000E+00 ! [-] Wireframe representation
prim.par (               31 ,       $P_Boogie_disco6              ) = 5.23598775598298816E-01 ! [rad] Sharp edge angle
prim.par (               32 ,       $P_Boogie_disco6              ) = 0.00000000000000000E+00 ! [-] Vertex normal (re-)computation


!**********************************************************************
! Force Elements
!**********************************************************************
force.type (                        $F_tau11                      ) = 50                      ! Type
force.from (                        $F_tau11                      ) = $M_Isys                 ! From Marker
force.to (                          $F_tau11                      ) = $S_esteira1.$M_Roda1_BRF ! To Marker
force.disabled (                    $F_tau11                      ) = 0                       ! Disabled
force.par (               1 ,       $F_tau11                      ) = $M_Boogie_BRF           ! [-] Reference Marker for calc.
force.par (               3 ,       $F_tau11                      ) = null                    ! [-] Expression for Fx
force.par (               4 ,       $F_tau11                      ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_tau11                      ) = null                    ! [-] Expression for Fz
force.par (               6 ,       $F_tau11                      ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_tau11                      ) = $X_tau11                ! [-] Expression for Ly
force.par (               8 ,       $F_tau11                      ) = null                    ! [-] Expression for Lz

force.type (                        $F_tau12                      ) = 50                      ! Type
force.from (                        $F_tau12                      ) = $M_Isys                 ! From Marker
force.to (                          $F_tau12                      ) = $S_esteira2.$M_Roda1_BRF ! To Marker
force.disabled (                    $F_tau12                      ) = 0                       ! Disabled
force.par (               1 ,       $F_tau12                      ) = $M_Boogie_BRF           ! [-] Reference Marker for calc.
force.par (               3 ,       $F_tau12                      ) = null                    ! [-] Expression for Fx
force.par (               4 ,       $F_tau12                      ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_tau12                      ) = null                    ! [-] Expression for Fz
force.par (               6 ,       $F_tau12                      ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_tau12                      ) = $X_tau12                ! [-] Expression for Ly
force.par (               8 ,       $F_tau12                      ) = null                    ! [-] Expression for Lz

force.type (                        $F_tau21                      ) = 50                      ! Type
force.from (                        $F_tau21                      ) = $M_Isys                 ! From Marker
force.to (                          $F_tau21                      ) = $S_roda1.$M_Roda1_BRF   ! To Marker
force.disabled (                    $F_tau21                      ) = 0                       ! Disabled
force.par (               1 ,       $F_tau21                      ) = $S_roda1.$M_Roda1_BRF   ! [-] Reference Marker for calc.
force.par (               3 ,       $F_tau21                      ) = null                    ! [-] Expression for Fx
force.par (               4 ,       $F_tau21                      ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_tau21                      ) = null                    ! [-] Expression for Fz
force.par (               6 ,       $F_tau21                      ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_tau21                      ) = $X_tau21                ! [-] Expression for Ly
force.par (               8 ,       $F_tau21                      ) = null                    ! [-] Expression for Lz

force.type (                        $F_tau22                      ) = 50                      ! Type
force.from (                        $F_tau22                      ) = $M_Isys                 ! From Marker
force.to (                          $F_tau22                      ) = $S_roda2.$M_Roda1_BRF   ! To Marker
force.disabled (                    $F_tau22                      ) = 0                       ! Disabled
force.par (               1 ,       $F_tau22                      ) = $S_roda2.$M_Roda1_BRF   ! [-] Reference Marker for calc.
force.par (               3 ,       $F_tau22                      ) = null                    ! [-] Expression for Fx
force.par (               4 ,       $F_tau22                      ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_tau22                      ) = null                    ! [-] Expression for Fz
force.par (               6 ,       $F_tau22                      ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_tau22                      ) = $X_tau22                ! [-] Expression for Ly
force.par (               8 ,       $F_tau22                      ) = null                    ! [-] Expression for Lz

force.type (                        $F_IF                         ) = 50                      ! Type
force.from (                        $F_IF                         ) = $M_Isys                 ! From Marker
force.to (                          $F_IF                         ) = $M_Boogie_BRF           ! To Marker
force.disabled (                    $F_IF                         ) = 1                       ! Disabled
force.par (               1 ,       $F_IF                         ) = $M_Boogie_BRF           ! [-] Reference Marker for calc.
force.par (               3 ,       $F_IF                         ) = $X_IF                   ! [-] Expression for Fx
force.par (               4 ,       $F_IF                         ) = null                    ! [-] Expression for Fy
force.par (               5 ,       $F_IF                         ) = null                    ! [-] Expression for Fz
force.par (               6 ,       $F_IF                         ) = null                    ! [-] Expression for Lx
force.par (               7 ,       $F_IF                         ) = null                    ! [-] Expression for Ly
force.par (               8 ,       $F_IF                         ) = null                    ! [-] Expression for Lz

!**********************************************************************
! Connection Elements
!**********************************************************************
connect.type (                      $CTN_ParCima1                 ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParCima1                 ) = 2.70526034059124898E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParCima1                 ) = -2.77187289896934973E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParCima1                 ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParCima1                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParCima1                 ) = 2.70526034059125786E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParCima1                 ) = -2.03901586703423440E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParCima1                 ) = 2.70526034059124898E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParCima1                 ) = -2.77187289896934973E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParCima1                 ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParCima1                 ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParCima1                 ) = $S_LinhaSemente1.$S_BarraCima.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParCima1                 ) = $M_Boogie_ParalelogramoCima1 ! [-] To Marker
connect.par (             3 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParCima1                 ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParCima1                 ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParCima1           ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParCima1           ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParCima1           ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParCima1           ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParCima1                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParCima1           ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParCima1     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParCima1     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParCima1     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParCima1     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParCima1     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParCima1           ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParCima1     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParCima1     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParCima1     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParCima1     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParCima1     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParCima1                 ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParCima1                 ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParCima1                 ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParCima1                 ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParCima1                 ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParCima1                 ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParCima1                 ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParCima1                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParCima1           ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParCima1           ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParCima1           ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParCima1           ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParCima1           ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParCima2                 ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParCima2                 ) = 2.70526034059124953E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParCima2                 ) = -2.58865864098557106E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParCima2                 ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParCima2                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParCima2                 ) = 2.70526034059125620E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParCima2                 ) = -2.28330154434593940E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParCima2                 ) = 2.70526034059124953E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParCima2                 ) = -2.58865864098557106E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParCima2                 ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParCima2                 ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParCima2                 ) = $S_LinhaSemente2.$S_BarraCima.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParCima2                 ) = $M_Boogie_ParalelogramoCima2 ! [-] To Marker
connect.par (             3 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParCima2                 ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParCima2                 ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParCima2           ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParCima2           ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParCima2           ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParCima2           ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParCima2                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParCima2           ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParCima2     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParCima2     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParCima2     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParCima2     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParCima2     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParCima2           ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParCima2     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParCima2     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParCima2     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParCima2     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParCima2     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParCima2                 ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParCima2                 ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParCima2                 ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParCima2                 ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParCima2                 ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParCima2                 ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParCima2                 ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParCima2                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParCima2           ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParCima2           ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParCima2           ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParCima2           ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParCima2           ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParCima3                 ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParCima3                 ) = 2.70526034059124509E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParCima3                 ) = -2.34437296367386606E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParCima3                 ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParCima3                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParCima3                 ) = 2.70526034059125731E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParCima3                 ) = -2.71080147964142340E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParCima3                 ) = 2.70526034059124509E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParCima3                 ) = -2.34437296367386606E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParCima3                 ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParCima3                 ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParCima3                 ) = $S_LinhaSemente3.$S_BarraCima.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParCima3                 ) = $M_Boogie_ParalelogramoCima3 ! [-] To Marker
connect.par (             3 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParCima3                 ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParCima3                 ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParCima3           ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParCima3           ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParCima3           ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParCima3           ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParCima3                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParCima3           ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParCima3     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParCima3     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParCima3     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParCima3     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParCima3     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParCima3           ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParCima3     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParCima3     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParCima3     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParCima3     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParCima3     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParCima3                 ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParCima3                 ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParCima3                 ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParCima3                 ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParCima3                 ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParCima3                 ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParCima3                 ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParCima3                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParCima3           ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParCima3           ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParCima3           ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParCima3           ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParCima3           ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParCima4                 ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParCima4                 ) = 2.70526034059125953E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParCima4                 ) = -2.46651580232971840E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParCima4                 ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParCima4                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParCima4                 ) = 2.70526034059124842E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParCima4                 ) = -2.64973006031349739E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParCima4                 ) = 2.70526034059125953E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParCima4                 ) = -2.46651580232971840E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParCima4                 ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParCima4                 ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParCima4                 ) = $S_LinhaSemente4.$S_BarraCima.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParCima4                 ) = $M_Boogie_ParalelogramoCima4 ! [-] To Marker
connect.par (             3 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParCima4                 ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParCima4                 ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParCima4           ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParCima4           ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParCima4           ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParCima4           ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParCima4                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParCima4           ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParCima4     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParCima4     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParCima4     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParCima4     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParCima4     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParCima4           ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParCima4     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParCima4     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParCima4     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParCima4     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParCima4     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParCima4                 ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParCima4                 ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParCima4                 ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParCima4                 ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParCima4                 ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParCima4                 ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParCima4                 ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParCima4                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParCima4           ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParCima4           ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParCima4           ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParCima4           ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParCima4           ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParCima5                 ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParCima5                 ) = 2.70526034059124731E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParCima5                 ) = -4.23758696283958071E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParCima5                 ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParCima5                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParCima5                 ) = 2.70526034059125065E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParCima5                 ) = -2.89401573762520239E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParCima5                 ) = 2.70526034059124731E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParCima5                 ) = -4.23758696283958071E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParCima5                 ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParCima5                 ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParCima5                 ) = $S_LinhaSemente5.$S_BarraCima.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParCima5                 ) = $M_Boogie_ParalelogramoCima5 ! [-] To Marker
connect.par (             3 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParCima5                 ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParCima5                 ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParCima5           ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParCima5           ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParCima5           ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParCima5           ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParCima5                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParCima5           ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParCima5     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParCima5     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParCima5     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParCima5     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParCima5     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParCima5           ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParCima5     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParCima5     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParCima5     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParCima5     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParCima5     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParCima5                 ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParCima5                 ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParCima5                 ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParCima5                 ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParCima5                 ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParCima5                 ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParCima5                 ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParCima5                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParCima5           ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParCima5           ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParCima5           ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParCima5           ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParCima5           ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParCima6                 ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParCima6                 ) = 2.70526034059124398E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParCima6                 ) = -2.39224208004851660E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParCima6                 ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParCima6                 ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParCima6                 ) = 2.70526034059124454E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParCima6                 ) = -2.45331349937644261E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParCima6                 ) = 2.70526034059124398E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParCima6                 ) = -2.39224208004851660E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParCima6                 ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParCima6                 ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParCima6                 ) = $S_LinhaSemente6.$S_BarraCima.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParCima6                 ) = $M_Boogie_ParalelogramoCima6 ! [-] To Marker
connect.par (             3 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParCima6                 ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParCima6                 ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParCima6           ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParCima6           ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParCima6           ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParCima6           ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParCima6                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParCima6           ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParCima6     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParCima6     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParCima6     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParCima6     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParCima6     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParCima6           ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParCima6     ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParCima6     ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParCima6     ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParCima6     ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParCima6     ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParCima6                 ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParCima6                 ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParCima6                 ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParCima6                 ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParCima6                 ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParCima6                 ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParCima6                 ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParCima6                 ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParCima6           ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParCima6           ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParCima6           ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParCima6           ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParCima6           ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParBaixo1                ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParBaixo1                ) = 2.70526034059125398E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParBaixo1                ) = -3.00636138224613335E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParBaixo1                ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParBaixo1                ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParBaixo1                ) = 2.70526034059125620E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParBaixo1                ) = -2.44759497750250357E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParBaixo1                ) = 2.70526034059125398E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParBaixo1                ) = -3.00636138224613335E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParBaixo1                ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParBaixo1                ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParBaixo1                ) = $S_LinhaSemente1.$S_BarraBaixo.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParBaixo1                ) = $M_Boogie_ParalelogramoBaixo1 ! [-] To Marker
connect.par (             3 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParBaixo1                ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParBaixo1                ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParBaixo1          ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParBaixo1          ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParBaixo1          ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParBaixo1          ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParBaixo1                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParBaixo1          ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParBaixo1    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParBaixo1    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParBaixo1    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParBaixo1    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParBaixo1    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParBaixo1          ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParBaixo1    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParBaixo1    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParBaixo1    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParBaixo1    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParBaixo1    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParBaixo1                ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParBaixo1                ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParBaixo1                ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParBaixo1                ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParBaixo1                ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParBaixo1                ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParBaixo1                ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParBaixo1                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParBaixo1          ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParBaixo1          ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParBaixo1          ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParBaixo1          ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParBaixo1          ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParBaixo2                ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParBaixo2                ) = 2.70526034059124953E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParBaixo2                ) = -2.51598637056345832E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParBaixo2                ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParBaixo2                ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParBaixo2                ) = 2.70526034059125509E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParBaixo2                ) = -2.11396880205522089E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParBaixo2                ) = 2.70526034059124953E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParBaixo2                ) = -2.51598637056345832E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParBaixo2                ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParBaixo2                ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParBaixo2                ) = $S_LinhaSemente2.$S_BarraBaixo.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParBaixo2                ) = $M_Boogie_ParalelogramoBaixo2 ! [-] To Marker
connect.par (             3 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParBaixo2                ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParBaixo2                ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParBaixo2          ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParBaixo2          ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParBaixo2          ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParBaixo2          ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParBaixo2                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParBaixo2          ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParBaixo2    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParBaixo2    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParBaixo2    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParBaixo2    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParBaixo2    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParBaixo2          ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParBaixo2    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParBaixo2    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParBaixo2    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParBaixo2    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParBaixo2    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParBaixo2                ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParBaixo2                ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParBaixo2                ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParBaixo2                ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParBaixo2                ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParBaixo2                ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParBaixo2                ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParBaixo2                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParBaixo2          ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParBaixo2          ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParBaixo2          ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParBaixo2          ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParBaixo2          ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParBaixo3                ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParBaixo3                ) = 2.70526034059124842E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParBaixo3                ) = -2.74758583824100788E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParBaixo3                ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParBaixo3                ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParBaixo3                ) = 2.70526034059125731E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParBaixo3                ) = -3.09613844964173019E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParBaixo3                ) = 2.70526034059124842E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParBaixo3                ) = -2.74758583824100788E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParBaixo3                ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParBaixo3                ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParBaixo3                ) = $S_LinhaSemente3.$S_BarraBaixo.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParBaixo3                ) = $M_Boogie_ParalelogramoBaixo3 ! [-] To Marker
connect.par (             3 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParBaixo3                ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParBaixo3                ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParBaixo3          ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParBaixo3          ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParBaixo3          ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParBaixo3          ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParBaixo3                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParBaixo3          ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParBaixo3    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParBaixo3    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParBaixo3    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParBaixo3    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParBaixo3    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParBaixo3          ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParBaixo3    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParBaixo3    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParBaixo3    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParBaixo3    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParBaixo3    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParBaixo3                ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParBaixo3                ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParBaixo3                ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParBaixo3                ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParBaixo3                ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParBaixo3                ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParBaixo3                ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParBaixo3                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParBaixo3          ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParBaixo3          ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParBaixo3          ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParBaixo3          ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParBaixo3          ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParBaixo4                ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParBaixo4                ) = 2.70526034059126119E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParBaixo4                ) = -2.26658495785755581E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParBaixo4                ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParBaixo4                ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParBaixo4                ) = 2.70526034059124676E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParBaixo4                ) = -2.46789519463942022E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParBaixo4                ) = 2.70526034059126119E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParBaixo4                ) = -2.26658495785755581E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParBaixo4                ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParBaixo4                ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParBaixo4                ) = $S_LinhaSemente4.$S_BarraBaixo.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParBaixo4                ) = $M_Boogie_ParalelogramoBaixo4 ! [-] To Marker
connect.par (             3 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParBaixo4                ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParBaixo4                ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParBaixo4          ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParBaixo4          ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParBaixo4          ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParBaixo4          ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParBaixo4                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParBaixo4          ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParBaixo4    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParBaixo4    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParBaixo4    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParBaixo4    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParBaixo4    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParBaixo4          ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParBaixo4    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParBaixo4    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParBaixo4    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParBaixo4    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParBaixo4    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParBaixo4                ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParBaixo4                ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParBaixo4                ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParBaixo4                ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParBaixo4                ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParBaixo4                ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParBaixo4                ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParBaixo4                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParBaixo4          ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParBaixo4          ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParBaixo4          ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParBaixo4          ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParBaixo4          ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParBaixo5                ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParBaixo5                ) = 2.70526034059124953E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParBaixo5                ) = -4.82025670049933382E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParBaixo5                ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParBaixo5                ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParBaixo5                ) = 2.70526034059125065E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParBaixo5                ) = -2.19616623764513414E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParBaixo5                ) = 2.70526034059124953E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParBaixo5                ) = -4.82025670049933382E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParBaixo5                ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParBaixo5                ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParBaixo5                ) = $S_LinhaSemente5.$S_BarraBaixo.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParBaixo5                ) = $M_Boogie_ParalelogramoBaixo5 ! [-] To Marker
connect.par (             3 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParBaixo5                ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParBaixo5                ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParBaixo5          ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParBaixo5          ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParBaixo5          ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParBaixo5          ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParBaixo5                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParBaixo5          ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParBaixo5    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParBaixo5    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParBaixo5    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParBaixo5    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParBaixo5    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParBaixo5          ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParBaixo5    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParBaixo5    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParBaixo5    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParBaixo5    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParBaixo5    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParBaixo5                ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParBaixo5                ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParBaixo5                ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParBaixo5                ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParBaixo5                ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParBaixo5                ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParBaixo5                ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParBaixo5                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParBaixo5          ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParBaixo5          ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParBaixo5          ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParBaixo5          ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParBaixo5          ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

connect.type (                      $CTN_ParBaixo6                ) = 11                      ! Type
connect.st.pos (          1 ,       $CTN_ParBaixo6                ) = 2.70526034059124842E-01 ! Position states
connect.st.vel (          1 ,       $CTN_ParBaixo6                ) = -2.23469056012245151E-70 ! Velocity states
connect.st.equi (         1 ,       $CTN_ParBaixo6                ) = 0                       ! Equilibrium calculation flags
connect.st.lin (          1 ,       $CTN_ParBaixo6                ) = 0                       ! Linearization mode (0=Automatic; 1=Export; 2=Resolve
connect.st.desc (         1 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         2 ,       $CTN_ParBaixo6                ) = 2.70526034059124287E-01 ! Descriptive states
connect.st.desc (         3 ,       $CTN_ParBaixo6                ) = -2.90263681569566745E-70 ! Descriptive states
connect.st.desc (         4 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! Descriptive states
connect.st.desc (         5 ,       $CTN_ParBaixo6                ) = 2.70526034059124842E-01 ! Descriptive states
connect.st.desc (         6 ,       $CTN_ParBaixo6                ) = -2.23469056012245151E-70 ! Descriptive states
connect.st.force (        1 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        2 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        3 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        4 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        5 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.force (        6 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! Constraint forces (locked directions)
connect.st.intern (                 $CTN_ParBaixo6                ) = ''                      ! Internal state
connect.disabled (                  $CTN_ParBaixo6                ) = 0                       ! Disabled
connect.par (             2 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! [-] Interface
connect.par (             2 ,   2 , $CTN_ParBaixo6                ) = $S_LinhaSemente6.$S_BarraBaixo.$M_Body1_Junta2 ! [-] From Marker
connect.par (             2 ,   3 , $CTN_ParBaixo6                ) = $M_Boogie_ParalelogramoBaixo6 ! [-] To Marker
connect.par (             3 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! [-] Kinematic parameters
connect.par (             3 ,   3 , $CTN_ParBaixo6                ) = 1.00000000000000000E+00 ! [-] Axis of rotation
connect.par (             4 ,       $CTN_ParBaixo6                ) = 1.00000000000000000E+00 ! [-] Limits <prel>
connect.par (             4 ,   1 , $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! [-] Rotation beta
connect.par (             4 ,   1 ,   1 , $CTN_ParBaixo6          ) = 0.00000000000000000E+00 ! [-] Enable lower
connect.par (             4 ,   1 ,   2 , $CTN_ParBaixo6          ) = 0.00000000000000000E+00 ! [rad] Lower value
connect.par (             4 ,   1 ,   3 , $CTN_ParBaixo6          ) = 0.00000000000000000E+00 ! [-] Enable upper
connect.par (             4 ,   1 ,   4 , $CTN_ParBaixo6          ) = 0.00000000000000000E+00 ! [rad] Upper value
connect.par (             4 ,  10 , $CTN_ParBaixo6                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             4 ,  10 ,   1 , $CTN_ParBaixo6          ) = 0.00000000000000000E+00 ! [-] Lower limit on Rotation beta
connect.par (             4 ,  10 ,   1 ,   1 , $CTN_ParBaixo6    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   1 ,   2 , $CTN_ParBaixo6    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   1 ,   5 , $CTN_ParBaixo6    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   1 ,   6 , $CTN_ParBaixo6    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   1 ,   7 , $CTN_ParBaixo6    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             4 ,  10 ,   2 , $CTN_ParBaixo6          ) = 0.00000000000000000E+00 ! [-] Upper limit on Rotation beta
connect.par (             4 ,  10 ,   2 ,   1 , $CTN_ParBaixo6    ) = 0.00000000000000000E+00 ! [-] Enforcement
connect.par (             4 ,  10 ,   2 ,   2 , $CTN_ParBaixo6    ) = 1.00000000000000000E+00 ! [-] Root handling
connect.par (             4 ,  10 ,   2 ,   5 , $CTN_ParBaixo6    ) = 1.00000000000000000E+00 ! [-] Restitution coefficient
connect.par (             4 ,  10 ,   2 ,   6 , $CTN_ParBaixo6    ) = 1.00000000000000000E+08 ! [Nm/rad] Stiffness
connect.par (             4 ,  10 ,   2 ,   7 , $CTN_ParBaixo6    ) = 1.00000000000000000E+08 ! [Nms/rad] Damping
connect.par (             5 ,       $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! [-] Friction <prel>
connect.par (             5 ,   1 , $CTN_ParBaixo6                ) = 0.00000000000000000E+00 ! [-] Type
connect.par (             5 ,   2 , $CTN_ParBaixo6                ) = 1.00000000000000006E-01 ! [-] Dynamic friction coefficient
connect.par (             5 ,   3 , $CTN_ParBaixo6                ) = 2.00000000000000011E-01 ! [-] Static friction coefficient
connect.par (             5 ,   4 , $CTN_ParBaixo6                ) = 1.00000000000000000E+02 ! [Ns/m] Damping coefficient
connect.par (             5 ,   5 , $CTN_ParBaixo6                ) = 1.00000000000000006E-01 ! [m] Reference diameter
connect.par (             5 ,   6 , $CTN_ParBaixo6                ) = 1.00000000000000006E-01 ! [m] Axial reference diameter
connect.par (             5 ,   7 , $CTN_ParBaixo6                ) = 1.00000000000000006E-01 ! [m] Reference width
connect.par (             5 ,  10 , $CTN_ParBaixo6                ) = 1.00000000000000000E+00 ! [-] Advanced
connect.par (             5 ,  10 ,   1 , $CTN_ParBaixo6          ) = 1.00000000000000002E-03 ! [m/s] Dynamic velocity limit
connect.par (             5 ,  10 ,   2 , $CTN_ParBaixo6          ) = 1.00000000000000008E-05 ! [m/s] Static velocity limit
connect.par (             5 ,  10 ,   3 , $CTN_ParBaixo6          ) = 1.00000000000000008E-05 ! [m/s] Min. slip velocity
connect.par (             5 ,  10 ,   4 , $CTN_ParBaixo6          ) = 1.00000000000000000E+08 ! [N/m] Stick stiffness
connect.par (             5 ,  10 ,   5 , $CTN_ParBaixo6          ) = 1.00000000000000000E+04 ! [Ns/m] Stick damping

!**********************************************************************
! Expressions
!**********************************************************************
express.str (                       $X_PD                         ) = '2*$_lambda*($_vd - VX($M_Boogie_BRF)) + ($_lambda^2)*($_vd*TIME - DX($M_Boogie_BRF))' ! Definition

express.str (                       $X_tau11                      ) = '-0.5*(1-$_beta)*$_m*$S_esteira1.$_r1*$X_PD' ! Definition

express.str (                       $X_tau12                      ) = '-0.5*(1-$_beta)*$_m*$S_esteira2.$_r1*$X_PD' ! Definition

express.str (                       $X_tau21                      ) = '-0.5*$_beta*$_m*$S_roda1.$_r*$X_PD' ! Definition

express.str (                       $X_tau22                      ) = '-0.5*$_beta*$_m*$S_roda2.$_r*$X_PD' ! Definition

express.str (                       $X_IF                         ) = '-20400*tanh(-1000*VX($M_Boogie_BRF,$M_Isys,$M_Boogie_BRF))' ! Definition


! Overwritten substructure values
view.fclip.value (                  $S_esteira1.$V_WorkingView    ) = 3.50148491561412811E-02 ! Front clipping plane value
view.bclip.value (                  $S_esteira1.$V_WorkingView    ) = 3.50148468017578125E+01 ! Back clipping plane value

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact1  ) = 3.13759244289371353E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact2  ) = -3.14696714392739163E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact3  ) = -3.14249379157070075E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact4  ) = -3.14513592243277573E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira1.$M_Base_contact5  ) = -3.14111585383494707E-01 ! Algebraic states

joint.from (                        $S_esteira1.$J_Base           ) = $M_Boogie_esteira1      ! From Marker
joint.type (                        $S_esteira1.$J_Base           ) = 0                       ! Type
joint.par (               1 ,       $S_esteira1.$J_Base           ) = 0.00000000000000000E+00 ! [rad] Rotation about alpha
joint.par (               2 ,       $S_esteira1.$J_Base           ) = 0.00000000000000000E+00 ! [rad] Rotation about beta
joint.par (               3 ,       $S_esteira1.$J_Base           ) = 0.00000000000000000E+00 ! [rad] Rotation about gamma
joint.par (               4 ,       $S_esteira1.$J_Base           ) = 0.00000000000000000E+00 ! [m] Translation in x
joint.par (               5 ,       $S_esteira1.$J_Base           ) = 0.00000000000000000E+00 ! [m] Translation in y
joint.par (               6 ,       $S_esteira1.$J_Base           ) = 0.00000000000000000E+00 ! [m] Translation in z
joint.par (               7 ,       $S_esteira1.$J_Base           ) = 0.00000000000000000E+00 ! [-] Rotation sequence


joint.st.pos (            1 ,       $S_esteira1.$J_Roda1          ) = 8.57839560693404631E-27 ! Position
joint.st.vel (            1 ,       $S_esteira1.$J_Roda1          ) = 2.11319821815994095E-71 ! Velocity


joint.st.pos (            1 ,       $S_esteira1.$J_Roda2          ) = 2.57351868208021404E-26 ! Position
joint.st.vel (            1 ,       $S_esteira1.$J_Roda2          ) = 6.33959465447982405E-71 ! Velocity


joint.st.pos (            1 ,       $S_esteira1.$J_Roda3          ) = 2.57351868208021404E-26 ! Position
joint.st.vel (            1 ,       $S_esteira1.$J_Roda3          ) = 6.33959465447982405E-71 ! Velocity


joint.st.pos (            1 ,       $S_esteira1.$J_Roda4          ) = 8.57839560693404631E-27 ! Position
joint.st.vel (            1 ,       $S_esteira1.$J_Roda4          ) = 2.11319821815994417E-71 ! Velocity


joint.from (                        $S_esteira1.$J_connector      ) = $M_Isys_1               ! From Marker


marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact1  ) = 3.99888940906932966E+00 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact1  ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact2  ) = 3.72911317685522592E+00 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact2  ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact3  ) = 4.26782564913235340E+00 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact3  ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact4  ) = 3.54439730024070609E+00 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact4  ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira1.$M_chao_contact5  ) = 4.45134644784605005E+00 ! Algebraic states
marker.par (              3 ,       $S_esteira1.$M_chao_contact5  ) = $P_chao                 ! [-] Contact geometry Primitive

prim.transparency (                 $S_esteira1.$P_chao           ) = 1.00000000000000000E+00 ! Transparency


view.fclip.value (                  $S_esteira2.$V_WorkingView    ) = 3.50148491561412811E-02 ! Front clipping plane value
view.bclip.value (                  $S_esteira2.$V_WorkingView    ) = 3.50148468017578125E+01 ! Back clipping plane value

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact1  ) = -3.14559286428587270E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact2  ) = -3.14696714392739163E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact3  ) = -3.14249379157070075E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact4  ) = -3.14513592243277573E-01 ! Algebraic states

marker.st.alg (           1 ,       $S_esteira2.$M_Base_contact5  ) = -3.14111585383494707E-01 ! Algebraic states

joint.from (                        $S_esteira2.$J_Base           ) = $M_Boogie_esteira2      ! From Marker
joint.type (                        $S_esteira2.$J_Base           ) = 0                       ! Type
joint.par (               1 ,       $S_esteira2.$J_Base           ) = 0.00000000000000000E+00 ! [rad] Rotation about alpha
joint.par (               2 ,       $S_esteira2.$J_Base           ) = 0.00000000000000000E+00 ! [rad] Rotation about beta
joint.par (               3 ,       $S_esteira2.$J_Base           ) = 0.00000000000000000E+00 ! [rad] Rotation about gamma
joint.par (               4 ,       $S_esteira2.$J_Base           ) = 0.00000000000000000E+00 ! [m] Translation in x
joint.par (               5 ,       $S_esteira2.$J_Base           ) = 0.00000000000000000E+00 ! [m] Translation in y
joint.par (               6 ,       $S_esteira2.$J_Base           ) = 0.00000000000000000E+00 ! [m] Translation in z
joint.par (               7 ,       $S_esteira2.$J_Base           ) = 0.00000000000000000E+00 ! [-] Rotation sequence


joint.st.pos (            1 ,       $S_esteira2.$J_Roda1          ) = -2.01661973956581404E-26 ! Position
joint.st.vel (            1 ,       $S_esteira2.$J_Roda1          ) = -8.81593831030293860E-59 ! Velocity


joint.st.pos (            1 ,       $S_esteira2.$J_Roda2          ) = -6.04985921869744184E-26 ! Position
joint.st.vel (            1 ,       $S_esteira2.$J_Roda2          ) = -2.64478149309088193E-58 ! Velocity


joint.st.pos (            1 ,       $S_esteira2.$J_Roda3          ) = -6.04985921869744184E-26 ! Position
joint.st.vel (            1 ,       $S_esteira2.$J_Roda3          ) = -2.64478149309088158E-58 ! Velocity


joint.st.pos (            1 ,       $S_esteira2.$J_Roda4          ) = -2.01661973956581404E-26 ! Position
joint.st.vel (            1 ,       $S_esteira2.$J_Roda4          ) = -8.81593831030294744E-59 ! Velocity


joint.from (                        $S_esteira2.$J_connector      ) = $M_Isys_2               ! From Marker


marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact1  ) = 3.99888940906932966E+00 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact1  ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact2  ) = 3.72911317685522592E+00 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact2  ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact3  ) = 4.26782564913235340E+00 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact3  ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact4  ) = 3.54439730024070609E+00 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact4  ) = $P_chao                 ! [-] Contact geometry Primitive

marker.st.alg (           1 ,       $S_esteira2.$M_chao_contact5  ) = 4.45134644784605005E+00 ! Algebraic states
marker.par (              3 ,       $S_esteira2.$M_chao_contact5  ) = $P_chao                 ! [-] Contact geometry Primitive

prim.transparency (                 $S_esteira2.$P_chao           ) = 1.00000000000000000E+00 ! Transparency


marker.pos (              2 ,       $S_rocker1.$M_Rocker_2roda    ) = 1.10000000000000001E-01 ! Position

joint.from (                        $S_rocker1.$J_Rocker          ) = $M_Boogie_rocker1       ! From Marker

prim.pos (                2 ,       $S_rocker1.$P_Rocker_CAD      ) = -5.99999999999999978E-01 ! Position
prim.par (               15 ,       $S_rocker1.$P_Rocker_CAD      ) = 1.00000000000000000E+00 ! [-] Mirror in z direction


marker.pos (              2 ,       $S_rocker2.$M_Rocker_2roda    ) = -1.10000000000000001E-01 ! Position

joint.from (                        $S_rocker2.$J_Rocker          ) = $M_Boogie_rocker2       ! From Marker

prim.pos (                2 ,       $S_rocker2.$P_Rocker_CAD      ) = 5.99999999999999978E-01 ! Position
prim.par (               15 ,       $S_rocker2.$P_Rocker_CAD      ) = 0.00000000000000000E+00 ! [-] Mirror in z direction


marker.st.alg (           1 ,       $S_roda1.$M_Roda1_contact     ) = 1.38071133845141469E+00 ! Algebraic states

joint.from (                        $S_roda1.$J_Roda1             ) = $S_rocker1.$M_Rocker_2roda ! From Marker
joint.type (                        $S_roda1.$J_Roda1             ) = 2                       ! Type


joint.from (                        $S_roda1.$J_connector         ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_roda1.$M_chao_contact      ) = 6.30207525586569250E+00 ! Algebraic states
marker.par (              3 ,       $S_roda1.$M_chao_contact      ) = $P_chao                 ! [-] Contact geometry Primitive

prim.transparency (                 $S_roda1.$P_chao              ) = 1.00000000000000000E+00 ! Transparency


marker.st.alg (           1 ,       $S_roda2.$M_Roda1_contact     ) = 1.38071133845141469E+00 ! Algebraic states

joint.from (                        $S_roda2.$J_Roda1             ) = $S_rocker2.$M_Rocker_2roda ! From Marker
joint.type (                        $S_roda2.$J_Roda1             ) = 2                       ! Type

prim.par (               15 ,       $S_roda2.$P_Roda1_aro         ) = 1.00000000000000000E+00 ! [-] Mirror in z direction


joint.from (                        $S_roda2.$J_connector         ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_roda2.$M_chao_contact      ) = 6.30207525586569250E+00 ! Algebraic states
marker.par (              3 ,       $S_roda2.$M_chao_contact      ) = $P_chao                 ! [-] Contact geometry Primitive

prim.transparency (                 $S_roda2.$P_chao              ) = 1.00000000000000000E+00 ! Transparency


joint.st.pos (            1 ,       $S_LinhaSemente1.$J_Estrutura ) = -6.55933373157599260E-23 ! Position
joint.st.pos (            2 ,       $S_LinhaSemente1.$J_Estrutura ) = 6.04707925400188642E-16 ! Position
joint.st.pos (            3 ,       $S_LinhaSemente1.$J_Estrutura ) = 4.64698762604545178E-23 ! Position
joint.st.pos (            4 ,       $S_LinhaSemente1.$J_Estrutura ) = 3.60638905120292508E-01 ! Position
joint.st.pos (            5 ,       $S_LinhaSemente1.$J_Estrutura ) = -2.50000000000000000E-01 ! Position
joint.st.pos (            6 ,       $S_LinhaSemente1.$J_Estrutura ) = 5.28390889286348031E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente1.$J_Estrutura ) = 1.11741994969687842E-72 ! Velocity
joint.st.vel (            2 ,       $S_LinhaSemente1.$J_Estrutura ) = 2.44285677311705123E-71 ! Velocity
joint.st.vel (            3 ,       $S_LinhaSemente1.$J_Estrutura ) = 2.68932140226432385E-72 ! Velocity
joint.st.vel (            4 ,       $S_LinhaSemente1.$J_Estrutura ) = 7.12445416791283556E-56 ! Velocity
joint.st.vel (            5 ,       $S_LinhaSemente1.$J_Estrutura ) = -1.37105390421329488E-86 ! Velocity
joint.st.vel (            6 ,       $S_LinhaSemente1.$J_Estrutura ) = 1.38680271183767680E-70 ! Velocity


prim.transparency (                 $S_LinhaSemente1.$P_chao      ) = 1.00000000000000000E+00 ! Transparency


joint.from (                        $S_LinhaSemente1.$J_connector ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_BarraCima.$M_Body1_contact) = -5.16244773342849683E-01 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente1.$S_BarraCima.$J_Body1) = -2.70526034059125509E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente1.$S_BarraCima.$J_Body1) = 2.52758722165764473E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_BarraBaixo.$M_Body1_contact) = 3.97756818462262896E+00 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente1.$S_BarraBaixo.$J_Body1) = -2.70526034059125953E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente1.$S_BarraBaixo.$J_Body1) = 2.76207570493442802E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscosV.$M_Roda1_contact) = 1.37519164736488575E+00 ! Algebraic states


joint.from (                        $S_LinhaSemente1.$S_DiscosV.$J_connector) = $M_Isys       ! From Marker


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscosV.$M_chao_contact) = 1.75537147391901849E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente1.$S_DiscosV.$M_chao_contact) = $P_chao    ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoD1.$M_Roda1_contact) = 9.31544866425514755E+01 ! Algebraic states


joint.from (                        $S_LinhaSemente1.$S_DiscoD1.$J_connector) = $M_Isys       ! From Marker


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoD1.$M_chao_contact) = -4.02358415389621257E+02 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente1.$S_DiscoD1.$M_chao_contact) = $P_chao    ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoD2.$M_Roda1_contact) = 1.15480820379619580E+01 ! Algebraic states


joint.from (                        $S_LinhaSemente1.$S_DiscoD2.$J_connector) = $M_Isys       ! From Marker


marker.st.alg (           1 ,       $S_LinhaSemente1.$S_DiscoD2.$M_chao_contact) = -4.25530822662520052E+01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente1.$S_DiscoD2.$M_chao_contact) = $P_chao    ! [-] Contact geometry Primitive


joint.st.pos (            1 ,       $S_LinhaSemente2.$J_Estrutura ) = 3.50504897760461434E-23 ! Position
joint.st.pos (            2 ,       $S_LinhaSemente2.$J_Estrutura ) = 5.16265631074637111E-16 ! Position
joint.st.pos (            3 ,       $S_LinhaSemente2.$J_Estrutura ) = -4.17237009442929727E-23 ! Position
joint.st.pos (            4 ,       $S_LinhaSemente2.$J_Estrutura ) = 3.60638905120292230E-01 ! Position
joint.st.pos (            5 ,       $S_LinhaSemente2.$J_Estrutura ) = 2.50000000000000000E-01 ! Position
joint.st.pos (            6 ,       $S_LinhaSemente2.$J_Estrutura ) = 5.28390889286348253E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente2.$J_Estrutura ) = -7.62253969412067156E-73 ! Velocity
joint.st.vel (            2 ,       $S_LinhaSemente2.$J_Estrutura ) = 6.10714193279262808E-72 ! Velocity
joint.st.vel (            3 ,       $S_LinhaSemente2.$J_Estrutura ) = 7.87262640508858556E-73 ! Velocity
joint.st.vel (            4 ,       $S_LinhaSemente2.$J_Estrutura ) = 7.12445416791283556E-56 ! Velocity
joint.st.vel (            5 ,       $S_LinhaSemente2.$J_Estrutura ) = -1.34554489999313002E-72 ! Velocity
joint.st.vel (            6 ,       $S_LinhaSemente2.$J_Estrutura ) = 1.05103100919298372E-70 ! Velocity


prim.transparency (                 $S_LinhaSemente2.$P_chao      ) = 1.00000000000000000E+00 ! Transparency


joint.from (                        $S_LinhaSemente2.$J_connector ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_BarraCima.$M_Body1_contact) = -5.16244773342849683E-01 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente2.$S_BarraCima.$J_Body1) = -2.70526034059125509E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente2.$S_BarraCima.$J_Body1) = 2.52758722165764473E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_BarraBaixo.$M_Body1_contact) = 3.97756818462262896E+00 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente2.$S_BarraBaixo.$J_Body1) = -2.70526034059125509E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente2.$S_BarraBaixo.$J_Body1) = 2.45491495123553199E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscosV.$M_Roda1_contact) = 1.37519164736488575E+00 ! Algebraic states


joint.from (                        $S_LinhaSemente2.$S_DiscosV.$J_connector) = $M_Isys       ! From Marker


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscosV.$M_chao_contact) = 1.75537147391901871E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente2.$S_DiscosV.$M_chao_contact) = $P_chao    ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoD1.$M_Roda1_contact) = 9.31544866425514613E+01 ! Algebraic states


joint.from (                        $S_LinhaSemente2.$S_DiscoD1.$J_connector) = $M_Isys       ! From Marker


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoD1.$M_chao_contact) = -4.02358415389621257E+02 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente2.$S_DiscoD1.$M_chao_contact) = $P_chao    ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoD2.$M_Roda1_contact) = 1.15480820379619580E+01 ! Algebraic states


joint.from (                        $S_LinhaSemente2.$S_DiscoD2.$J_connector) = $M_Isys       ! From Marker


marker.st.alg (           1 ,       $S_LinhaSemente2.$S_DiscoD2.$M_chao_contact) = -4.25530822662520052E+01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente2.$S_DiscoD2.$M_chao_contact) = $P_chao    ! [-] Contact geometry Primitive


joint.st.pos (            1 ,       $S_LinhaSemente3.$J_Estrutura ) = -1.02966594478838738E-22 ! Position
joint.st.pos (            2 ,       $S_LinhaSemente3.$J_Estrutura ) = 9.98554330679147939E-16 ! Position
joint.st.pos (            3 ,       $S_LinhaSemente3.$J_Estrutura ) = 9.79221294790533593E-23 ! Position
joint.st.pos (            4 ,       $S_LinhaSemente3.$J_Estrutura ) = 3.60638905120291953E-01 ! Position
joint.st.pos (            5 ,       $S_LinhaSemente3.$J_Estrutura ) = -7.50000000000000000E-01 ! Position
joint.st.pos (            6 ,       $S_LinhaSemente3.$J_Estrutura ) = 5.28390889286348364E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente3.$J_Estrutura ) = 2.56861591068376707E-72 ! Velocity
joint.st.vel (            2 ,       $S_LinhaSemente3.$J_Estrutura ) = -1.83214257983778792E-71 ! Velocity
joint.st.vel (            3 ,       $S_LinhaSemente3.$J_Estrutura ) = -2.27906024208755562E-72 ! Velocity
joint.st.vel (            4 ,       $S_LinhaSemente3.$J_Estrutura ) = 7.12445416791283556E-56 ! Velocity
joint.st.vel (            5 ,       $S_LinhaSemente3.$J_Estrutura ) = 2.59310802630639546E-72 ! Velocity
joint.st.vel (            6 ,       $S_LinhaSemente3.$J_Estrutura ) = 9.23441868426820293E-71 ! Velocity


prim.transparency (                 $S_LinhaSemente3.$P_chao      ) = 1.00000000000000000E+00 ! Transparency


joint.from (                        $S_LinhaSemente3.$J_connector ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_BarraCima.$M_Body1_contact) = -5.16244773342849683E-01 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente3.$S_BarraCima.$J_Body1) = -2.70526034059125509E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente3.$S_BarraCima.$J_Body1) = 2.52758722165764473E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_BarraBaixo.$M_Body1_contact) = 3.97756818462262896E+00 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente3.$S_BarraBaixo.$J_Body1) = -2.70526034059125842E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente3.$S_BarraBaixo.$J_Body1) = 2.93080009622478655E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscosV.$M_Roda1_contact) = 1.37519164736488553E+00 ! Algebraic states


joint.from (                        $S_LinhaSemente3.$S_DiscosV.$J_connector) = $M_Isys       ! From Marker


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscosV.$M_chao_contact) = 1.75537147391901893E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente3.$S_DiscosV.$M_chao_contact) = $P_chao    ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoD1.$M_Roda1_contact) = 9.31544866425514613E+01 ! Algebraic states


joint.from (                        $S_LinhaSemente3.$S_DiscoD1.$J_connector) = $M_Isys       ! From Marker


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoD1.$M_chao_contact) = -4.02358415389621257E+02 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente3.$S_DiscoD1.$M_chao_contact) = $P_chao    ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoD2.$M_Roda1_contact) = 1.15480820379619580E+01 ! Algebraic states


joint.from (                        $S_LinhaSemente3.$S_DiscoD2.$J_connector) = $M_Isys       ! From Marker


marker.st.alg (           1 ,       $S_LinhaSemente3.$S_DiscoD2.$M_chao_contact) = -4.25530822662520052E+01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente3.$S_DiscoD2.$M_chao_contact) = $P_chao    ! [-] Contact geometry Primitive


joint.st.pos (            1 ,       $S_LinhaSemente4.$J_Estrutura ) = 6.34871641105237309E-23 ! Position
joint.st.pos (            2 ,       $S_LinhaSemente4.$J_Estrutura ) = -4.54818522144799731E-16 ! Position
joint.st.pos (            3 ,       $S_LinhaSemente4.$J_Estrutura ) = -1.23453613998618272E-22 ! Position
joint.st.pos (            4 ,       $S_LinhaSemente4.$J_Estrutura ) = 3.60638905120293063E-01 ! Position
joint.st.pos (            5 ,       $S_LinhaSemente4.$J_Estrutura ) = 7.50000000000000000E-01 ! Position
joint.st.pos (            6 ,       $S_LinhaSemente4.$J_Estrutura ) = 5.28390889286347254E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente4.$J_Estrutura ) = 1.16248168532460955E-71 ! Velocity
joint.st.vel (            2 ,       $S_LinhaSemente4.$J_Estrutura ) = -6.10714193279263009E-72 ! Velocity
joint.st.vel (            3 ,       $S_LinhaSemente4.$J_Estrutura ) = -8.36988770426393434E-72 ! Velocity
joint.st.vel (            4 ,       $S_LinhaSemente4.$J_Estrutura ) = 7.12445416791283828E-56 ! Velocity
joint.st.vel (            5 ,       $S_LinhaSemente4.$J_Estrutura ) = 1.48452469871241630E-71 ! Velocity
joint.st.vel (            6 ,       $S_LinhaSemente4.$J_Estrutura ) = 9.84119078652161322E-71 ! Velocity


prim.transparency (                 $S_LinhaSemente4.$P_chao      ) = 1.00000000000000000E+00 ! Transparency


joint.from (                        $S_LinhaSemente4.$J_connector ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_BarraCima.$M_Body1_contact) = -5.16244773342849683E-01 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente4.$S_BarraCima.$J_Body1) = -2.70526034059125509E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente4.$S_BarraCima.$J_Body1) = 2.52758722165764473E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_BarraBaixo.$M_Body1_contact) = 3.97756818462262896E+00 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente4.$S_BarraBaixo.$J_Body1) = -2.70526034059125675E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente4.$S_BarraBaixo.$J_Body1) = 2.32765637718548214E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscosV.$M_Roda1_contact) = 1.37519164736488575E+00 ! Algebraic states


joint.from (                        $S_LinhaSemente4.$S_DiscosV.$J_connector) = $M_Isys       ! From Marker


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscosV.$M_chao_contact) = 1.75537147391901827E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente4.$S_DiscosV.$M_chao_contact) = $P_chao    ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoD1.$M_Roda1_contact) = 9.31544866425514755E+01 ! Algebraic states


joint.from (                        $S_LinhaSemente4.$S_DiscoD1.$J_connector) = $M_Isys       ! From Marker


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoD1.$M_chao_contact) = -4.02358415389621257E+02 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente4.$S_DiscoD1.$M_chao_contact) = $P_chao    ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoD2.$M_Roda1_contact) = 1.15480820379619580E+01 ! Algebraic states


joint.from (                        $S_LinhaSemente4.$S_DiscoD2.$J_connector) = $M_Isys       ! From Marker


marker.st.alg (           1 ,       $S_LinhaSemente4.$S_DiscoD2.$M_chao_contact) = -4.25530822662520052E+01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente4.$S_DiscoD2.$M_chao_contact) = $P_chao    ! [-] Contact geometry Primitive


joint.st.pos (            1 ,       $S_LinhaSemente5.$J_Estrutura ) = -1.08742937238947441E-22 ! Position
joint.st.pos (            2 ,       $S_LinhaSemente5.$J_Estrutura ) = 7.76441739575107026E-16 ! Position
joint.st.pos (            3 ,       $S_LinhaSemente5.$J_Estrutura ) = 1.37052853889901739E-22 ! Position
joint.st.pos (            4 ,       $S_LinhaSemente5.$J_Estrutura ) = 3.60638905120292286E-01 ! Position
joint.st.pos (            5 ,       $S_LinhaSemente5.$J_Estrutura ) = -1.25000000000000000E+00 ! Position
joint.st.pos (            6 ,       $S_LinhaSemente5.$J_Estrutura ) = 5.28390889286348364E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente5.$J_Estrutura ) = 9.20576888104432523E-72 ! Velocity
joint.st.vel (            2 ,       $S_LinhaSemente5.$J_Estrutura ) = 1.70999974118193598E-70 ! Velocity
joint.st.vel (            3 ,       $S_LinhaSemente5.$J_Estrutura ) = 1.70789119070735819E-71 ! Velocity
joint.st.vel (            4 ,       $S_LinhaSemente5.$J_Estrutura ) = 7.12445416791283013E-56 ! Velocity
joint.st.vel (            5 ,       $S_LinhaSemente5.$J_Estrutura ) = -1.27640992384161971E-71 ! Velocity
joint.st.vel (            6 ,       $S_LinhaSemente5.$J_Estrutura ) = 2.90808480348252172E-70 ! Velocity


prim.transparency (                 $S_LinhaSemente5.$P_chao      ) = 1.00000000000000000E+00 ! Transparency


joint.from (                        $S_LinhaSemente5.$J_connector ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_BarraCima.$M_Body1_contact) = -5.16244773342849683E-01 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente5.$S_BarraCima.$J_Body1) = -2.70526034059125509E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente5.$S_BarraCima.$J_Body1) = 2.52758722165764473E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_BarraBaixo.$M_Body1_contact) = 3.97756818462262896E+00 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente5.$S_BarraBaixo.$J_Body1) = -2.70526034059125731E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente5.$S_BarraBaixo.$J_Body1) = 3.11025695931739784E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscosV.$M_Roda1_contact) = 1.37519164736488553E+00 ! Algebraic states


joint.from (                        $S_LinhaSemente5.$S_DiscosV.$J_connector) = $M_Isys       ! From Marker


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscosV.$M_chao_contact) = 1.75537147391901871E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente5.$S_DiscosV.$M_chao_contact) = $P_chao    ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoD1.$M_Roda1_contact) = 9.31544866425514471E+01 ! Algebraic states


joint.from (                        $S_LinhaSemente5.$S_DiscoD1.$J_connector) = $M_Isys       ! From Marker


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoD1.$M_chao_contact) = -4.02358415389621200E+02 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente5.$S_DiscoD1.$M_chao_contact) = $P_chao    ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoD2.$M_Roda1_contact) = 1.15480820379619580E+01 ! Algebraic states


joint.from (                        $S_LinhaSemente5.$S_DiscoD2.$J_connector) = $M_Isys       ! From Marker


marker.st.alg (           1 ,       $S_LinhaSemente5.$S_DiscoD2.$M_chao_contact) = -4.25530822662520052E+01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente5.$S_DiscoD2.$M_chao_contact) = $P_chao    ! [-] Contact geometry Primitive


joint.st.pos (            1 ,       $S_LinhaSemente6.$J_Estrutura ) = 6.31050756288757103E-23 ! Position
joint.st.pos (            2 ,       $S_LinhaSemente6.$J_Estrutura ) = 7.11794336239326499E-16 ! Position
joint.st.pos (            3 ,       $S_LinhaSemente6.$J_Estrutura ) = -1.47944823923044714E-22 ! Position
joint.st.pos (            4 ,       $S_LinhaSemente6.$J_Estrutura ) = 3.60638905120292452E-01 ! Position
joint.st.pos (            5 ,       $S_LinhaSemente6.$J_Estrutura ) = 1.25000000000000000E+00 ! Position
joint.st.pos (            6 ,       $S_LinhaSemente6.$J_Estrutura ) = 5.28390889286348364E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente6.$J_Estrutura ) = -1.30781434617792130E-71 ! Velocity
joint.st.vel (            2 ,       $S_LinhaSemente6.$J_Estrutura ) = 6.71785612607189401E-71 ! Velocity
joint.st.vel (            3 ,       $S_LinhaSemente6.$J_Estrutura ) = -1.86760296602421458E-71 ! Velocity
joint.st.vel (            4 ,       $S_LinhaSemente6.$J_Estrutura ) = 7.12445416791283556E-56 ! Velocity
joint.st.vel (            5 ,       $S_LinhaSemente6.$J_Estrutura ) = -1.16393236684450465E-71 ! Velocity
joint.st.vel (            6 ,       $S_LinhaSemente6.$J_Estrutura ) = 1.21048391646935785E-70 ! Velocity


prim.transparency (                 $S_LinhaSemente6.$P_chao      ) = 1.00000000000000000E+00 ! Transparency


joint.from (                        $S_LinhaSemente6.$J_connector ) = $M_Isys                 ! From Marker


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_BarraCima.$M_Body1_contact) = -5.16244773342849683E-01 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente6.$S_BarraCima.$J_Body1) = -2.70526034059125065E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente6.$S_BarraCima.$J_Body1) = 1.72045646744132728E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_BarraBaixo.$M_Body1_contact) = 3.97756818462262896E+00 ! Algebraic states

joint.st.pos (            1 ,       $S_LinhaSemente6.$S_BarraBaixo.$J_Body1) = -2.70526034059125564E-01 ! Position
joint.st.vel (            1 ,       $S_LinhaSemente6.$S_BarraBaixo.$J_Body1) = 1.56290494751526219E-70 ! Velocity


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscosV.$M_Roda1_contact) = 1.37519164736488575E+00 ! Algebraic states


joint.from (                        $S_LinhaSemente6.$S_DiscosV.$J_connector) = $M_Isys       ! From Marker


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscosV.$M_chao_contact) = 1.75537147391901804E+00 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente6.$S_DiscosV.$M_chao_contact) = $P_chao    ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoD1.$M_Roda1_contact) = 9.31544866425514471E+01 ! Algebraic states


joint.from (                        $S_LinhaSemente6.$S_DiscoD1.$J_connector) = $M_Isys       ! From Marker


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoD1.$M_chao_contact) = -4.02358415389621200E+02 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente6.$S_DiscoD1.$M_chao_contact) = $P_chao    ! [-] Contact geometry Primitive


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoD2.$M_Roda1_contact) = 1.15480820379619580E+01 ! Algebraic states


joint.from (                        $S_LinhaSemente6.$S_DiscoD2.$J_connector) = $M_Isys       ! From Marker


marker.st.alg (           1 ,       $S_LinhaSemente6.$S_DiscoD2.$M_chao_contact) = -4.25530822662520052E+01 ! Algebraic states
marker.par (              3 ,       $S_LinhaSemente6.$S_DiscoD2.$M_chao_contact) = $P_chao    ! [-] Contact geometry Primitive


model.data.redundancy                                               = 'eJxjYBgFxAJGKorjkqMGoKXZMPMZ0fjUZqPbh89eUsVxsalpPgwYmCYaG5qYmZgZJlmYWpqnpqRaWJgnGVkaWBiapBoYpgIApsQILYADAAAAAAAA' ! Constraint redundancy data
model.data.dependency                                               = 'eJxjZEAFLEDMSABjA4T0oOvFZyYh/djYuOxANxcfn5A4GwG3kYKx2YkvfEh166gfhocfcLlhKPgB3W58fhmsfiAlPgbKDwamicaGJmYmZoZJFqaW5qkpqRYW5klGlgYWhiapBoapAHf1CPjkBQAAAAAAAA==' ! Solver state dependency data
